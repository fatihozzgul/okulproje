
--*************************************************************************************************************************
--**************************************      BU ADIMDA AŞAĞIDAKİ PUANLAR HESAPLANACAKTIR.       **************************
--**************************************      Taksit Puan Parametresi                     *********************************
--**************************************      Kredi Kartı Bankomat Puan                   *********************************
--**************************************      Geciken Borç Parametresi                    *********************************
--**************************************      İstihbarat Ret / Takip Puan Parametresi     *********************************
--*************************************************************************************************************************

----------------------------------------------------RAW DATA'NIN FORMATINI AYARLAMA------------------------------------------------------------

--Zimmetçi personel kümesini içeren tablo PERRISKSUISTIMALLISTESI'dur.SİLİNMEMELİDİR!!!
--PERRISKMVDHESHARSUIS tablosu insert edilecek şablon hesap hareketi tablosudur. 



create table PERRISKMVDHESHARSUIS as
select /*+parallel(8) */  ID,ISLEMKODU,HESAPNO,DOVIZCINSI,ISLEMTARIHI,ISLEMTUTARI,YENIBAKIYE,HAREKETACIKLAMASI,MUSTERIACIKLAMASI,
  CUZDANACIKLAMASI,RECORDDATE,RECORDUSERCODE,RECORDBRANCHCODE,RECORDSCREENCODE,KULLANICIKODU,SUBEKODU,
  KANALKODU,TRANSACTIONID,RECORDREQUESTOBJECTID,RECORDCHANNELCODE,MVDISLEMTUTARI,KRDISLEMTUTARI,FISNO,
  KARTNO,TERMINALID,HESAPSUBEKODU,KRDSKONT,MVDSKONT,ETLDATE,ETLSOURCE,MUSTERINO  from VITDWH.DW_MVD_HESAPHAREKET where 1=2

;




----------------------------------------------PERSONEL ORTALAMA MAAS HESAPLANIR----------------------------------------------------------
--PERRISKZMMTGENELTARIHGUNLUK tablosu 2012'den itibaren hesap hareketlerini günlük çekebilmek için hazırlanmış tarih tablosudur.

BEGIN
  FOR D1 IN
        (
        select  distinct TARIH1, TARIH2 from  PERRISKZMMTGENELTARIHGUNLUK   
        )
  LOOP



insert into PERRISKMVDHESHARSUIS
select /*+parallel(8) */  ID,ISLEMKODU,HESAPNO,DOVIZCINSI,ISLEMTARIHI,ISLEMTUTARI,YENIBAKIYE,HAREKETACIKLAMASI,MUSTERIACIKLAMASI,
  CUZDANACIKLAMASI,RECORDDATE,RECORDUSERCODE,RECORDBRANCHCODE,RECORDSCREENCODE,KULLANICIKODU,SUBEKODU,
  KANALKODU,TRANSACTIONID,RECORDREQUESTOBJECTID,RECORDCHANNELCODE,MVDISLEMTUTARI,KRDISLEMTUTARI,FISNO,
  KARTNO,TERMINALID,HESAPSUBEKODU,KRDSKONT,MVDSKONT,ETLDATE,ETLSOURCE,MUSTERINO  from VITDWH.DW_MVD_HESAPHAREKET
  where ISLEMTARIHI>=D1.TARIH1 and ISLEMTARIHI<=D1.TARIH2 and 
  MUSTERINO IN (select distinct MUSTERINO from PERRISKSUISTIMALLISTESI) -- where ESKIYENI=(select MAX(ESKIYENI) from PERRISKSUISTIMALLISTESI) ) 

;
COMMIT;
END LOOP;
END;
;



/*Yukarıda oluşturulan hesap hareket tablosu suistimali işlem gerçekleştiren personelin 2012'den itibaren tüm hesap hareketlerini içerir.
  Aşağıdaki kod bloğu zimmetçi özelinde son 1 yılın maaş ortalamasını hesaplar.
  Burada HAREKETACIKLAMASI sütununda açıklama bazında filtreleme yapılarak küme oluşturulur. Gün farkı 365 günden az olan işlemler belirlenir.
*/
CREATE table PERRISKMAASORT as
select GG.*,30*GG.TOPLAMYATAN/365 as ORTALAMAMAAS from (
select MUSTERINO,ADSOYAD,SICIL,HESAPNO, sum(ISLEMTUTARI) as TOPLAMYATAN from
(select * from (
select DD.*,round(DD.GUNFARK,0) as GUNFARK2  from (
select CC.*,case when CC.ZT>=CC.ISLEMTARIHI then 'EVET'
when  CC.ZT<CC.ISLEMTARIHI then 'HAYIR' end as DURUM , (CC.ZT-CC.ISLEMTARIHI) as GUNFARK            
 from (
select AA.*,BB.ADSOYAD,BB.ZT,BB.SICIL from (
select * from (
select * from 
PERRISKMVDHESHARSUIS
where HAREKETACIKLAMASI LIKE '%MaasOde%' or HAREKETACIKLAMASI LIKE '%EkOde%'
or HAREKETACIKLAMASI LIKE '%MAAS%' or HAREKETACIKLAMASI LIKE '%PRİM%' or HAREKETACIKLAMASI LIKE '%TEMETT%'or HAREKETACIKLAMASI LIKE '%IKRAMI%'
or HAREKETACIKLAMASI LIKE '%MAAŞ%' or HAREKETACIKLAMASI LIKE '%İKRAMİ%' or HAREKETACIKLAMASI LIKE '%PRIM%' or HAREKETACIKLAMASI LIKE '00184VB%'
or HAREKETACIKLAMASI LIKE '00184VB%'  or HAREKETACIKLAMASI  LIKE 'FARK%' or HAREKETACIKLAMASI  LIKE 'DENGE%'  
)
UNION 
(
select * from 
PERRISKMVDHESHARSUIS
where MUSTERIACIKLAMASI LIKE '%MaasOde%' or MUSTERIACIKLAMASI LIKE '%EkOde%'
or MUSTERIACIKLAMASI LIKE '%MAAS%' or MUSTERIACIKLAMASI LIKE '%PRİM%' or MUSTERIACIKLAMASI LIKE '%TEMETT%'or MUSTERIACIKLAMASI LIKE '%IKRAMI%'
or MUSTERIACIKLAMASI LIKE '%MAAŞ%' or MUSTERIACIKLAMASI LIKE '%İKRAMİ%' or MUSTERIACIKLAMASI LIKE '%PRIM%' or MUSTERIACIKLAMASI LIKE '00184VB%' 
or MUSTERIACIKLAMASI LIKE '00184VB%'  or MUSTERIACIKLAMASI LIKE 'FARK%'  or MUSTERIACIKLAMASI LIKE 'DENGE%' 
)) AA
left outer join
(
select * from PERRISKSUISTIMALLISTESI) BB on AA.MUSTERINO=BB.MUSTERINO) CC ) DD)
--order by GUNFARK asc
where DURUM LIKe '%EVET%' and GUNFARK2<365)
group by MUSTERINO,ADSOYAD,SICIL,HESAPNO ) GG

;


/*------------------------------------PERRISKSUISTIMALLISTESI İLE ORTALAMA MAAS BIRLESTIRILIR-----------------------------------------------------

PERRISKSUISTIMALLISTESI ile PERRISKMAASORT tablosu birleştirilir. Böylece   ADSOYAD,MUSTERINO,SICIL,ZT,ORTALAMAMAAS ve TCKIMLIKNO bilgilerini içeren
tablo oluşturulur.

*/

create table PERRISKZMMTMAASORT as
select HH.*,PER.TCKIMLIKNO as TCKIMLIKNO from
(select RW.ADSOYAD, SUBSTR(concat('0000000',RW.MUSTERINO),-12) as MUSTERINO, RW.SICIL, RW.ZT, round(OM.ORTALAMAMAAS,0) as ORTALAMAMAAS from 
PERRISKSUISTIMALLISTESI RW left outer join PERRISKMAASORT OM on OM.MUSTERINO=RW.MUSTERINO) HH
left outer join (SELECT TCKIMLIKNO,MUSTERINO FROM IKY.DW_IKY_PERSONEL) PER on PER.MUSTERINO=HH.MUSTERINO ;



--                                     ŞUANA KADAR 99 ADET MUSTERIYE(personel) ait kayıt var.

                     

/*-----------------------------------------------KKB'de ILGILI SUTUNLAR ALINIR--------------------------------------------------------------------
Yukarıda ortalama maaş hesaplama adımında yapılanlara benzer adımlar izlenir. Öncelikle suistimaliişlem gerçekleştiren personellerin 2012'den 
itibaren KKB istihbarat bilgileri çekilir ve PERRISKSUISTIMALKDS tablosuna insert edilir.
*/

create TABLE PERRISKKDSCAGRI as
SELECT * --ID, TCKIMLIKNO, RECORDDATE
                           FROM VITDWH.DW_BKR_KARARDESTEKCAGRI
                          WHERE     TCKIMLIKNO IN (SELECT distinct tCKIMLIKNO
                                                     FROM PERRISKZMMTMAASORT);
                                                     

CREATE INDEX PERRISKKDS ON PERRISKKDSCAGRI (RECORDDATE);


CREATE TABLE PERRISKKDSKKBIST as
SELECT ID AS ID2,RECORDDATE AS RECORDDATE2,VB1669, VB1680, VB1689,VB1694 FROM VITDWH.DW_BKR_KARARDESTEKKKBIST where ID IN (select distinct ID from PERRISKKDSCAGRI);

CREATE INDEX PERRISKKDSKKBIST ON PERRISKKDSKKBIST (RECORDDATE2);

CREATE TABLE PERRISKKDSDESTEKYEDEK as
SELECT ID AS ID3,RECORDDATE AS RECORDDATE3,VS1137,VS1138,VS1139,VS1140,VS1141 FROM VITDWH.DW_BKR_KARARDESTEKYEDEK where ID IN (select distinct ID from PERRISKKDSCAGRI);

CREATE INDEX PERRISKKDSYEDEK ON PERRISKKDSDESTEKYEDEK (RECORDDATE3);

BEGIN
   FOR D1 IN (SELECT DISTINCT TARIH1, TARIH2 FROM PERRISKZMMTGENELTARIHGUNLUK)
   LOOP
      INSERT INTO PERRISKSUISTIMALKDS
         SELECT ID,TCKN,RECORDDATE,VB1669,VB1680,VB1689,VB1694,VS1137,VS1138,VS1139,VS1140,VS1141
           FROM (SELECT AA.ID,AA.TCKIMLIKNO AS TCKN,AA.RECORDDATE, BB.VB1669,BB.VB1680,
                        BB.VB1689,BB.VB1694,CC.VS1137,CC.VS1138,CC.VS1139,CC.VS1140, CC.VS1141
                   FROM (SELECT ID, TCKIMLIKNO, RECORDDATE
                           FROM PERRISKKDSCAGRI WHERE recorddate >= D1.TARIH1
                                AND recorddate < D1.TARIH2) AA
                        LEFT OUTER JOIN
                        (SELECT * from  PERRISKKDSKKBIST
                          WHERE  recorddate2 >= D1.TARIH1 AND recorddate2 < D1.TARIH2) BB ON AA.ID = BB.ID2
                        LEFT OUTER JOIN
                        (SELECT * from  PERRISKKDSDESTEKYEDEK
                          WHERE recorddate3 >= D1.TARIH1 AND recorddate3 < D1.TARIH2) CC ON AA.ID = CC.ID3);

      COMMIT;
   END LOOP;
END;



create TABLE PERRISKSUISTIMALKDSANA AS
     SELECT /*+ parallel(256)*/
            t1.id, t1.tckimlikno, t1.islemtarihi, t3.VB1669,t3.Vb1675,t3.Vb1679,t3.VB1680,
            t3.Vb1684,t3.VB1685,t3.Vb1689,t3.Vb1690,t3.Vb1691,t3.VB1694,t3.VB1695,t4.VS1137,
            t4.VS1138,t4.VS1139,t4.VS1140,t4.VS1141,t4.VS1143,t5.VB1901,t5.VB1902,t5.VB1903,
            t5.VB1904,t5.VB1905,t5.VB1906,t5.VB1907,t5.VB1908,t5.VB1909,t5.VB1910,t5.VB1911,
            t5.VB1912,t5.VB1913,t5.VB1914,t5.VB1915,t5.VB1922,t5.VB1923,t5.VB1924
       FROM PERRISKKDSCAGRI t1
            LEFT OUTER JOIN VITDWH.DW_BKR_KARARDESTEKBIST t5 ON t5.id = t1.id
            LEFT OUTER JOIN VITDWH.DW_BKR_KARARDESTEKKKBIST t3 ON t3.id = t1.id
            LEFT OUTER JOIN VITDWH.DW_BKR_KARARDESTEKYEDEK t4 ON t4.id = t1.id
      WHERE t1.islemtarihi >= TO_DATE ('010112', 'ddmmyy') AND t1.cagritipi = 1 AND t1.cagrino = 1 ORDER BY t1.islemtarihi DESC;


--Aşağıdakitabloda sayısal değerlerin formatı ayarlanır. WHERE koşulu sayısal değer yerine gelen farklı karakterleri elemeyi sağlar.
create table PERRISKSUISTIMALKDSFORMAT as
select id,tckimlikno,islemtarihi,to_number(REPLACE(VB1669,'.',','))  as VB1669,
to_number(REPLACE(Vb1675,'.',','))  as VB1675,to_number(REPLACE(Vb1679,'.',','))  as VB1679,
to_number(REPLACE(VB1680,'.',','))  as VB1680,to_number(REPLACE(Vb1684,'.',','))  as VB1684,
to_number(REPLACE(VB1685,'.',','))  as VB1685,to_number(REPLACE(Vb1689,'.',','))  as VB1689,
to_number(REPLACE(Vb1690,'.',','))  as VB1690,to_number(REPLACE(Vb1691,'.',','))  as VB1691,
to_number(REPLACE(VB1694,'.',','))  as VB1694,to_number(REPLACE(VB1695,'.',','))  as VB1695,
to_number(REPLACE(VS1137,'.',','))  as VS1137,to_number(REPLACE(VS1138,'.',','))  as VS1138,
to_number(REPLACE(VS1139,'.',','))  as VS1139,to_number(REPLACE(VS1140,'.',','))  as VS1140,
to_number(REPLACE(VS1141,'.',','))  as VS1141,to_number(REPLACE(VS1143,'.',','))  as VS1143,
to_number(REPLACE(VB1901,'.',','))  as VB1901,to_number(REPLACE(VB1902,'.',','))  as VB1902,
to_number(REPLACE(VB1903,'.',','))  as VB1903,to_number(REPLACE(VB1904,'.',','))  as VB1904,
to_number(REPLACE(VB1905,'.',','))  as VB1905,to_number(REPLACE(VB1906,'.',','))  as VB1906,
to_number(REPLACE(VB1907,'.',','))  as VB1907,to_number(REPLACE(VB1908,'.',','))  as VB1908,
to_number(REPLACE(VB1909,'.',','))  as VB1909,to_number(REPLACE(VB1910,'.',','))  as VB1910,
to_number(REPLACE(VB1911,'.',','))  as VB1911,to_number(REPLACE(VB1912,'.',','))  as VB1912,
to_number(REPLACE(VB1913,'.',','))  as VB1913,to_number(REPLACE(VB1914,'.',','))  as VB1914,
to_number(REPLACE(VB1915,'.',','))  as VB1915,to_number(REPLACE(VB1922,'.',','))  as VB1922,
to_number(REPLACE(VB1923,'.',','))  as VB1923,to_number(REPLACE(VB1924,'.',','))  as VB1924
from PERRISKSUISTIMALKDSANA   
where REGEXP_REPLACE(VB1689, '[^a-zA-Z_]') is null OR
      REGEXP_REPLACE(VB1691, '[^a-zA-Z_]') is null OR
      REGEXP_REPLACE(VB1694, '[^a-zA-Z_]') is null;

--Yukarıda çekilen VB ve VS ile başlayan sütunlar uygun şekilde kullanılarak KKB başlıkları oluşturulur.
create table PERRISKSUISTIMALKDSBISTSON as
select 
H.ID as ID,
H.TCKIMLIKNO as TCKN,
H.ISLEMTARIHI as RECORDDATE,
-----------------------------------------------------------------------------
(NVL(H.VB1675,0) + NVL(H.VB1679,0)+NVL(H.VB1905,0)+NVL(H.VB1908,0)+NVL(H.VB1902,0)) as KKB_TIK_TOPLAM_TAKSIT,
NVL(H.VB1680,0) as KKB_TIK_TOPLAM_RISK,
NVL(H.VB1684,0) as KKB_KONUT_TOPLAM_TAKSIT,
NVL(H.VB1685,0) as KKB_KONUT_TOPLAM_RISK,
(NVL(H.VB1675,0)+NVL(H.VB1679,0)+NVL(H.VB1684,0)++NVL(H.VB1905,0)+NVL(H.VB1908,0)+NVL(H.VB1902,0)) as KKB_KRD_TAKSITTOP_2,
-----------------------------------------------------------------------------
(NVL(H.VB1695,0)+NVL(H.VB1914,0)) as KKB_KMH_LIMIT,
(NVL(H.VB1694,0)+NVL(H.VB1915,0)) as KKB_KMH_RISK,
(NVL(H.VB1691,0)+NVL(H.VB1910,0)) as KKB_KK_LIMIT,
(NVL(H.VB1911,0)+NVL(H.VB1689,0)) as KKB_KK_RISK,
(NVL(H.VB1694,0)+NVL(H.VB1915,0)+NVL(H.VB1911,0)+NVL(H.VB1689,0)) as KKB_KK_KMH_TOPTAK,
-------------------------------------------------------------------------------
---------------------------------VB_TAKSİT-RİSK---------------------------------
NVL(H.VB1905,0) as VB_TIK_TAKSIT,
NVL(H.VB1906,0) as VB_TIK_RISK,
NVL(H.VB1908,0) as VB_KONUT_TAKSIT,
NVL(H.VB1909,0) as VB_KONUT_RISK,
NVL(H.VB1902,0) as VB_ARAC_TAKSIT,
NVL(H.VB1903,0) as VB_ARAC_RISK,
NVL(H.VB1923,0) as VB_TOPLAMTAKSIT,
(NVL(H.VB1902,0)+ NVL(H.VB1905,0) + NVL(H.VB1908,0)) as VB_TOPLAMTAKSIT_2,
--------------------------------------------------------------------------------
---------------------------------VB_TAKSİT-LIMIT---------------------------------
NVL(H.VB1901,0) as VB_ARACLIMIT, 
NVL(H.VB1904,0) as VB_TIKLIMIT, 
NVL(H.VB1907,0) as VB_KONUT_LIMIT,
NVL(H.VB1922,0) as VB_TOPLAM_LIMIT,
(NVL(H.VB1901,0)+NVL(H.VB1904,0) + NVL(H.VB1907,0)) as VB_TOPLAM_LIMIT_2,
-----------------------------------------------------------------------------
NVL(H.VB1910,0) as VB_KK_LIMIT,
NVL(H.VB1911,0) as VB_KK_TAKSIT,
NVL(H.VB1914,0) as VB_KMH_LIMIT,
NVL(H.VB1915,0) as VB_KMH_TAKSIT,
-------------------------------------------------------------------------------
NVL(H.VB1924,0) as VB_TOPLAMRISK,
(NVL(H.VB1906,0) + NVL(H.VB1909,0)+NVL(H.VB1903,0)) as VB_TOPLAMRISK_2,
----------------------------KKB_-GECIKME----------------------------------------
NVL(H.VS1137,0) as KKB_TIK_GECIKME,
NVL(H.VS1138,0) as KKB_OTO_GECIKME,
NVL(H.VS1139,0) as KKB_KONUT_GECIKME,
NVL(H.VS1140,0) as KKB_KMH_GECIKME,
NVL(H.VS1141,0) as KKB_KK_GECIKME,

-----------------------------DiğerBanka_KK_RİSK---------------------------------
NVL(H.VB1904,0) as DB_KREDI_LIMIT,
NVL(H.VB1691,0) as DB_KK_LIMIT,
NVL(H.VB1689,0) as DB_KK_ACIKBAKIYE,
NVL(H.VB1694,0) as DB_KMH_ACIKBAKIYE,
NVL(H.VB1669,0) as DB_BRY_TAKSITTOP
from PERRISKSUISTIMALKDSFORMAT H ;




-------------------------------------------------------ZIMMET TARIHI ONCESI KKB TESPTI---------------------------------------------------------------
--Burada zimmet tarihi öncesi en güncel istihbarat çekilir.
CREATE TABLE PERRISKZMMTKDSANAHTAR AS
   SELECT TCKN,GUN,CONCAT (TCKN, SUBSTR (CONCAT ('00000', replace(GUN,'-',0)), -4)) AS ANAHTAR
     FROM (  SELECT TCKN, MIN (GUNFARKI) AS GUN FROM (SELECT *
                       FROM (  SELECT ID, TCKN, MIN (FARK) AS GUNFARKI
                                 FROM (SELECT SB.*,MS.ZT, ROUND (ZT - RECORDDATE, 2) AS FARK,
                                              CASE WHEN ZT > RECORDDATE THEN 'EVET' ELSE 'HAYIR' END AS DURUM
                                         FROM (SELECT * FROM PERRISKSUISTIMALKDSBISTSON) SB
                                              LEFT OUTER JOIN
                                              (SELECT * FROM PERRISKZMMTMAASORT) MS
                                                 ON MS.TCKIMLIKNO = SB.TCKN) WHERE DURUM = 'EVET'  OR (DURUM='HAYIR' and FARK>-60)
                             GROUP BY TCKN, ID) HH
                            LEFT OUTER JOIN (SELECT * FROM PERRISKZMMTMAASORT) MS
                               ON MS.TCKIMLIKNO = HH.TCKN) TT
           GROUP BY TCKN);
        
        
--BURADA KALDIK   

CREATE TABLE PERRISKZMMTKDSANAHTARS AS
   SELECT TL.*,  
   concat( TO_CHAR(TL.ZT, 'YYYY'),TO_CHAR(TL.ZT, 'MM')) as DONEM,
   CONCAT (TL.TCKN, SUBSTR (CONCAT ('00000', TL.PID), -2)) AS ANAHTAR2
     FROM (SELECT DENSE_RANK () OVER (PARTITION BY AJ.TCKN ORDER BY TRUNC (AJ.ID) ASC) AS PID,AJ.*
             FROM (  SELECT *
                       FROM (SELECT HH.*,MS.*,CONCAT(HH.TCKN,SUBSTR(CONCAT('00000', replace(HH.GUNFARKI,'-',0)),-4)) AS ANAHTAR
                               FROM (  SELECT ID, TCKN, MIN (FARK) AS GUNFARKI
                                         FROM (SELECT SB.*,MS.ZT, ROUND (ZT - RECORDDATE, 2) AS FARK,
                                                      CASE WHEN ZT > RECORDDATE  THEN 'EVET'ELSE 'HAYIR' END AS DURUM
                                                 FROM (SELECT * FROM PERRISKSUISTIMALKDSBISTSON) SB
                                                      LEFT OUTER JOIN
                                                      (SELECT * FROM PERRISKZMMTMAASORT) MS
                                                         ON MS.TCKIMLIKNO=SB.TCKN)
                                        WHERE DURUM = 'EVET' OR (DURUM='HAYIR' and FARK>-60)
                                     GROUP BY TCKN, ID) HH
                                    LEFT OUTER JOIN (SELECT * FROM PERRISKZMMTMAASORT) MS ON MS.TCKIMLIKNO = HH.TCKN)
                      WHERE ANAHTAR IN (SELECT ANAHTAR FROM PERRISKZMMTKDSANAHTAR)
                   ORDER BY TCKN) AJ) TL;
                   
            
       
        

CREATE table PERRISKZMMTKDS_ANAHTARS as 
select * from PERRISKZMMTKDSANAHTARS where ANAHTAR2 IN ( select MAX(ANAHTAR2) as ANAHTAR from PERRISKZMMTKDSANAHTARS
group by TCKN);
 
/*create table PERRISKZMMTKDS_ANAHTARSON as     
select FZ.*, F4.KMH_ACIKBAKIYE, F4.KK_ACIKBAKIYE,(F4.BRY_KRD_TAKSITTOP+F4.BRY_KONUT_TAKSITTOP+F4.BRY_ARAC_TAKSITTOP)  AS TAKSITTOPLAMI from 
PERRISKZMMTKDS_ANAHTARS FZ left outer join 
KARARDESTEKKKBIST_SABLON_FO4 F4 on FZ.ID=F4.ID*/


------------------------------------------------------------------------------------------------------------------------
CREATE table PERRISKZMMTKDSBISTANAHTARLI as
select * from PERRISKSUISTIMALKDSBISTSON where ID in (select ID from PERRISKZMMTKDS_ANAHTARS) 
;


CREATE table PERRISKZMMTKDSBISTSONKUME as
select PL.*, concat(PL.TCKN,substr(concat('000', PL.PID),-2)) as ANAHTAR from (
SELECT HH.*, DENSE_RANK() OVER (PARTITION BY HH.TCKN ORDER BY TRUNC(HH.RECORDDATE) ASC) AS PID
FROM PERRISKZMMTKDSBISTANAHTARLI  HH) PL
;


CREATE table PERRISKZMMTKDSSONGRUP as
select FB.* from PERRISKZMMTKDSBISTSONKUME FB where ANAHTAR IN (
select ANAHTAR from (
select AA.*, concat(AA.TCKN,substr(concat('000', AA.MAXPID),-2)) as ANAHTAR  from ( 
select TCKN, MAX(PID) as MAXPID from  PERRISKZMMTKDSBISTSONKUME
group by TCKN) AA));

CREATE TABLE PERRISKZMMTKDSTAKSITTOP AS
SELECT /*+parallel(8) */  TCKN,KKB_KRD_TAKSITTOP_2 AS TAKSITTOPLAMI FROM PERRISKZMMTKDSSONGRUP;

CREATE TABLE PERRISKZMMTKDSTOPKBRISK AS
SELECT /*+parallel(8) */  TCKN,KKB_KMH_RISK AS TOPLAMKBRISK FROM PERRISKZMMTKDSSONGRUP;

--WHERE A.DONEM=(SELECT MAX(DONEM) FROM PERSONEL_KKB) 
;
CREATE TABLE PERRISKZMMTKDSTOPKKRISK AS
SELECT /*+parallel(8) */  TCKN,KKB_KK_RISK AS TOPLAMKKRISK FROM PERRISKZMMTKDSSONGRUP;



CREATE table PERRISKZMMTKDSKKBFOG as
select T1.*,T2.TOPLAMKBRISK,T3.TOPLAMKKRISK, (T1.TAKSITTOPLAMI+T2.TOPLAMKBRISK+T3.TOPLAMKKRISK) as TAKTAKSITTOPLAMI  from PERRISKZMMTKDSTAKSITTOP T1
left outer join PERRISKZMMTKDSTOPKBRISK T2 on T1.TCKN=T2.TCKN
left outer join PERRISKZMMTKDSTOPKKRISK T3 on T1.TCKN=T3.TCKN;

/*
create TABLE PERRISKZMMTKKBTAKSITPUANLARI AS
select KKB.*,nvl(KK.KKTAKSITTOPLAMI,0) as KKTAKSITTOPLAMI ,nvl(KB.KBTAKSITTOPLAMI,0) as KBTAKSITTOPLAMI,nvl(TP.TAKTAKSITTOPLAMI,0) as TAKTAKSITTOPLAMI 
from PERSONEL_KKB_FO KKB left outer join 
(select TCKN as KKTCKN,TOPLAMKKRISK as  KKTAKSITTOPLAMI from PERRISKZMMTKDSTOPKKRISK) KK on KK.KKTCKN=KKB.TCNO
left outer join
(select TCKN as KBTCKN,TOPLAMKBRISK as  KBTAKSITTOPLAMI from PERRISKZMMTKDSTOPKBRISK) KB on KB.KBTCKN=KKB.TCNO
left outer join 
(select TCKN as TKTCKN,TAKSITTOPLAMI as  TAKTAKSITTOPLAMI from PERRISKZMMTKDSTAKSITTOP) TP on TP.TKTCKN=KKB.TCNO
*/

CREATE TABLE PERRISKZMMTKKBTAKSITORAN AS       
        SELECT MAAS_PERSONEL.SICIL AS SICIL,KKB.TAKTAKSITTOPLAMI,
        ORTALAMA_AYLIK,ROUND(NVL(KKB.TAKTAKSITTOPLAMI,0)/ORTALAMA_AYLIK,2) AS KKB_TAKSIT_MAAS_ORANI

   FROM
        (
            SELECT DISTINCT KB.TAKTAKSITTOPLAMI, KB.TCKN--,KONUT.KONUT_TOPLAM_TAKSIT
            FROM PERRISKZMMTKDSKKBFOG  KB --where kb.toplamkkrisk is not null 
            --WHERE KB.DONEM=(SELECT MAX(DONEM) FROM PERSONEL_KKB_FO WHERE TCNO=KB.TCNO)
        )KKB 
        LEFT OUTER JOIN 
        (
            ---MAAŞ 
--select distinct tCNO from PERRISKZMMTKDSKKBFOG
            
            SELECT SICIL,TCKIMLIKNO AS TC, MUSTERINO, ORTALAMAMAAS as ORTALAMA_AYLIK
            FROM PERRISKZMMTMAASORT 
                              
        ) MAAS_PERSONEL ON KKB.TCKN = MAAS_PERSONEL.TC; 
       
        ;


/******************************************GUNCEL VERSIYON--AMAC: ENFLASYON UYARLAMA************************************************************
--Bu noktada farklı tarihlerde zimmet gerçekleştirmiş personeller 2022 yılsonuna ait zimmetçi olmayan personel kümesi ile birleştirileceği için
aşağıdaki enflasyon projeksiyon işlemi gerçekleştirilir. Zimmetçi olmayan personel kümesi her güncellendiğinde buradaki katsayılar MANUEL olarak
güncellenecektir. Bunun için aşağıdaki linke gidilir. Günümüz enflasyon değeri(2022/12) ile geçmişe dönük katsayılar bulunur.  

 https://herkesicin.tcmb.gov.tr/wps/wcm/connect/ekonomi/hie/icerik/enflasyon+hesaplayici

*/
CREATE table PERRISKKDSSAB as
select F6.*, case when F6.donem IN ('201307','201308','201309','201310','201311','201312') then 9.34 
                  when F6.donem IN ('201401','201402','201403','201404','201405','201406') then 8.84
                  when F6.donem IN ('201407','201408','201409','201410','201411','201412') then 8.64
                  when F6.donem IN ('201501','201502','201503','201504','201505','201506') then 8.24
                  when F6.donem IN ('201507','201508','201509','201510','201511','201512') then 7.94
                  when F6.donem IN ('201601','201602','201603','201604','201605','201606') then 7.65
                  when F6.donem IN ('201607','201608','201609','201610','201611','201612') then 7.31
                  when F6.donem IN ('201701','201702','201703','201704','201705','201706') then 6.9
                  when F6.donem IN ('201707','201708','201709','201710','201711','201712') then 6.53
                  when F6.donem IN ('201801','201802','201803','201804','201805','201806') then 5.99
                  when F6.donem IN ('201807','201808','201809','201810','201811','201812') then 5.43
                  when F6.donem IN ('201901','201902','201903','201904','201905','201906') then 5.17
                  when F6.donem IN ('201907','201908','201909','201910','201911','201912') then 4.86
                  when F6.donem IN ('202001','202002','202003','202004','202005','202006') then 4.59
                  when F6.donem IN ('202007','202008','202009','202010','202011','202012') then 4.24
                  when F6.donem IN ('202101','202102','202103','202104','202105','202106') then 3.91
                  when F6.donem IN ('202107','202108','202109','202110','202111','202112') then 3.11
                  when F6.donem IN ('202201','202202','202203','202204','202205','202206') then 2.19
                  when F6.donem IN ('202207','202208','202209','202210','202211','202212') then 1.9
                  when F6.donem IN ('202301','202302','202303','202304','202305','202306') then 1.58
                  when F6.donem IN ('202307','202308','202309','202310','202311','202312') then 1.15
                  when F6.donem IN ('202401','202402','202403') then 1.00
                  end as KATSAYI_TAKSIT,
             case when F6.donem IN ('201307','201308','201309','201310','201311','201312') then 9.34 
                  when F6.donem IN ('201401','201402','201403','201404','201405','201406') then 8.84
                  when F6.donem IN ('201407','201408','201409','201410','201411','201412') then 8.64
                  when F6.donem IN ('201501','201502','201503','201504','201505','201506') then 8.24
                  when F6.donem IN ('201507','201508','201509','201510','201511','201512') then 7.94
                  when F6.donem IN ('201601','201602','201603','201604','201605','201606') then 7.65
                  when F6.donem IN ('201607','201608','201609','201610','201611','201612') then 7.31
                  when F6.donem IN ('201701','201702','201703','201704','201705','201706') then 6.9
                  when F6.donem IN ('201707','201708','201709','201710','201711','201712') then 6.53
                  when F6.donem IN ('201801','201802','201803','201804','201805','201806') then 5.99
                  when F6.donem IN ('201807','201808','201809','201810','201811','201812') then 5.43
                  when F6.donem IN ('201901','201902','201903','201904','201905','201906') then 5.17
                  when F6.donem IN ('201907','201908','201909','201910','201911','201912') then 4.86
                  when F6.donem IN ('202001','202002','202003','202004','202005','202006') then 4.59
                  when F6.donem IN ('202007','202008','202009','202010','202011','202012') then 4.24
                  when F6.donem IN ('202101','202102','202103','202104','202105','202106') then 3.91
                  when F6.donem IN ('202107','202108','202109','202110','202111','202112') then 3.11
                  when F6.donem IN ('202201','202202','202203','202204','202205','202206') then 2.19
                  when F6.donem IN ('202207','202208','202209','202210','202211','202212') then 1.9
                  when F6.donem IN ('202301','202302','202303','202304','202305','202306') then 1.58
                  when F6.donem IN ('202307','202308','202309','202310','202311','202312') then 1.15
                  when F6.donem IN ('202401','202402','202403') then 1.00
                  end as KATSAYI_LIMIT
                   from                     
(select f5.*, concat( TO_CHAR(RECORDDATE, 'YYYY'),TO_CHAR(RECORDDATE, 'MM')) as DONEM from PERRISKZMMTKDSBISTANAHTARLI F5) F6;




CREATE table PERRISKKDSSABGENIS as
select ID,TCKN,RECORDDATE,
  (KATSAYI_TAKSIT*KKB_TIK_TOPLAM_TAKSIT) as  KKB_TIK_TOPLAM_TAKSIT_G    ,
  (KATSAYI_TAKSIT*KKB_TIK_TOPLAM_RISK) as KKB_TIK_TOPLAM_RISK_G       ,
  (KATSAYI_TAKSIT*KKB_KONUT_TOPLAM_TAKSIT) as  KKB_KONUT_TOPLAM_TAKSIT_G  ,
  (KATSAYI_TAKSIT*KKB_KONUT_TOPLAM_RISK) as  KKB_KONUT_TOPLAM_RISK_G   ,
  (KATSAYI_TAKSIT*KKB_KRD_TAKSITTOP_2) as  KKB_KRD_TAKSITTOP_2_G     ,
  (KATSAYI_LIMIT*KKB_KMH_LIMIT) as KKB_KMH_LIMIT_G           ,
  (KATSAYI_TAKSIT*KKB_KMH_RISK) as  KKB_KMH_RISK_G           ,
  (KATSAYI_LIMIT*KKB_KK_LIMIT)  as    KKB_KK_LIMIT_G        ,
  (KATSAYI_TAKSIT*KKB_KK_RISK)   as  KKB_KK_RISK_G          ,
  (KATSAYI_TAKSIT*KKB_KK_KMH_TOPTAK) as KKB_KK_KMH_TOPTAK_G        ,
  (KATSAYI_TAKSIT*VB_TIK_TAKSIT) as VB_TIK_TAKSIT_G            ,
  (KATSAYI_TAKSIT*VB_TIK_RISK) as  VB_TIK_RISK_G            ,
  (KATSAYI_TAKSIT*VB_KONUT_TAKSIT) as VB_KONUT_TAKSIT_G          ,
  (KATSAYI_TAKSIT*VB_KONUT_RISK) as  VB_KONUT_RISK_G           ,
  (KATSAYI_TAKSIT*VB_ARAC_TAKSIT) as VB_ARAC_TAKSIT_G           ,
  (KATSAYI_TAKSIT*VB_ARAC_RISK) as VB_ARAC_RISK_G             ,
  (KATSAYI_TAKSIT*VB_TOPLAMTAKSIT) as  VB_TOPLAMTAKSIT_G         ,
  (KATSAYI_TAKSIT*VB_TOPLAMTAKSIT_2 ) as   VB_TOPLAMTAKSIT_2_G      ,
  (KATSAYI_LIMIT*VB_ARACLIMIT) as VB_ARACLIMIT_G             ,
  (KATSAYI_LIMIT*VB_TIKLIMIT)  as  VB_TIKLIMIT_G           ,
  (KATSAYI_LIMIT*VB_KONUT_LIMIT) as    VB_KONUT_LIMIT_G       ,
  (KATSAYI_LIMIT*VB_TOPLAM_LIMIT) as  VB_TOPLAM_LIMIT_G         ,
  (KATSAYI_LIMIT*VB_TOPLAM_LIMIT_2) as VB_TOPLAM_LIMIT_2_G        ,
  (KATSAYI_LIMIT*VB_KK_LIMIT)  as   VB_KK_LIMIT_G          ,
  (KATSAYI_TAKSIT*VB_KK_TAKSIT)as    VB_KK_TAKSIT_G          ,
  (KATSAYI_LIMIT*VB_KMH_LIMIT)  as   VB_KMH_LIMIT_G         ,
  (KATSAYI_TAKSIT*VB_KMH_TAKSIT) as VB_KMH_TAKSIT_G           ,
  (KATSAYI_TAKSIT*VB_TOPLAMRISK )  as VB_TOPLAMRISK_G         ,
  (KATSAYI_TAKSIT*VB_TOPLAMRISK_2) as VB_TOPLAMRISK_2_G         ,
  (KATSAYI_TAKSIT*KKB_TIK_GECIKME ) as KKB_TIK_GECIKME_G         ,
  (KATSAYI_TAKSIT*KKB_OTO_GECIKME ) as KKB_OTO_GECIKME_G         ,
  (KATSAYI_TAKSIT*KKB_KONUT_GECIKME) as KKB_KONUT_GECIKME_G       ,
  (KATSAYI_TAKSIT*KKB_KMH_GECIKME) as KKB_KMH_GECIKME_G         ,
  (KATSAYI_TAKSIT*KKB_KK_GECIKME) as KKB_KK_GECIKME_G          ,
  (KATSAYI_LIMIT*DB_KREDI_LIMIT )  as DB_KREDI_LIMIT_G        ,
  (KATSAYI_LIMIT*DB_KK_LIMIT) as    DB_KK_LIMIT_G          ,
  (KATSAYI_TAKSIT*DB_KK_ACIKBAKIYE ) as  DB_KK_ACIKBAKIYE_G        ,
  (KATSAYI_TAKSIT*DB_KMH_ACIKBAKIYE ) as  DB_KMH_ACIKBAKIYE_G      ,
  (KATSAYI_TAKSIT*DB_BRY_TAKSITTOP   ) as  DB_BRY_TAKSITTOP_G    
from PERRISKKDSSAB
;

CREATE table PERRISKKDSGENISSABLON as
select PL.*, concat(PL.TCKN,substr(concat('000', PL.PID),-2)) as ANAHTAR from (
SELECT HH.*,
DENSE_RANK() OVER (PARTITION BY HH.TCKN ORDER BY TRUNC(HH.RECORDDATE) ASC) AS PID
/*+parallel(8) */ 
--TCKN,KMH_ACIKBAKIYE AS TOPLAMKBRISK 
FROM PERRISKKDSSAB  HH) PL;


CREATE table PERRISKZMMTKDSSONEFNGRUP as
select FB.* from PERRISKZMMTKDSBISTSONKUME FB where ANAHTAR IN (
select ANAHTAR from (
select AA.*, concat(AA.TCKN,substr(concat('000', AA.MAXPID),-2)) as ANAHTAR  from ( 
select TCKN, MAX(PID) as MAXPID from  PERRISKZMMTKDSBISTSONKUME
group by TCKN) AA));


CREATE TABLE PERRISKZMMTKDSTOPKBRISK_G AS
SELECT /*+parallel(8) */  TCKN,KKB_KMH_RISK_G AS TOPLAMKBRISK_G FROM PERRISKKDSSABGENIS;

--WHERE A.DONEM=(SELECT MAX(DONEM) FROM PERSONEL_KKB) 
;
CREATE TABLE PERRISKZMMTKDSTOPKKRISK_G AS
SELECT /*+parallel(8) */  TCKN,KKB_KK_RISK_G AS TOPLAMKKRISK_G FROM PERRISKKDSSABGENIS;

CREATE table PERRISKZMMTKDSKKBFOG_G as
select T1.*,T2.TOPLAMKBRISK_G,T3.TOPLAMKKRISK_G, (T1.KKB_KRD_TAKSITTOP_2_G+T2.TOPLAMKBRISK_G+T3.TOPLAMKKRISK_G) as TAKTAKSITTOPLAMI_G  from PERRISKKDSSABGENIS T1
left outer join PERRISKZMMTKDSTOPKBRISK_G T2 on T1.TCKN=T2.TCKN
left outer join PERRISKZMMTKDSTOPKKRISK_G T3 on T1.TCKN=T3.TCKN;

--MAAS GUNCELLEME ADIMI;  
create table PERRISKZMMTMAASORT_G as 
select F9.*, (F9.ORTALAMAMAAS*F9.KATSAYI_MAAS) as ORTALAMAMAAS_G from
(
select F6.*, case when F6.donem IN ('201307','201308','201309','201310','201311','201312') then 9.34 
                  when F6.donem IN ('201401','201402','201403','201404','201405','201406') then 8.84
                  when F6.donem IN ('201407','201408','201409','201410','201411','201412') then 8.64
                  when F6.donem IN ('201501','201502','201503','201504','201505','201506') then 8.24
                  when F6.donem IN ('201507','201508','201509','201510','201511','201512') then 7.94
                  when F6.donem IN ('201601','201602','201603','201604','201605','201606') then 7.65
                  when F6.donem IN ('201607','201608','201609','201610','201611','201612') then 7.31
                  when F6.donem IN ('201701','201702','201703','201704','201705','201706') then 6.9
                  when F6.donem IN ('201707','201708','201709','201710','201711','201712') then 6.53
                  when F6.donem IN ('201801','201802','201803','201804','201805','201806') then 5.99
                  when F6.donem IN ('201807','201808','201809','201810','201811','201812') then 5.43
                  when F6.donem IN ('201901','201902','201903','201904','201905','201906') then 5.17
                  when F6.donem IN ('201907','201908','201909','201910','201911','201912') then 4.86
                  when F6.donem IN ('202001','202002','202003','202004','202005','202006') then 4.59
                  when F6.donem IN ('202007','202008','202009','202010','202011','202012') then 4.24
                  when F6.donem IN ('202101','202102','202103','202104','202105','202106') then 3.91
                  when F6.donem IN ('202107','202108','202109','202110','202111','202112') then 3.11
                  when F6.donem IN ('202201','202202','202203','202204','202205','202206') then 2.19
                  when F6.donem IN ('202207','202208','202209','202210','202211','202212') then 1.9
                  when F6.donem IN ('202301','202302','202303','202304','202305','202306') then 1.58
                  when F6.donem IN ('202307','202308','202309','202310','202311','202312') then 1.15
                  when F6.donem IN ('202401','202402','202403') then 1.00
                  end as KATSAYI_MAAS from 
(select F3.*, concat( TO_CHAR(F3.ZT, 'YYYY'),TO_CHAR(F3.ZT, 'MM')) as donem from PERRISKZMMTMAASORT F3) F6 ) F9;


--***********************************************************************************************************************
--**************************************      KKB TAKSIT ORAN CALISMASI      ********************************************
--***********************************************************************************************************************
    
CREATE TABLE PERRISKZMMTKKBTAKSITORAN_G AS       
        SELECT MAAS_PERSONEL.SICIL AS SICIL,KKB.TAKTAKSITTOPLAMI_G,
        ORTALAMA_AYLIK_G,ROUND(NVL(KKB.TAKTAKSITTOPLAMI_G,0)/ORTALAMA_AYLIK_G,2) AS KKB_TAKSIT_MAAS_ORANI

   FROM
        (
            SELECT DISTINCT KB.TAKTAKSITTOPLAMI_G, KB.TCKN
            FROM PERRISKZMMTKDSKKBFOG_G  KB 
        )KKB 
        LEFT OUTER JOIN 
        (SELECT SICIL,TCKIMLIKNO AS TC, MUSTERINO, ORTALAMAMAAS_G as ORTALAMA_AYLIK_G
         FROM PERRISKZMMTMAASORT_G                   
        ) MAAS_PERSONEL ON KKB.TCKN = MAAS_PERSONEL.TC; 
        
        
--***********************************************************************************************************************
--**************************************      KKB KK LIMIT DOLULUK      *** *********************************************
--***********************************************************************************************************************

CREATE  TABLE PERRISKKKKBORTMAASORAN AS       
SELECT SUBSTR('000' || REPLACE(UPPER(MS.SICIL),'VB',''),-5) AS SICIL, 
CASE WHEN KKB.TOPLAM_KK_KB_RISK- NVL(TO_NUMBER(REPLACE (MV.MVD_TOPLAM,'.',',')),0) <= 0 THEN 0
ELSE KKB.TOPLAM_KK_KB_RISK- NVL(TO_NUMBER(REPLACE (MV.MVD_TOPLAM,'.',',')),0) END AS KK_KB_RISK_EKSI_MVD ,MS.ORTALAMA_AYLIK,
ROUND((CASE WHEN KKB.TOPLAM_KK_KB_RISK- NVL(TO_NUMBER(REPLACE (MV.MVD_TOPLAM,'.',',')),0) <= 0 THEN 0
ELSE KKB.TOPLAM_KK_KB_RISK- NVL(TO_NUMBER(REPLACE (MV.MVD_TOPLAM,'.',',')),0) END)/MS.ORTALAMA_AYLIK,2) AS KK_KB_RISK_MAAS_ORANI
FROM
(
SELECT KKB_KK_KMH_TOPTAK AS TOPLAM_KK_KB_RISK,TCKN as TCNO 
 FROM PERRISKZMMTKDSSONEFNGRUP                    
)KKB 
--LEFT OUTER JOIN FO_ZMMT_RAWDATA_V2 RW on RW.TCKIMLIKNO=KKB.TCNO  
left outer join (select SICIL,TCKIMLIKNO,ORTALAMAMAAS as ORTALAMA_AYLIK,MUSTERINO from PERRISKZMMTMAASORT) MS on MS.TCKIMLIKNO=KKB.TCNO 
left outer join ZMMT_TARIHI_MVD_BAKIYE_FO MV on MS.MUSTERINO=MV.MUSTERINO;



--***********************************************************************************************************************
--**************************************      GECIKEN BORC CALISMASI       **********************************************
--***********************************************************************************************************************

CREATE  TABLE PERRISKGBORTMAASORAN AS
SELECT KB.KKBSICIL, KB.TOPLAM_GECIKEN_BORC,ROUND(MS.ORTALAMA_AYLIK,2) AS ORTALAMA_AYLIK,
(KB.TOPLAM_GECIKEN_BORC)/ROUND(MS.ORTALAMA_AYLIK,2) AS GB_ORTMAAS_ORAN
    FROM 
    ( SELECT SUBSTR('000' || REPLACE(UPPER(RW.SICIL),'VB',''),-5) AS KKBSICIL, KKB.TOPLAM_GECIKEN_BORC,KKb.TCNO
      FROM 
                 (SELECT (KKB_TIK_GECIKME+KKB_OTO_GECIKME+KKB_KONUT_GECIKME) AS TOPLAM_GECIKEN_BORC,TCKN as TCNO 
                 FROM PERRISKZMMTKDSSONEFNGRUP)KKB 
                LEFT OUTER JOIN PERRISKZMMTMAASORT RW on RW.TCKIMLIKNO=KKB.TCNO 
        ) KB
        left outer join (select TCKIMLIKNO,ORTALAMAMAAS as ORTALAMA_AYLIK,MUSTERINO from PERRISKZMMTMAASORT) MS on MS.TCKIMLIKNO=KB.TCNO ;



--***********************************************************************************************************************
--****************************************     TAKİP PUANI HESAPLAMA      ***********************************************
--***********************************************************************************************************************


create table PERRISKTAKIPKKB as
select * from VITDWH.DW_BKR_KARARDESTEKCAGRI where TCKIMLIKNO IN (select tCKIMLIKNO from PERRISKZMMTMAASORT ) and RECORDDATE>'01.01.2012';

create table  PERRISKTAKIPKKB_V2 as 
select * from (
select AY.*,
DENSE_RANK() OVER (PARTITION BY AY.TCKIMLIKNO ORDER BY TRUNC(AY.FARK) ASC) as RANK1
 from ( 
select AB.*, AC.* from
(select TK.*,ZM.ZT, (ZM.ZT-TK.ISLEMTARIHI) as FARK,TK.ID as ID3 from  PERRISKKDSCAGRI TK left outer join (select tCKIMLIKNO,ZT from PERRISKZMMTMAASORT ) ZM
on TK.TCKIMLIKNO=ZM.TCKIMLIKNO) AB left outer join
(select ID as ID2,VB3086,VB1027 from VITDWH.DW_BKR_KARARDESTEKKKBIST where --TCKIMLIKNO IN (select tCKIMLIKNO from PERRISKZMMTMAASORT ) and 
RECORDDATE>'01.01.2012') AC
on AB.ID3=AC.ID2) AY where FARK>0 )
where RANK1=1 ;

create table PERRISKTAKIPKKB_V1 as
select * from
( select TY.*, DENSE_RANK() OVER (PARTITION BY TY.TCKIMLIKNO ORDER BY TRUNC(TY.ID) desc) as RANK3 from
(select distinct TK.*,DENSE_RANK() OVER (PARTITION BY TK.TCKIMLIKNO ORDER BY TRUNC(TK.FARK) ASC) as RANK2, case when TK.ISTIHBARATSONUCU LIKe '%RE%' and TK.VB1027<>0 then 1
else 0 end as ISTIHBARAT_TAKIP_PUAN from PERRISKTAKIPKKB_V2 TK where ISTIHBARATSONUCU is not null --and --TCKIMLIKNO=25192522604
 and CAGRITIPI=1 and CAGRINO=1) TY ) where RANK3=1;


--***********************************************************************************************************************
--**************************************      KK LIMIT DOLULUK PUANI           ******************************************
--***********************************************************************************************************************


create table PERRISKKKLIMITDOLULUK as
select FB.* from (select PL.*, concat(PL.TCKN,substr(concat('000', PL.PID),-2)) as ANAHTAR from (
SELECT HH.*,
DENSE_RANK() OVER (PARTITION BY HH.TCKN ORDER BY TRUNC(HH.RECORDDATE) ASC) AS PID
/*+parallel(8) */ 
--TCKN,KMH_ACIKBAKIYE AS TOPLAMKBRISK 
FROM PERRISKKDSSABGENIS  HH) PL) FB where ANAHTAR IN (
select ANAHTAR from (
select AA.*, concat(AA.TCKN,substr(concat('000', AA.MAXPID),-2)) as ANAHTAR  from ( 
select TCKN, MAX(PID) as MAXPID from  (select PL.*, concat(PL.TCKN,substr(concat('000', PL.PID),-2)) as ANAHTAR from (
SELECT HH.*,
DENSE_RANK() OVER (PARTITION BY HH.TCKN ORDER BY TRUNC(HH.RECORDDATE) ASC) AS PID
/*+parallel(8) */ 
--TCKN,KMH_ACIKBAKIYE AS TOPLAMKBRISK 
FROM PERRISKKDSSABGENIS  HH) PL)
group by TCKN) AA));


create table PERRISKKKLIMITDOLULUKORAN as
SELECT BANKASICILNO,KKRISKLIMITORAN FROM 
(SELECT KKBTOPLAMKKRISK/TOPLAMKKLIMIT AS KKRISKLIMITORAN,TCNO FROM
( SELECT KKB_KK_LIMIT_G AS TOPLAMKKLIMIT,KKB_KK_RISK_G AS KKBTOPLAMKKRISK,TCKN as TCNO
                    FROM PERRISKKKLIMITDOLULUK
                    
--                    
--                    PERSONEL_KKB K
--                    where  DURUM LIKE '%ACIK%' AND DONEM=(SELECT MAX(DONEM) FROM PERSONEL_KKB WHERE TCNO=K.TCNO)
--                    AND KREDITURU='KREDI-KARTI' --AND DONEM='201908'  
--                    --AND TCNO='20561090654'
                    --GROUP BY TCKN 
)
WHERE NVL(TOPLAMKKLIMIT,0)<>0 
--KKBTOPLAMKKRISK/TOPLAMKKLIMIT>0.90
) O
INNER JOIN 
(SELECT *
                            FROM IKY.DW_IKY_PERSONEL
                            --WHERE KISITIPI=1
                            --AND DURUMKODU IN (1120)
                            
) PP ON PP.TCKIMLIKNO = TO_CHAR(O.TCNO)




--***********************************************************************************************************************
--**************************************      PUAN BIRLESTIRME CALISMASI       ******************************************
--***********************************************************************************************************************

Create table PERRISKKKKBPUANTUM as
select  distinct RM.*,nvl(TK.KKB_TAKSIT_MAAS_ORANI,0) as KKB_TAKSIT_MAAS_ORANI ,nvl(KB.KK_KB_RISK_MAAS_ORANI,0) as KK_KB_RISK_MAAS_ORANI,nvl(GB.GB_ORTMAAS_ORAN,0) as GB_ORTMAAS_ORAN,
nvl(LIM.KKRISKLIMITORAN,0) as KKLIMITDOLULUKORAN
from PERRISKZMMTMAASORT RM left outer join
PERRISKGBORTMAASORAN GB on GB.KKBSICIL=substr(RM.SICIL,-5) 
left outer join PERRISKZMMTKKBTAKSITORAN_G TK on GB.KKBSICIL=substr(TK.SICIL,-5) 
left outer join
PERRISKKKKBORTMAASORAN KB on KB.SICIL=substr(RM.SICIL,-5) 
left outer join PERRISKKKLIMITDOLULUKORAN LIM on LIM.BANKASICILNO=substr(RM.SICIL,-5) 
left outer join PERRISKTAKIPKKB_V1  V1 on V1.TCKIMLIKNO=RM.TCKIMLIKNO

;


select distinct KKB.*,YOG.ISLEM_SAYISI_YOG,YOG.YOG_PUANI,YOG.YAS60_PUANI,ROL.BIR_YILDAN_FAZLA_AYNI_SUBE,ROL.BNK_BSLMA_SB_BSLAMA_IKI_YIL_MI,nvl(SANS.SANS_OYUNU_PUAN,0) as SANS_OYUNU_PUAN,nvl(SANS.SANS_OYUNU_PUAN2,0) as SANS_OYUNU_PUAN2,
nvl(ATM.SAYI,0) as SUBEONUATMKULLANIM
 from 
PERRISKKKKBPUANTUM KKB left outer join PERRISKYOGUNLASMAZMMTPUAN YOG on YOG.SICIL=KKB.SICIL
left outer join PERRISKROLPUANSON ROL on ROL.SICIL=SUBSTR(KKB.SICIL,-5)
left outer join PERRISKSANSOYUNUPUAN SANS on SANS.SICIL=SUBSTR(KKB.SICIL,-5)
left outer join PERRISKSUBEONUATMKULLPUAN ATM on ATM.SICIL=SUBSTR(KKB.SICIL,-5)



----------------------------------ŞANS--------------------------------------
---------------------------------------------------------------------------------------------------------------------------------------------------

--***************************************1.KISIM***************************************************************
----****YASAL bahis şirketlerinin bankamız nezdindeki hesaplarına personel ve eşi tarafından yapılan tahsilatlar.
----****eşinin yaptığını da personele sayacağız

CREATE table PERRISKISLEMKODUHH as
select detailcode from vitdwh.dw_app_transactiondetailcode WHERE hostcode in
                 (  'A30','A31','A43','A45','A95','B17','G23','B68','E93','E92','G84','E96','E83','E82','E81','Z06','Z19'); -- YASAL BAHIS HAREKETLERI
                

---------------------------------------------------------------------------------------------------------------------------------------------------
/* 01.01.2012 tarihinden itibaren LEGAL bahis hesaplarına yapılan transferlere bakılır. SUISTIMALKUMESIOLUSTURMA_2024 scriptinde yer alan PERRISKMVDHESHARSUIS tablosu zimmetçi
personelin hesap hareketlerini içerdiği için direkt onun üzerinden devam edebiliriz. EGER bu kümeden bağımsız bir çalışma yapılacaksa aşağıdaki kod bunu sağlar.

-- PERSONEL ve EŞİ için zimmet tarihi ve öncesi 1 yıllık döneme bakılır ve PERRISKSANSZTKENHHLEGAL ve PERRISKSANSZTHHLEGALES tablolarına insert edilir.

CREATE table PERRISKSANSOYUNUHHLEGAL as
SELECT ID, ISLEMKODU,HESAPNO,DOVIZCINSI,ISLEMTARIHI,ISLEMTUTARI,
       YENIBAKIYE,HAREKETACIKLAMASI,MUSTERIACIKLAMASI,CUZDANACIKLAMASI,RECORDDATE,RECORDUSERCODE,RECORDBRANCHCODE,RECORDSCREENCODE,
       KULLANICIKODU,SUBEKODU,KANALKODU,TRANSACTIONID,RECORDREQUESTOBJECTID,RECORDCHANNELCODE,MVDISLEMTUTARI,KRDISLEMTUTARI,
       FISNO,KARTNO,TERMINALID,HESAPSUBEKODU,KRDSKONT,MVDSKONT,ETLDATE,ETLSOURCE,MUSTERINO FROM VITDWH.DW_MVD_HESAPHAREKET MVD 
  INNER JOIN PERRISKISLEMKODUHH PHH on MVD.ISLEMKODU=PHH.DETAILCODE
  WHERE ISLEMTARIHI >= trunc(to_date('01.01.2012','DD.MM.YYYY'))--4056
       AND ISLEMTARIHI <  trunc(to_date('01.04.2024','DD.MM.YYYY'))--38)
       AND exists (select MUSTERINO from PERRISKSUISTIMALLISTEES A where A.MUSTERINO=MVD.MUSTERINO)  


*/

CREATE table PERRISKSANSOYUNUHHLEGAL as
SELECT /*+ PARALLEL(8)  use_hash(MVD,PHH)*/  ID, ISLEMKODU,HESAPNO,DOVIZCINSI,ISLEMTARIHI,ISLEMTUTARI,
       YENIBAKIYE,HAREKETACIKLAMASI,MUSTERIACIKLAMASI,CUZDANACIKLAMASI,RECORDDATE,RECORDUSERCODE,RECORDBRANCHCODE,RECORDSCREENCODE,
       KULLANICIKODU,SUBEKODU,KANALKODU,TRANSACTIONID,RECORDREQUESTOBJECTID,RECORDCHANNELCODE,MVDISLEMTUTARI,KRDISLEMTUTARI,
       FISNO,KARTNO,TERMINALID,HESAPSUBEKODU,KRDSKONT,MVDSKONT,ETLDATE,ETLSOURCE,MUSTERINO FROM PERRISKMVDHESHARSUIS where ISLEMKODU IN (select DETAILCODE from PERRISKISLEMKODUHH)
       
 
--Yukarıda sadece personel için hesap hareketleri çekildiğinden bu adımda eşine yönelik hesap hareketleri de çekilir.

create table PERRISKMVDHESHARSUISES as 
select /*+parallel(8) */  ID,ISLEMKODU,HESAPNO,DOVIZCINSI,ISLEMTARIHI,ISLEMTUTARI,YENIBAKIYE,HAREKETACIKLAMASI,MUSTERIACIKLAMASI,
  CUZDANACIKLAMASI,RECORDDATE,RECORDUSERCODE,RECORDBRANCHCODE,RECORDSCREENCODE,KULLANICIKODU,SUBEKODU,
  KANALKODU,TRANSACTIONID,RECORDREQUESTOBJECTID,RECORDCHANNELCODE,MVDISLEMTUTARI,KRDISLEMTUTARI,FISNO,
  KARTNO,TERMINALID,HESAPSUBEKODU,KRDSKONT,MVDSKONT,ETLDATE,ETLSOURCE,MUSTERINO  from VITDWH.DW_MVD_HESAPHAREKET
  where ISLEMTARIHI>='01.01.2012 'and-- ISLEMTARIHI<=D1.TARIH2 and 
  MUSTERINO IN (select distinct MUSTERINO from PERRISKSUISTIMALLISTEES where DURUM='ES') 
;

CREATE table PERRISKSANSOYUNUHHLEGALES as
SELECT /*+ PARALLEL(8)  use_hash(MVD,PHH)*/  ID, ISLEMKODU,HESAPNO,DOVIZCINSI,ISLEMTARIHI,ISLEMTUTARI,
       YENIBAKIYE,HAREKETACIKLAMASI,MUSTERIACIKLAMASI,CUZDANACIKLAMASI,RECORDDATE,RECORDUSERCODE,RECORDBRANCHCODE,RECORDSCREENCODE,
       KULLANICIKODU,SUBEKODU,KANALKODU,TRANSACTIONID,RECORDREQUESTOBJECTID,RECORDCHANNELCODE,MVDISLEMTUTARI,KRDISLEMTUTARI,
       FISNO,KARTNO,TERMINALID,HESAPSUBEKODU,KRDSKONT,MVDSKONT,ETLDATE,ETLSOURCE,MUSTERINO FROM PERRISKMVDHESHARSUISES where ISLEMKODU IN (select DETAILCODE from PERRISKISLEMKODUHH);


-- ** PERSONEL_LEGAL

CrEATE TABLE VBTEFTIS2.PERRISKSANSZTKENHHLEGAL  as
select * from PERRISKSANSOYUNUHHLEGAL  where 1=2;

BEGIN
  FOR D1 IN
        (
        select  distinct MUSTERINO,ZT,trunc(ZT)-365 as ZT1YIL from  PERRISKSUISTIMALLISTEES where DURUM='KENDISI' )
  LOOP

Insert into  PERRISKSANSZTKENHHLEGAL 
select ID,ISLEMKODU,HESAPNO,DOVIZCINSI,ISLEMTARIHI,ISLEMTUTARI,YENIBAKIYE,HAREKETACIKLAMASI,MUSTERIACIKLAMASI,
  CUZDANACIKLAMASI,RECORDDATE,RECORDUSERCODE,RECORDBRANCHCODE,RECORDSCREENCODE,KULLANICIKODU,SUBEKODU,
  KANALKODU,TRANSACTIONID,RECORDREQUESTOBJECTID,RECORDCHANNELCODE,MVDISLEMTUTARI,KRDISLEMTUTARI,FISNO,
  KARTNO,TERMINALID,HESAPSUBEKODU,KRDSKONT,MVDSKONT,ETLDATE,ETLSOURCE,MUSTERINO from PERRISKSANSOYUNUHHLEGAL 
  where MUSTERINO=D1.MUSTERINO and ISLEMTARIHI>=D1.ZT1YIL and D1.ZT<ISLEMTARIHI ;
COMMIT;
END LOOP;
END;
;

-- ** EŞ_LEGAL
CREATE TABLE VBTEFTIS2.PERRISKSANSZTHHLEGALES as
select * from PERRISKSANSOYUNUHHLEGAL  where 1=2;

BEGIN
  FOR D1 IN
        (
        select  distinct MUSTERINO,ZT,trunc(ZT)-365 as ZT1YIL from  PERRISKSUISTIMALLISTEES  where DURUM='ES'  
        )
  LOOP

Insert into  PERRISKSANSZTHHLEGALES
select ID,ISLEMKODU,HESAPNO,DOVIZCINSI,ISLEMTARIHI,ISLEMTUTARI,YENIBAKIYE,HAREKETACIKLAMASI,MUSTERIACIKLAMASI,
  CUZDANACIKLAMASI,RECORDDATE,RECORDUSERCODE,RECORDBRANCHCODE,RECORDSCREENCODE,KULLANICIKODU,SUBEKODU,
  KANALKODU,TRANSACTIONID,RECORDREQUESTOBJECTID,RECORDCHANNELCODE,MVDISLEMTUTARI,KRDISLEMTUTARI,FISNO,
  KARTNO,TERMINALID,HESAPSUBEKODU,KRDSKONT,MVDSKONT,ETLDATE,ETLSOURCE,MUSTERINO from PERRISKSANSOYUNUHHLEGALES 
  where MUSTERINO=D1.MUSTERINO and ISLEMTARIHI>=D1.ZT1YIL and D1.ZT<ISLEMTARIHI ;
  
COMMIT;
END LOOP;
END;
;

---------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE PERRISKSANSHHEKSTRESI AS
select    /*+parallel(8) */               
SUBSTR(MVD.HESAPNO,-11) AS HESAP_NO, 
FISNO AS FIS_NO, 
KARTNO AS KART_NO,                      
' ' AS REF_NO, 
TERMINALID AS ATM_NO, 
ISLEMTARIHI AS HAREKET_TARIHI, 
ISLEMTARIHI AS ISLEM_TARIHI,
ISLEMKODU AS CASUAL, 
MUSTERIACIKLAMASI||' || '||HAREKETACIKLAMASI AS ACIKLAMA, 
ISLEMTUTARI AS ISLEM_MIKTARI, 
YENIBAKIYE AS BAKIYE, 
' 'AS REFERANS1, 
'VIT' AS REFERANS2, 
ID AS ISN, 
KANALKODU AS ISLEM_KANAL, 
ISLEMKODU AS ISLEM_KODU, 
SUBSTR(KULLANICIKODU,-5) AS  ISLEM_SICIL, 
SUBSTR(SUBEKODU,-4) AS ISLEM_SUBE, 
TRANSACTIONID  AS TRANSACTION_ID 
from PERRISKSANSZTKENHHLEGAL MVD;



CREATE table PERRISKSANSHHEKSTRESON as
select P.SICIL,'KENDISI' AS PERSONELMI,
mvd.* from
(
select * from PERRISKSANSHHEKSTRESI
) mvd
inner join (select hesapno ,SUBSTR('00'||SICIL,-5) as SICIL from hesappersoneliliskisi where 
length(hesapno)=17) p
on '001580'||MVD.hesap_no=p.hesapno;

                  
---------------------------------------------------------------------------------------------------------------------------------------------------
 
CREATE TABLE PERRISKSANSHHEKSTRESIES AS
select    /*+parallel(8) */               
SUBSTR(MVD.HESAPNO,-11) AS HESAP_NO, 
FISNO AS FIS_NO, 
KARTNO AS KART_NO,                      
' ' AS REF_NO, 
TERMINALID AS ATM_NO, 
ISLEMTARIHI AS HAREKET_TARIHI, 
ISLEMTARIHI AS ISLEM_TARIHI,
ISLEMKODU AS CASUAL, 
MUSTERIACIKLAMASI||' || '||HAREKETACIKLAMASI AS ACIKLAMA, 
ISLEMTUTARI AS ISLEM_MIKTARI, 
YENIBAKIYE AS BAKIYE, 
' 'AS REFERANS1, 
'VIT' AS REFERANS2, 
ID AS ISN, 
KANALKODU AS ISLEM_KANAL, 
ISLEMKODU AS ISLEM_KODU, 
SUBSTR(KULLANICIKODU,-5) AS  ISLEM_SICIL, 
SUBSTR(SUBEKODU,-4) AS ISLEM_SUBE, 
TRANSACTIONID  AS TRANSACTION_ID 
from PERRISKSANSZTHHLEGALES MVD;


CREATE table PERRISKSANSHHEKSTREESSON as 
SELECT P.SICIL,'ESİ' AS PERSONELMI,
mvd.* from
(
select * from PERRISKSANSHHEKSTRESIES
) mvd
inner join (select SUBSTR(ES.SICIL,-5) as SICIL,HSP.HESAPNO FROM HESAPMUSTERIILISKISI HSP
                                        INNER JOIN PERRISKYKNTCVB ES ON ES.YAKINVB=HSP.VBMUSTERINO --PERSONEL EŞİ
                                        WHERE length(HSP.hesapno)=17

            )p on '001580'||MVD.hesap_no=p.hesapno
;


INSERT INTO PERRISKSANSHHEKSTRESON
SELECT * FROM  PERRISKSANSHHEKSTREESSON 
;



--------********************************2. KISIM-ILLEGAL ******************************
---****personel ve eşinin Yasal Uyum müd. tarafından tespit edilen bahise aracılık eden hesaplara yaptığı HAVALE işlemleri
---****eşinin yaptığını da personele sayacağız

---------------------------------------------------------------------------------------------------------------------------------------------------
/*DECLARE
  Daydif1 NUMBER;
  Daydif2 NUMBER;
  
BEGIN
  SELECT trunc(sysdate)-trunc(to_date('01.01.2012','DD.MM.YYYY'))  INTO Daydif1   FROM dual;
  SELECT trunc(sysdate)-trunc(to_date('01.01.2023','DD.MM.YYYY'))  INTO Daydif2   FROM dual;
END;*/

create table PERRISKZMMTPERMUSNO as 
select * from PERRISKSUISTIMALLISTEES where DURUM='KENDISI';


create table PERRISKZMMTESMUSNO as 
select * from PERRISKSUISTIMALLISTEES where DURUM='ES';


--PERSONEL HAVALE
create table PERRISKSANSOYUNUHHPERILLEGAL as
SELECT /*+ PARALLEL(8)  use_hash(MVD,PHH)*/  h.GONDERENMUSTERINO as MUSTERINO,'KENDISI'  AS PERSONELMI,  h.HAVALETARIHI,
  h.HAVALETRANSACTIONOBJECTID ,h.alicihesapno,
  h.GONDERENHESAPNO ,
  h.KAYNAKTUTAR  from vitdwh.DW_HVL_HAVALE h 
  where HAVALETARIHI >= trunc(to_date('01.01.2012','DD.MM.YYYY'))--4049)
       AND HAVALETARIHI < trunc(to_date('01.04.2024','DD.MM.YYYY'))--49)
       AND exists (select MUSTERINO from PERRISKZMMTPERMUSNO A where  A.MUSTERINO=h.GONDERENMUSTERINO)  -- 3 DK
;

--EŞ HAVALE
CREATE table PERRISKSANSOYUNUHHILLEGALES as
SELECT /*+ PARALLEL(8)  use_hash(MVD,PHH)*/  h.GONDERENMUSTERINO as MUSTERINO,'ES'  AS PERSONELMI,  h.HAVALETARIHI,
  h.HAVALETRANSACTIONOBJECTID ,h.alicihesapno,
  h.GONDERENHESAPNO ,
  h.KAYNAKTUTAR  from vitdwh.DW_HVL_HAVALE h 
  where HAVALETARIHI >= trunc(to_date('01.01.2012','DD.MM.YYYY'))--4049)
       AND HAVALETARIHI < trunc(to_date('01.04.2024','DD.MM.YYYY'))--49)
       AND exists (select MUSTERINO from PERRISKZMMTESMUSNO A where  A.MUSTERINO=h.GONDERENMUSTERINO)
;
--ILLEGAL HAVALE
CREATE table PERRISKSANSOYUNUHHILLEGAL as
select * from PERRISKSANSOYUNUHHPERILLEGAL
UNION
select * from PERRISKSANSOYUNUHHILLEGALES;


/*
DROP TABLE VBTEFTIS2.PERRISKSANSHHILLEGAL as
select 0 as  bankasicilno,0 as PERSONELMI,havaletarihi,havaletransactionobjectid,gonderenhesapno,kaynaktutar from vitdwh.DW_HVL_HAVALE  where 1=2
*/
;

-- ILLEGAL PERSONEL ve EŞİ için zimmet tarihi ve öncesi 1 yıllık döneme bakılır ve PERRISKSANSILLEGALPER ve PERRISKSANSILLEGALES tablolarına insert edilir.
 
-- PERSONEL_ILLEGAL_HAVALE

CREATE TABLE VBTEFTIS2.PERRISKSANSILLEGALPER as
select * from (
select h.*,m.SICIL,m.ZT, trunc(M.ZT)-365 as ZT1YIL, case when HAVALETARIHI<M.ZT and HAVALETARIHI>=trunc(M.ZT)-365 then 'EVET' else 'HAYIR' end as ORNEKLEMMI
 from PERRISKSANSOYUNUHHILLEGAL h inner join PERRISKSUISTIMALLISTEES m on h.musterino=m.musterino and h.PERSONELMI='KENDISI' ) where ORNEKLEMMI='EVET'
 ;

-- ES_ILLEGAL_HAVALE
CREATE TABLE VBTEFTIS2.PERRISKSANSILLEGALES as
select * from (
select h.*,m.SICIL,m.ZT, trunc(M.ZT)-365 as ZT1YIL, case when HAVALETARIHI<M.ZT and HAVALETARIHI>=trunc(M.ZT)-365 then 'EVET' else 'HAYIR' end as ORNEKLEMMI
 from PERRISKSANSOYUNUHHILLEGAL h inner join PERRISKSUISTIMALLISTEES m on h.musterino=m.musterino and h.PERSONELMI<>'KENDISI' ) where ORNEKLEMMI='EVET'
;


CREATE table PERRISKSANSILLEGAL as              --PERSONELIN VE ESİNİN ZMMT tarihi ve öncesi 1 YILLIK HAVALE İŞLEMLERİ CEKİLİR
select * from PERRISKSANSILLEGALPER
UNION
select * from PERRISKSANSILLEGALES
;



CREATE table PERRISKHAVPERBAHISCI as            --PERSONELIN VE ESİNİN havaleleri arasında bahisçi hesaplara olan işlemler filtrelenir.
select SICIL as bankasicilno,PERSONELMI,havaletarihi,havaletransactionobjectid,gonderenhesapno,kaynaktutar
from (select * from PERRISKSANSILLEGAL where PERSONELMI='KENDISI' ) 
where SUBSTR('0000000' || TRIM(alicihesapno),-17)  in (select distinct SUBSTR('0000000' || TRIM(hesapno),-17) 
AS hesapno from bahis_araci_hesap);

CREATE table PERRISKHAVPERBAHISCIES as
select SICIL as bankasicilno,PERSONELMI, havaletarihi,havaletransactionobjectid,gonderenhesapno,kaynaktutar
from (select * from PERRISKSANSILLEGAL where PERSONELMI='ES' ) 
where SUBSTR('0000000' || TRIM(alicihesapno),-17) in (select distinct SUBSTR('0000000' || TRIM(hesapno),-17) 
AS hesapno from bahis_araci_hesap)  
;

insert into PERRISKHAVPERBAHISCI
select * from PERRISKHAVPERBAHISCIES
;

create table PERRISKHAVALEILLEGALHESAP as
select distinct               
substr(p.bankasicilno,-5) as SICIL,PERSONELMI,
SUBSTR(MVD.HESAPNO,-11) AS HESAP_NO, 
FISNO AS FIS_NO, 
KARTNO AS KART_NO,                      
' ' AS REF_NO, 
TERMINALID AS ATM_NO, 
ISLEMTARIHI AS HAREKET_TARIHI, 
ISLEMTARIHI AS ISLEM_TARIHI,
ISLEMKODU AS CASUAL, 
MUSTERIACIKLAMASI||' || '||HAREKETACIKLAMASI AS ACIKLAMA, 
ISLEMTUTARI AS ISLEM_MIKTARI, 
YENIBAKIYE AS BAKIYE, 
' 'AS REFERANS1, 
'VIT' AS REFERANS2, 
ID AS ISN, 
KANALKODU AS ISLEM_KANAL, 
ISLEMKODU AS ISLEM_KODU, 
SUBSTR(KULLANICIKODU,-5) AS  ISLEM_SICIL, 
SUBSTR(SUBEKODU,-4) AS ISLEM_SUBE, 
TRANSACTIONID  AS TRANSACTION_ID 
from vitdwh.dw_mvd_hesaphareket mvd
inner join PERRISKHAVPERBAHISCI p 
on MVD.hesapno=p.gonderenhesapno and mvd.transactionid=to_char(p.havaletransactionobjectid) 
and  mvd.ISLEMTARIHI >trunc(p.havaletarihi) and mvd.islemtarihi<trunc(p.havaletarihi+1) 
where 
ISLEMKODU<>'FYTSMSRM01';


---------------------**************3.KISIM

--BAHİSÇİLERE YAPILAN EFT LER
--UYUM MÜD. NÜN BELİRTTİĞİ ARACI HESAPLARIN AİT OLDUĞU MÜŞTERİLERİN DİĞER BANKA HESAPLARI TESPİT EDİLİR.
--PERSONEL VE YAKININDAN GİDEN EFTLER ÇEKİLİR.

--İLK 2 EXECUTE 4.KISIMDA DA KULLANILACAK.--LEGALLERİN BANKAMIZDAKİ TÜM HESAPLARI--

create TABLE PERRISKSANSBAHISFIRMATUMHSP AS
SELECT * FROM HESAPMUSTERIILISKISI
WHERE VBMUSTERINO IN 
(
SELECT DISTINCT VBMUSTERINO FROM PERRISKSANSBAHISFIRMA H
INNER JOIN HESAPMUSTERIILISKISI HSP ON HSP.HESAPNO=H.KULLANIMHESAPNO
);


create TABLE PERRISKSANSBAHISCIEFTIBAN AS
select distinct gonderenhesapnumarasi  AS BAHISCI_IBAN ,YASADISIMI
from  (SELECT HESAPNO,'LEGAL' AS YASADISIMI FROM PERRISKSANSBAHISFIRMATUMHSP WHERE LENGTH(HESAPNO)=17
        UNION
        SELECT HESAPNO,'ILLEGAL' FROM bahis_araci_hesap) h 
left outer join vitdwh.dw_mvd_hesapbilgi hb 
on SUBSTR('0000000' || TRIM(H.hesapno),-17)=hb.hesapno   AND hb.currentflag=1
left outer join vitdwh.DW_MST_MUSTERI mst on mst.musterino=hb.musterino
left outer join  
(select gonderenhesapnumarasi,gonderenkimliknumarasi from vitdwh.DW_EFT_GELENMUSTERIODEME
 where efttarihi>'01.01.2012'
                 )ef 
on substr('0000'||ef.gonderenkimliknumarasi,-11)= substr('0000'||nvl(mst.tckimlikno,mst.vergino),-11)
WHERE gonderenhesapnumarasi is not null
UNION
select 'TR550004600008888000197018' AS IBAN,'ILLEGAL' from dual union --Fatih ÖVER
select 'TR230004600032888000151580','ILLEGAL' from dual union --Yüksel Eray KEKLİK
select 'TR440004600658888000142794','ILLEGAL' from dual union --Mehmet Alperen BİRİNCİ- 
select 'TR940004600642888000148805','ILLEGAL' from dual  --Hanifi KAYA
;



create table PERRISKSANSEFTBAHISCIIBAN as
select PER.BANKASICILNO,'KENDISI'  AS PERSONELMI ,YASADISIMI,ISLEMTARIHI,TRANSACTIONOBJECTID,SUBSTR(GONDERENHESAPNUMARASI,-17) AS GONDERENHESAPNO ,EFTTUTARI  
from vitdwh.DW_EFT_GIDENMUSTERIODEME GMO 
INNER JOIN 
(SELECT 
ID, EFTTARIHI,  EFTTUTARI,EFTDURUMKODU,
   TRANSACTIONOBJECTID, ISLEMTARIHI
FROM VITDWH.DW_EFT_GIDENMESAJ
where efttarihi>='01.01.2012'
--and ıd=57480114
) GM
ON GM.ID=GMO.GIDENMESAJID
INNER JOIN (select tckimlikno,bankasicilno,ad ||' '|| soyad,fiilibirimkodu as personel_isim from IKY.dw_iky_personel  where durumkodu=1120) PER ON PER.TCKIMLIKNO=GMO.GONDERENKIMLIKNUMARASI
INNER JOIN PERRISKSANSBAHISCIEFTIBAN BHS ON BHS.BAHISCI_IBAN=GMO.ALICIHESAPNUMARASI
where GMO.efttarihi>='01.01.2012'
;



create table PERRISKSUISTIMALLISTETCKN as
select PES.*, MST.TCKIMLIKNO from PERRISKSUISTIMALLISTEES  PES
left outer join VITDWH.DW_MST_MUSTERI MST on PES.MUSTERINO=MST.MUSTERINO;

create table PERRISKSUISTPERLISTETCKN as
select * from PERRISKSUISTIMALLISTETCKN where DURUM='KENDISI';

CREATE table PERRISKSUISTESLISTETCKN as
select * from PERRISKSUISTIMALLISTETCKN where DURUM='ES';



--PERSONEL EFT
create table PERRISKSANSEFTUHHPERILLEPER as                                                   -- 10 dk
SELECT /*+ PARALLEL(8)  use_hash(MVD,PHH)*/  h.GIDENMESAJID,h.GONDERENKIMLIKNUMARASI,
 h.ALICIKIMLIKNUMARASI,
--h.GONDERENMUSTERINO as MUSTERINO,
'KENDISI'  AS PERSONELMI,  h.efttarihi,
  h.ALICIHESAPNUMARASI,
  h.GONDERENHESAPNUMARASI  from vitdwh.DW_EFT_GIDENMUSTERIODEME h 
  where efttarihi >= trunc(to_date('01.01.2012','DD.MM.YYYY'))--4049)
       AND efttarihi < trunc(to_date('01.04.2024','DD.MM.YYYY'))--49)
       AND exists (select tckimlikno from PERRISKSUISTPERLISTETCKN A where 
        substr('0000'||h.gonderenkimliknumarasi,-11)= substr('0000'||A.tckimlikno,-11))
;

create table PERRISKSANSEFTUHHPERILLEPERSON as
select TCK.SICIL as BANKASICILNO,GMO.PERSONELMI ,YASADISIMI,ISLEMTARIHI,
TRANSACTIONOBJECTID,SUBSTR(GONDERENHESAPNUMARASI,-17) AS GONDERENHESAPNO ,GMO.GONDERENKIMLIKNUMARASI,
EFTTUTARI,GM.EFTTARIHI    from PERRISKSANSEFTUHHPERILLEPER GMO 
INNER JOIN 
(SELECT ID, EFTTARIHI,  EFTTUTARI,EFTDURUMKODU,TRANSACTIONOBJECTID, ISLEMTARIHI
FROM VITDWH.DW_EFT_GIDENMESAJ) GM ON GM.ID=GMO.GIDENMESAJID
INNER JOIN PERRISKSANSBAHISCIEFTIBAN BHS ON BHS.BAHISCI_IBAN=GMO.ALICIHESAPNUMARASI
INNER JOIN PERRISKSUISTPERLISTETCKN TCK ON TCK.TCKIMLIKNO=GMO.GONDERENKIMLIKNUMARASI


--EŞ EFT
create table PERRISKSANSEFTUHHPERILLEES as                                                      -- 10 dk
SELECT /*+ PARALLEL(8)  use_hash(MVD,PHH)*/  h.GIDENMESAJID,h.GONDERENKIMLIKNUMARASI,
 h.ALICIKIMLIKNUMARASI,
--h.GONDERENMUSTERINO as MUSTERINO,
'ES'  AS PERSONELMI,  h.efttarihi,
  h.ALICIHESAPNUMARASI,
  h.GONDERENHESAPNUMARASI  from vitdwh.DW_EFT_GIDENMUSTERIODEME h 
  where efttarihi >= trunc(to_date('01.01.2012','DD.MM.YYYY')) 
       AND efttarihi < trunc(to_date('01.04.2024','DD.MM.YYYY')) 
       AND exists (select tckimlikno from PERRISKSUISTESLISTETCKN A where 
        substr('0000'||h.gonderenkimliknumarasi,-11)= substr('0000'||A.tckimlikno,-11))
;


CREATE table PERRISKSANSEFTUHHPERILLEESSON as
select TCK.SICIL as BANKASICILNO,GMO.PERSONELMI ,YASADISIMI,ISLEMTARIHI,
TRANSACTIONOBJECTID,SUBSTR(GONDERENHESAPNUMARASI,-17) AS GONDERENHESAPNO ,GMO.GONDERENKIMLIKNUMARASI,
EFTTUTARI,GM.EFTTARIHI   from PERRISKSANSEFTUHHPERILLEES GMO 
INNER JOIN 
(SELECT ID, EFTTARIHI,  EFTTUTARI,EFTDURUMKODU,TRANSACTIONOBJECTID, ISLEMTARIHI
FROM VITDWH.DW_EFT_GIDENMESAJ) GM ON GM.ID=GMO.GIDENMESAJID
INNER JOIN PERRISKSANSBAHISCIEFTIBAN BHS ON BHS.BAHISCI_IBAN=GMO.ALICIHESAPNUMARASI
INNER JOIN PERRISKSUISTPERLISTETCKN TCK ON TCK.TCKIMLIKNO=GMO.GONDERENKIMLIKNUMARASI
;


create table PERRISKSANSOYUNUEFTILLEGAL as
select * from PERRISKSANSEFTUHHPERILLEPERSON
UNION
select * from PERRISKSANSEFTUHHPERILLEESSON;




create table PERRISKSANSOYUNUEFTILLEMST as
select ILL.*, MST.MUSTERINO from PERRISKSANSOYUNUEFTILLEGAL ILL left outer join 
VITDWH.dw_MST_MUSTERI MST on MST.TCKIMLIKNO=ILL.GONDERENKIMLIKNUMARASI;


-- PERSONEL_ILLEGAL_EFT

CREATE TABLE PERRISKSANSILLEEFTPER as
select * from (
select h.*,m.SICIL,m.ZT, trunc(M.ZT)-365 as ZT1YIL, case when efttarihi<M.ZT+60 and efttarihi>=trunc(M.ZT)-365 then 'EVET' else 'HAYIR' end as ORNEKLEMMI
 from PERRISKSANSOYUNUEFTILLEMST h inner join PERRISKSUISTIMALLISTEES m on h.musterino=m.musterino and h.PERSONELMI='KENDISI' ) where ORNEKLEMMI='EVET'
 ;

-- ES_ILLEGAL_EFT
CREATE TABLE PERRISKSANSILLEEFTES as
select * from (
select h.*,m.SICIL,m.ZT, trunc(M.ZT)-365 as ZT1YIL, case when efttarihi<M.ZT+60 and efttarihi>=trunc(M.ZT)-365 then 'EVET' else 'HAYIR' end as ORNEKLEMMI
 from PERRISKSANSOYUNUEFTILLEMST h inner join PERRISKSUISTIMALLISTEES m on h.musterino=m.musterino and h.PERSONELMI<>'KENDISI' ) where ORNEKLEMMI='EVET'
;

create table PERRISKSANSILLEGALZTEKSTRE as
select * from PERRISKSANSILLEEFTPER
UNION 
select * from PERRISKSANSILLEEFTES;


--14.01.2021'de SANS_EKSTRE3 6 aylık 2 parçaya bölündü.

create table PERRISKEKSPERILLE as 
select /*+parallel(8) */
--distinct substr(p.bankasicilno,-5) as SICIL,PERSONELMI,YASADISIMI,
SUBSTR(MVD.HESAPNO,-11) AS HESAP_NO, 
FISNO AS FIS_NO, 
KARTNO AS KART_NO,                      
' ' AS REF_NO, 
TERMINALID AS ATM_NO, 
MVD.ISLEMTARIHI AS HAREKET_TARIHI, 
MVD.ISLEMTARIHI AS ISLEM_TARIHI,
ISLEMKODU AS CASUAL, 
MUSTERIACIKLAMASI||' || '||HAREKETACIKLAMASI AS ACIKLAMA, 
ISLEMTUTARI AS ISLEM_MIKTARI, 
YENIBAKIYE AS BAKIYE, 
' 'AS REFERANS1, 
'VIT' AS REFERANS2, 
ID AS ISN, 
KANALKODU AS ISLEM_KANAL, 
ISLEMKODU AS ISLEM_KODU, 
SUBSTR(KULLANICIKODU,-5) AS  ISLEM_SICIL, 
SUBSTR(SUBEKODU,-4) AS ISLEM_SUBE, 
TRANSACTIONID  AS TRANSACTION_ID 
from vitdwh.dw_mvd_hesaphareket mvd
inner join PERRISKSANSILLEEFTPER p
--WHERE ISLEMTARIHI>= TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE,-13))+1) AND ISLEMTARIHI<TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE,-6))+1)) p 
on MVD.hesapno=p.gonderenhesapno and mvd.transactionid=to_char(p.transactionobjectid) 
--and  mvd.ISLEMTARIHI >trunc(p.ISLEMTARIHI) and mvd.islemtarihi<trunc(p.ISLEMTARIHI+1)  
where ISLEMKODU<>'FYTSMSRM02'
;


create table PERRISKEKSESILLE as 
select /*+parallel(8) */
--distinct substr(p.bankasicilno,-5) as SICIL,PERSONELMI,YASADISIMI,
SUBSTR(MVD.HESAPNO,-11) AS HESAP_NO, 
FISNO AS FIS_NO, 
KARTNO AS KART_NO,                      
' ' AS REF_NO, 
TERMINALID AS ATM_NO, 
MVD.ISLEMTARIHI AS HAREKET_TARIHI, 
MVD.ISLEMTARIHI AS ISLEM_TARIHI,
ISLEMKODU AS CASUAL, 
MUSTERIACIKLAMASI||' || '||HAREKETACIKLAMASI AS ACIKLAMA, 
ISLEMTUTARI AS ISLEM_MIKTARI, 
YENIBAKIYE AS BAKIYE, 
' 'AS REFERANS1, 
'VIT' AS REFERANS2, 
ID AS ISN, 
KANALKODU AS ISLEM_KANAL, 
ISLEMKODU AS ISLEM_KODU, 
SUBSTR(KULLANICIKODU,-5) AS  ISLEM_SICIL, 
SUBSTR(SUBEKODU,-4) AS ISLEM_SUBE, 
TRANSACTIONID  AS TRANSACTION_ID 
from vitdwh.dw_mvd_hesaphareket mvd
inner join PERRISKSANSILLEEFTES p
--WHERE ISLEMTARIHI>= TRUNC(LAST_DAY(ADD_MONTHS(SYSDATE,-6))+1)) p 
on MVD.hesapno=p.gonderenhesapno and mvd.transactionid=to_char(p.transactionobjectid) 
--and  mvd.ISLEMTARIHI >trunc(p.ISLEMTARIHI) and mvd.islemtarihi<trunc(p.ISLEMTARIHI+1)  
where  ISLEMKODU<>'FYTSMSRM02';



create TABLE PERRISKEKSPERESILLE AS 
SELECT distinct substr(p.bankasicilno,-5) as SICIL, PERSONELMI, YASADISIMI, MVD.*  FROM
(SELECT * FROM PERRISKEKSPERILLE
UNION ALL
SELECT * FROM PERRISKEKSESILLE) MVD 
inner join PERRISKSANSILLEGALZTEKSTRE p 
on '001580'||MVD.hesap_no=p.gonderenhesapno and mvd.transaction_id=to_char(p.transactionobjectid) ;





---**********************************************4. KISIM
--BAHİS FİRMALARININ BANKAMIZ HESABINA, PERSONEL VE EŞİNİN DİĞER BANKA HESAPLARINDAN GELEN EFT LER


--PERSONELİN DB HESAPLARI

create TABLE PERRISKPDBHESAP AS
 
SELECT DISTINCT GONDERENHESAPNUMARASI AS PERSONEL_DBANKA_HESAP,GONDERENKIMLIKNUMARASI,
SUBSTR(P.SICIL,-5) AS SICIL,
'KENDİSİ' AS PERSONELMI
FROM VITDWH.DW_EFT_GELENMUSTERIODEME  GEFT 
INNER JOIN PERRISKSUISTPERLISTETCKN P ON P.TCKIMLIKNO=GEFT.GONDERENKIMLIKNUMARASI
WHERE  --KISITIPI=1 AND DURUMKODU=1120 AND 
GONDERENHESAPNUMARASI IS NOT NULL;

--ES DB HESAPLARI

create TABLE PERRISKESDBHESAP AS
 
SELECT DISTINCT GONDERENHESAPNUMARASI AS PERSONEL_DBANKA_HESAP,GONDERENKIMLIKNUMARASI,
SUBSTR(YKN.SICIL,-5) AS SICIL,
'ESİ' AS PERSONELMI
FROM VITDWH.DW_EFT_GELENMUSTERIODEME  GEFT 
INNER JOIN PERRISKSUISTESLISTETCKN YKN ON YKN.TCKIMLIKNO=GEFT.GONDERENKIMLIKNUMARASI
WHERE   GONDERENHESAPNUMARASI IS NOT NULL;


INSERT INTO PERRISKPDBHESAP
SELECT * FROM PERRISKESDBHESAP;


CREATE TABLE PERRISKPDBHSPSIL AS 
SELECT GONDERENHESAPNUMARASI AS HESAP,COUNT(DISTINCT GONDERENKIMLIKNUMARASI) AS SAYI 
FROM VITDWH.DW_EFT_GELENMUSTERIODEME 
WHERE GONDERENHESAPNUMARASI IS NOT NULL
AND TRIM(GONDERENHESAPNUMARASI) IS NOT NULL
AND LENGTH(GONDERENKIMLIKNUMARASI)=11
GROUP BY GONDERENHESAPNUMARASI
HAVING COUNT(DISTINCT GONDERENKIMLIKNUMARASI) >2;


DELETE FROM PERRISKPDBHESAP
WHERE TRIM(PERSONEL_DBANKA_HESAP) IN (SELECT HESAP FROM PERRISKPDBHSPSIL);


create TABLE PERRISKLEGBHSTOPDB_GELEN AS
select  EFT.* ,PDB.SICIL,PDB.PERSONELMI FROM

(select GM.*,GMO.GELENMESAJID,GMO.GONDERENHESAPNUMARASI,GMO.GONDERENADI,GMO.GONDERENKIMLIKNUMARASI,GMO.ALICIHESAPNUMARASI,GMO.ALICIKIMLIKNUMARASI,GMO.ALICIADI,GMO.ACIKLAMA 
from vitdwh.DW_EFT_GELENMUSTERIODEME GMO INNER JOIN 
(SELECT ID, EFTTARIHI, YATANHESAPNO, EFTTUTARI,EFTDURUMKODU,TRANSACTIONOBJECTID, ISLEMTARIHI
FROM VITDWH.DW_EFT_GELENMESAJ
) GM
ON GM.ID=GMO.GELENMESAJID
INNER JOIN PERRISKSANSBAHISFIRMATUMHSP BHSHSP ON BHSHSP.HESAPNO=SUBSTR(GMO.ALICIHESAPNUMARASI,-17)
)EFT 
INNER JOIN 
PERRISKPDBHESAP PDB ON  PDB.PERSONEL_DBANKA_HESAP=TO_CHAR(EFT.GONDERENHESAPNUMARASI) 
;


create TABLE PERRISKILLBHSTOPDB_GELEN AS
select  EFT.* ,PDB.SICIL,PDB.PERSONELMI FROM
(select GM.*,GMO.GELENMESAJID,GMO.GONDERENHESAPNUMARASI,GMO.GONDERENADI,GMO.GONDERENKIMLIKNUMARASI,GMO.ALICIHESAPNUMARASI,GMO.ALICIKIMLIKNUMARASI,GMO.ALICIADI,GMO.ACIKLAMA 
from vitdwh.DW_EFT_GELENMUSTERIODEME GMO INNER JOIN 
(SELECT 
ID, EFTTARIHI, YATANHESAPNO, EFTTUTARI,EFTDURUMKODU,
   TRANSACTIONOBJECTID, ISLEMTARIHI
FROM VITDWH.DW_EFT_GELENMESAJ
) GM
ON GM.ID=GMO.GELENMESAJID
INNER JOIN (select distinct SUBSTR('0000000'|| TRIM(hesapno),-17) AS hesapno 
from bahis_araci_hesap) ıllegalHSP ON ıllegalHSP.HESAPNO=SUBSTR(GMO.ALICIHESAPNUMARASI,-17)
)EFT 
INNER JOIN 
PERRISKPDBHESAP PDB ON  PDB.PERSONEL_DBANKA_HESAP=TO_CHAR(EFT.GONDERENHESAPNUMARASI);


create  table PERRISKEKSTREPDB as
select 'LEGAL' AS YASADISIMI,S.* from PERRISKLEGBHSTOPDB_GELEN S
UNION
select 'YASADISI' AS YASADISIMI,S1.* from PERRISKILLBHSTOPDB_GELEN S1;


-----*************************************5. KISIM
--personel ve eşinin, bahis aracı hesapların diğer banka hesaplarına yaptığı eftler
--personel ve eşinin, bahis aracı hesaplarının ve legal bahis firmalarının bankamız hesaplarına yaptığı havaleler

--INERNET(MOBIL BANKACILIĞI İÇİN

create TABLE PERRISKHSPPERILISKIKKT as 
select * from hesappersoneliliskisi where tip='KKT';

CREATE TABLE PERRISKKKEFTHVL AS                                 -- 40 DK
select HAR.*,SUBSTR(HISLEMACIKLAMASI,INSTR(HISLEMACIKLAMASI,':')+1,LENGTH(HISLEMACIKLAMASI)-INSTR(HISLEMACIKLAMASI,':')+1) AS ALICIHESAP,PER.SICIL,'KENDISI' AS PERSONELMI 
from kkdwh.DW_KRK_KKHARBILGI har
inner join PERRISKHSPPERILISKIKKT  per on per.hesapno=har.hkartno
WHERE  HISLEMKODU='NA'
and HISLEMTIPI='YI'
AND HHAREKETKAYNAKKODU IN ('24','9','10')--MOBIL,INT,INT
and HISLEMSUBKODU IN ('EF','HV');



CREATE TABLE PERRISKKESEFTHVL AS                                 -- 14 DK
select HAR.*,SUBSTR(HISLEMACIKLAMASI,INSTR(HISLEMACIKLAMASI,':')+1,LENGTH(HISLEMACIKLAMASI)-INSTR(HISLEMACIKLAMASI,':')+1) AS ALICIHESAP,YKN.SICIL,'ESİ' AS PERSONELMI 
from kkdwh.DW_KRK_KKHARBILGI har
inner join (select distinct kakartno,kailkkullanimtarihi,kaasilkartno,MBMERKEZMUSTNO from KKDWH.DW_KRK_KKKARTBILGI where Currentflag='1') kart on kart.kakartno=har.HKARTNO
INNER JOIN PERRISKSUISTESLISTETCKN YKN ON YKN.MUSTERINO=kart.MBMERKEZMUSTNO
WHERE HISLEMKODU='NA'
and HISLEMTIPI='YI'
AND HHAREKETKAYNAKKODU IN ('24','9','10')--INT
and HISLEMSUBKODU IN ('EF','HV');




INSERT INTO PERRISKKKEFTHVL
SELECT * FROM PERRISKKESEFTHVL
;


CREATE TABLE PERRISKSANSEKSTREKK5 AS
SELECT EFT.*,'YASADISI' AS YASADISIMI FROM PERRISKKKEFTHVL EFT
WHERE HISLEMSUBKODU='EF' AND ALICIHESAP  IN (SELECT DISTINCT BAHISCI_IBAN FROM PERRISKSANSBAHISCIEFTIBAN WHERE YASADISIMI='ILLEGAL')
UNION
SELECT EFT.*,'LEGAL'  FROM PERRISKKKEFTHVL EFT
WHERE HISLEMSUBKODU='EF' AND ALICIHESAP  IN (SELECT DISTINCT BAHISCI_IBAN FROM PERRISKSANSBAHISCIEFTIBAN WHERE YASADISIMI='LEGAL')
UNION 
SELECT HVL.*,'LEGAL' FROM PERRISKKKEFTHVL HVL
WHERE HISLEMSUBKODU='HV' AND substr(ALICIHESAP,-17) IN (SELECT HESAPNO FROM PERRISKSANSBAHISFIRMATUMHSP  WHERE LENGTH(HESAPNO)=17)
UNION
SELECT HVL.*,'YASADISI' FROM PERRISKKKEFTHVL HVL
WHERE HISLEMSUBKODU='HV'
AND substr(ALICIHESAP,-17) in (select HESAPNO from bahis_araci_hesap WHERE LENGTH(HESAPNO)=17)
;

--********************************************6.KISIM
--ATM DEN ILLEGAL VE LEGAL HESAPLARA PERSONEL VEYA EŞİNİN KARTSIZ PARA YATIRMA İŞLEMLERİ


CREATE table PERRISKDETAILCODEATM as
SELECT DETAILCODE
                                       FROM vitdwh.dw_app_transactiondetailcode
                                      WHERE     detailcode LIKE 'ATM%'
                                            AND turkce_harf_degistir (
                                                   description) LIKE
                                                   '%PARA YATIR%'
UNION
SELECT DETAILCODE
                                       FROM vitdwh.dw_app_transactiondetailcode
                                      WHERE hostcode IN ('D06', 'APY', 'A21')
UNION                                      
select 'ATMPARAYATIR' as DETAILCODE from DUAL
UNION
select 'ATMMVOUPARAYATIR' as DETAILCODE from DUAL
UNION
select 'ATMDDBTPARYATT' as DETAILCODE from DUAL
;

CREATE table PERRISKBAHISARACIHSPNO as
SELECT DISTINCT  SUBSTR ('0000000' || TRIM (hesapno), -17) AS hesapno
             FROM bahis_araci_hesap;

CREATE table PERRISKBAHISARACIHSPHAR as                            -- 35 DK
select * from 
VITDWH.DW_MVD_HESAPHAREKET
where HESAPNO IN (select HESAPNO from PERRISKBAHISARACIHSPNO)
and ISLEMTARIHI>='01.01.2012'
;


CREATE TABLE PERRISKBHSARACIHSBNAATMKARTSIZPY

AS
   SELECT ISLEMKODU,
          E.HESAPNO AS HESAP_NO,
          E.FISNO AS FIS_NO,
          TERMINALID AS ATMNO,
          E.ISLEMTARIHI AS HAREKET_TARIHI,
          E.ISLEMTARIHI AS ISLEM_TARIHI,
          MUSTERIACIKLAMASI || ' || ' || HAREKETACIKLAMASI AS ACIKLAMA,
          CASE WHEN HAREKETACIKLAMASI LIKE '%TCKN %'
             THEN REGEXP_SUBSTR(HAREKETACIKLAMASI, 'TCKN :([[:alnum:]]{11})', 1, 1, '', 1) 
             ELSE REGEXP_SUBSTR(HAREKETACIKLAMASI, 'TC Kimlik :([[:alnum:]]{11})', 1, 1, '', 1) END
             AS TC_KIMLIKNO,     
          CASE WHEN HAREKETACIKLAMASI LIKE '%CEP TEL %'
             THEN REGEXP_SUBSTR(HAREKETACIKLAMASI, 'CEP TEL :([[:alnum:]]{11})', 1, 1, '', 1)
             ELSE REGEXP_SUBSTR(HAREKETACIKLAMASI, 'CEP TELEFONU :([[:alnum:]]{11})', 1, 1, '', 1) end as CEPNO,
          ISLEMTUTARI AS ISLEM_MIKTARI,
          YENIBAKIYE AS BAKIYE,
          KULLANICIKODU AS ISLEM_SICIL,
          E.SUBEKODU AS ISLEM_SUBE,
          E.TRANSACTIONID AS TRANSACTION_ID,
          MUSTERINO
     FROM (select * from PERRISKBAHISARACIHSPHAR
 WHERE     (   RECORDCHANNELCODE IN ('2', '12')             --ATM KANALI
               AND (ISLEMKODU IN (SELECT * from   PERRISKDETAILCODEATM  )          
                    OR UPPER (HAREKETACIKLAMASI) LIKE '%ATMDEN PARA YATIR%')
            ) --ATM PARA YATIR
   AND     (TURKCE_HARF_DEGISTIR (HAREKETACIKLAMASI) LIKE '%TC KIMLIK%'
               OR UPPER (HAREKETACIKLAMASI) LIKE '%TCKN%')) E
          INNER JOIN
          PERRISKBAHISARACIHSPNO ARACI
             ON ARACI.HESAPNO = E.HESAPNO;



CREATE table PERRISKLEGALHSPNO as
select distinct HESAPNO from PERRISKSANSBAHISFIRMATUMHSP WHERE LENGTH(HESAPNO)=17;


CREATE table PERRISKLEGALHSPHAR as                          --44 DK
select * from 
VITDWH.DW_MVD_HESAPHAREKET
where HESAPNO IN (select HESAPNO from PERRISKLEGALHSPNO)
and ISLEMTARIHI>='01.01.2012';
;

CREATE TABLE PERRISKLGLHSBAATMKARTSIZPY AS
   SELECT ISLEMKODU,
          E.HESAPNO AS HESAP_NO,
          E.FISNO AS FIS_NO,
          TERMINALID AS ATMNO,
          E.ISLEMTARIHI AS HAREKET_TARIHI,
          E.ISLEMTARIHI AS ISLEM_TARIHI,
          MUSTERIACIKLAMASI || ' || ' || HAREKETACIKLAMASI AS ACIKLAMA,
          CASE WHEN HAREKETACIKLAMASI LIKE '%TCKN%'
             THEN REGEXP_SUBSTR(HAREKETACIKLAMASI, 'TCKN :([[:alnum:]]{11})', 1, 1, '', 1) 
             ELSE REGEXP_SUBSTR(HAREKETACIKLAMASI, 'TC Kimlik :([[:alnum:]]{11})', 1, 1, '', 1) END
             AS TC_KIMLIKNO,     
          CASE WHEN HAREKETACIKLAMASI LIKE '%CEP TEL %'
             THEN REGEXP_SUBSTR(HAREKETACIKLAMASI, 'CEP TEL :([[:alnum:]]{11})', 1, 1, '', 1)
             ELSE REGEXP_SUBSTR(HAREKETACIKLAMASI, 'CEP TELEFONU :([[:alnum:]]{11})', 1, 1, '', 1) end as CEPNO,
          ISLEMTUTARI AS ISLEM_MIKTARI,
          YENIBAKIYE AS BAKIYE,
          KULLANICIKODU AS ISLEM_SICIL,
          E.SUBEKODU AS ISLEM_SUBE,
          E.TRANSACTIONID AS TRANSACTION_ID,
          MUSTERINO
     FROM (select * from PERRISKLEGALHSPHAR
 WHERE     (   RECORDCHANNELCODE IN ('2', '12')             --ATM KANALI
               AND (ISLEMKODU IN (SELECT * from   PERRISKDETAILCODEATM  )          
                    OR UPPER (HAREKETACIKLAMASI) LIKE '%ATMDEN PARA YATIR%')
            ) --ATM PARA YATIR
   AND     (TURKCE_HARF_DEGISTIR (HAREKETACIKLAMASI) LIKE '%TC KIMLIK%'
               OR UPPER (HAREKETACIKLAMASI) LIKE '%TCKN%')) E
          INNER JOIN
          PERRISKSANSBAHISFIRMATUMHSP ARACI
             ON ARACI.HESAPNO = E.HESAPNO;
             

--TC EŞİTLİĞİNE BAKILIR

CREATE TABLE PERRISKSANSEKSTRE_6 AS

select YKN.SICIL,'ESİ' AS PERSONELMI,'YASADISI' AS YASADISIMI,A.* from PERRISKBHSARACIHSBNAATMKARTSIZPY A
INNER JOIN PERRISKYKNTCVB YKN ON TRIM(YKN.YAKINTC)= TRIM(A.TC_KIMLIKNO)

UNION

select PER.bankasicilno,'KENDİSİ' AS PERSONELMI,'YASADISI' AS YASADISIMI,A.* from PERRISKBHSARACIHSBNAATMKARTSIZPY A
INNER JOIN (select tckimlikno,bankasicilno,ad ||' '|| soyad,fiilibirimkodu as personel_isim from IKY.dw_iky_personel ) PER ON TRIM(PER.tckimlikno)= TRIM(A.TC_KIMLIKNO)

UNION

select YKN.SICIL,'ESİ' AS PERSONELMI,'LEGAL' AS YASADISIMI,A.* from PERRISKLGLHSBAATMKARTSIZPY A
INNER JOIN PERRISKYKNTCVB YKN ON TRIM(YKN.YAKINTC)= TRIM(A.TC_KIMLIKNO)

UNION

select PER.bankasicilno,'KENDİSİ' AS PERSONELMI,'LEGAL' AS YASADISIMI,A.* from PERRISKLGLHSBAATMKARTSIZPY A
INNER JOIN (select tckimlikno,bankasicilno,ad ||' '|| soyad,fiilibirimkodu as personel_isim from IKY.dw_iky_personel) PER ON TRIM(PER.tckimlikno)= TRIM(A.TC_KIMLIKNO)

;



--------------------------------------------8. KISIM
--BAHİS FİRMALARININ BANKAMIZ HESABINDAN ,PERSONEL VE EŞİNİN DİĞER BANKA HESAPLARINA GIDEN  EFT LER


CREATE TABLE PERRISKLEGBHSTOPDB_GIDEN AS
SELECT PER.BANKASICILNO,'KENDİSİ'  AS PERSONELMI , 'LEGAL' AS YASADISIMI, ISLEMTARIHI,TRANSACTIONOBJECTID,SUBSTR(GONDERENHESAPNUMARASI,-17) AS GONDERENHESAPNO ,EFTTUTARI  
FROM VITDWH.DW_EFT_GIDENMUSTERIODEME GMO 
INNER JOIN 
(SELECT 
ID, EFTTARIHI, EFTTUTARI,EFTDURUMKODU,TRANSACTIONOBJECTID, ISLEMTARIHI
FROM VITDWH.DW_EFT_GIDENMESAJ WHERE EFTTARIHI>='01.01.2012'
) GM
ON GM.ID=GMO.GIDENMESAJID
INNER JOIN 
(
SELECT TCKIMLIKNO,PDH.PERSONEL_DBANKA_HESAP,BANKASICILNO,AD ||' '|| SOYAD AS PERSONEL_ISIM ,FIILIBIRIMKODU 
FROM IKY.DW_IKY_PERSONEL  P
INNER JOIN PERRISKPDBHESAP PDH  ON PDH.SICIL=SUBSTR(BANKASICILNO,-5)
)
PER ON PER.PERSONEL_DBANKA_HESAP=GMO.ALICIHESAPNUMARASI 
WHERE SUBSTR(GMO.GONDERENHESAPNUMARASI,-17) IN (SELECT HESAPNO FROM PERRISKSANSBAHISFIRMATUMHSP) AND GMO.EFTTARIHI>='01.01.2012'
;


CREATE TABLE PERRISKLEGBHSTOPDB_GIDEN_ AS
SELECT PER.BANKASICILNO,'EŞİ'  AS PERSONELMI , 'LEGAL' AS YASADISIMI,ISLEMTARIHI,TRANSACTIONOBJECTID,SUBSTR(GONDERENHESAPNUMARASI,-17) AS GONDERENHESAPNO ,EFTTUTARI  
FROM VITDWH.DW_EFT_GIDENMUSTERIODEME GMO 
INNER JOIN 
(SELECT 
ID, EFTTARIHI, EFTTUTARI,EFTDURUMKODU,TRANSACTIONOBJECTID, ISLEMTARIHI
FROM VITDWH.DW_EFT_GIDENMESAJ
WHERE EFTTARIHI>='01.01.2012'
) GM
ON GM.ID=GMO.GIDENMESAJID
INNER JOIN 
(
SELECT TCKIMLIKNO,PDH.PERSONEL_DBANKA_HESAP,BANKASICILNO,AD ||' '|| SOYAD AS PERSONEL_ISIM ,FIILIBIRIMKODU 
FROM IKY.DW_IKY_PERSONEL  P
INNER JOIN PERRISKESDBHESAP PDH  ON PDH.SICIL=SUBSTR(BANKASICILNO,-5)
)
PER ON PER.PERSONEL_DBANKA_HESAP=GMO.ALICIHESAPNUMARASI 
WHERE SUBSTR(GMO.GONDERENHESAPNUMARASI,-17) IN (SELECT HESAPNO FROM PERRISKSANSBAHISFIRMATUMHSP) 
;


CREATE TABLE PERRISKLEGBHSTOPDB_GIDENILL AS
SELECT PER.BANKASICILNO,'KENDİSİ'  AS PERSONELMI,  'YASADISI' AS YASADISIMI, ISLEMTARIHI,TRANSACTIONOBJECTID,SUBSTR(GONDERENHESAPNUMARASI,-17) AS GONDERENHESAPNO ,EFTTUTARI  
FROM VITDWH.DW_EFT_GIDENMUSTERIODEME GMO 
INNER JOIN 
(SELECT 
ID, EFTTARIHI, EFTTUTARI,EFTDURUMKODU,TRANSACTIONOBJECTID, ISLEMTARIHI
FROM VITDWH.DW_EFT_GIDENMESAJ
WHERE EFTTARIHI>='01.01.2012'
) GM
ON GM.ID=GMO.GIDENMESAJID
INNER JOIN 
(
SELECT TCKIMLIKNO,PDH.PERSONEL_DBANKA_HESAP,BANKASICILNO,AD ||' '|| SOYAD AS PERSONEL_ISIM ,FIILIBIRIMKODU 
FROM IKY.DW_IKY_PERSONEL  P
INNER JOIN PERRISKPDBHESAP PDH  ON PDH.SICIL=SUBSTR(BANKASICILNO,-5)
)
PER ON PER.PERSONEL_DBANKA_HESAP=GMO.ALICIHESAPNUMARASI 
WHERE GMO.EFTTARIHI>='01.01.2012'
AND SUBSTR(GMO.GONDERENHESAPNUMARASI,-17) IN  (SELECT * FROM bahis_araci_hesap) 
;


CREATE TABLE PERRISKLEGBHSTOPDB_GIDENILL_ AS
SELECT PER.BANKASICILNO,'EŞİ'  AS PERSONELMI, 'YASADISI' AS YASADISIMI, ISLEMTARIHI,TRANSACTIONOBJECTID,SUBSTR(GONDERENHESAPNUMARASI,-17) AS GONDERENHESAPNO ,EFTTUTARI  
FROM VITDWH.DW_EFT_GIDENMUSTERIODEME GMO 
INNER JOIN 
(SELECT 
ID, EFTTARIHI, EFTTUTARI,EFTDURUMKODU,TRANSACTIONOBJECTID, ISLEMTARIHI
FROM VITDWH.DW_EFT_GIDENMESAJ
WHERE EFTTARIHI>'01.01.2012'
) GM
ON GM.ID=GMO.GIDENMESAJID
INNER JOIN 
(
SELECT TCKIMLIKNO,PDH.PERSONEL_DBANKA_HESAP,BANKASICILNO,AD ||' '|| SOYAD AS PERSONEL_ISIM ,FIILIBIRIMKODU 
FROM IKY.DW_IKY_PERSONEL  P
INNER JOIN PERRISKESDBHESAP PDH  ON PDH.SICIL=SUBSTR(BANKASICILNO,-5)
)
PER ON PER.PERSONEL_DBANKA_HESAP=GMO.ALICIHESAPNUMARASI 
WHERE GMO.EFTTARIHI>='01.01.2012'
AND SUBSTR(GMO.GONDERENHESAPNUMARASI,-17) IN  (SELECT * FROM bahis_araci_hesap) 
;


CREATE  TABLE PERRISKSANSEKSTRE_8 AS
SELECT DISTINCT * FROM PERRISKLEGBHSTOPDB_GIDEN
UNION
SELECT DISTINCT * FROM PERRISKLEGBHSTOPDB_GIDEN_
UNION 
SELECT * FROM PERRISKLEGBHSTOPDB_GIDENILL
UNION
SELECT * FROM PERRISKLEGBHSTOPDB_GIDENILL_
;

CREATE table PERRISKSANSICMALHAZIRLIK1 as
SELECT substr(SICIL,-5) as SICIL, PERSONELMI,HESAP_NO, FIS_NO, KART_NO, REF_NO, ATM_NO, HAREKET_TARIHI, ISLEM_TARIHI, CASUAL, ACIKLAMA, ISLEM_MIKTARI, BAKIYE, 
       REFERANS1, REFERANS2, ISN, ISLEM_KANAL, ISLEM_KODU, ISLEM_SICIL, ISLEM_SUBE, TRANSACTION_ID FROM VBTEFTIS2.PERRISKSANSHHEKSTRESON
union
SELECT substr(SICIL,-5),PERSONELMI, HESAP_NO, FIS_NO, KART_NO, REF_NO, ATM_NO, HAREKET_TARIHI, ISLEM_TARIHI, CASUAL, ACIKLAMA, ISLEM_MIKTARI, BAKIYE, 
       REFERANS1, REFERANS2, ISN, ISLEM_KANAL, ISLEM_KODU, ISLEM_SICIL, ISLEM_SUBE, TRANSACTION_ID FROM VBTEFTIS2.PERRISKHAVALEILLEGALHESAP
union
SELECT substr(SICIL,-5),PERSONELMI, HESAP_NO, FIS_NO, KART_NO, REF_NO, ATM_NO, HAREKET_TARIHI, ISLEM_TARIHI, CASUAL, ACIKLAMA, ISLEM_MIKTARI, BAKIYE, 
       REFERANS1, REFERANS2, ISN, ISLEM_KANAL, ISLEM_KODU, ISLEM_SICIL, ISLEM_SUBE, TRANSACTION_ID FROM VBTEFTIS2.PERRISKEKSPERESILLE
UNION
SELECT substr(SICIL,-5),PERSONELMI,YATANHESAPNO, NULL,NULL,NULL,NULL,EFTTARIHI,ISLEMTARIHI,'EFT',ACIKLAMA,EFTTUTARI, NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,TRANSACTIONOBJECTID 
    FROM VBTEFTIS2.PERRISKEKSTREPDB WHERE YASADISIMI='LEGAL'
UNION
SELECT substr(SICIL,-5),PERSONELMI,HKARTNO, NULL,HKARTNO,NULL,NULL,HISLEMTARIH,HISLEMTARIH,HISLEMKODU,HISLEMACIKLAMASI,HISLEMTUTARIYI,NULL, NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
     FROM  VBTEFTIS2.PERRISKSANSEKSTREKK5 WHERE YASADISIMI='LEGAL'
UNION
SELECT substr(SICIL,-5),PERSONELMI,HESAP_NO, FIS_NO, null,null,atmno,HAREKET_TARIHI, ISLEM_TARIHI,null,ACIKLAMA,ISLEM_MIKTARI,BAKIYE,NULL,NULL,NULL,NULL,ISLEMKODU,ISLEM_SICIL,ISLEM_SUBE,TRANSACTION_ID
     FROM  VBTEFTIS2.PERRISKSANSEKSTRE_6 WHERE YASADISIMI='LEGAL'
UNION
SELECT substr(BANKASICILNO,-5) ,PERSONELMI,NULL,NULL,NULL,NULL,NULL,ISLEMTARIHI,ISLEMTARIHI,'EFT',null,EFTTUTARI,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL, TRANSACTIONOBJECTID 
    FROM VBTEFTIS2.PERRISKSANSEKSTRE_8 WHERE YASADISIMI='LEGAL' ;

create table PERRISKSANSICMALHAZIRLIK2 as
select * from (
select ICM.*, zt.ZT, case when trunc(ZT.ZT)-trunc(ISLEM_TARIHI)<365 and trunc(ISLEM_TARIHI)-trunc(ZT.ZT)<60 then 'EVET' else 'HAYIR' end as DURUM from PERRISKSANSICMALHAZIRLIK1 ICM left outer join 
PERRISKSUISTIMALLISTEES ZT on ICM.SICIL=substr(ZT.SICIL,-5)) where DURUM='EVET'
;

------ICMAL

INSERT INTO  PERRISKSANSICMALZMMT (SICIL,ISIM,ISLEM_SAYISI,TOPLAM_ISLEM_MIKTARI,OLUSTURMA_TARIHI)
    select SICIL, ISIM,COUNT(*),SUM(ABS(ISLEM_MIKTARI)), sysdate FROM (
    SELECT  S.SICIL, PS.ADSOYAD as ISIM,S.ISLEM_MIKTARI,PS.ZT
    FROM PERRISKSANSICMALHAZIRLIK2 S
    INNER JOIN PERRISKSUISTIMALLISTEES PS ON SUBSTR('0'||S.SICIL,-5)=SUBSTR('0'||PS.SICIL,-5))  GROUP BY SICIL,ISIM
;



---1000 TL VE ÜSTÜ YASA DIŞI BAHİS OYANAYAN VEYA TOPLAMDA 5.000 TL VE ÜSTÜ BAHİS OYNAYANLAR PERSONEL RİSKLİLİĞE EKLENİR VE BU PERSONELİN GÜNLÜK MD3481 BULGUSU GELİR




create table PERRISKILLEGALICMALHAZIRLIK1 as
SELECT SICIL, PERSONELMI,HESAP_NO, FIS_NO, KART_NO, REF_NO, ATM_NO, HAREKET_TARIHI, ISLEM_TARIHI, CASUAL, ACIKLAMA, ISLEM_MIKTARI, BAKIYE, 
       REFERANS1, REFERANS2, ISN, ISLEM_KANAL, ISLEM_KODU, ISLEM_SICIL, ISLEM_SUBE, TRANSACTION_ID  FROM VBTEFTIS2.PERRISKHAVALEILLEGALHESAP
UNION
SELECT SICIL,PERSONELMI, HESAP_NO, FIS_NO,KART_NO, REF_NO, ATM_NO,HAREKET_TARIHI, ISLEM_TARIHI, CASUAL,ACIKLAMA, ISLEM_MIKTARI, BAKIYE, 
       REFERANS1, REFERANS2, ISN,ISLEM_KANAL, ISLEM_KODU, ISLEM_SICIL,ISLEM_SUBE, TRANSACTION_ID FROM VBTEFTIS2.PERRISKEKSPERESILLE
       WHERE YASADISIMI='YASADISI'
UNION
SELECT SICIL,PERSONELMI,YATANHESAPNO,NULL,NULL,NULL,NULL,EFTTARIHI,ISLEMTARIHI,'EFT',ACIKLAMA,EFTTUTARI, NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
    TRANSACTIONOBJECTID  FROM VBTEFTIS2.PERRISKEKSTREPDB  WHERE YASADISIMI='YASADISI'
UNION
SELECT SICIL,PERSONELMI,HKARTNO, NULL,HKARTNO,NULL,NULL,HISLEMTARIH,HISLEMTARIH,HISLEMKODU,HISLEMACIKLAMASI,HISLEMTUTARIYI,NULL, NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL
     FROM  VBTEFTIS2.PERRISKSANSEKSTREKK5
     WHERE YASADISIMI='YASADISI'
UNION
SELECT SICIL,PERSONELMI,HESAP_NO,FIS_NO, null,null,atmno,HAREKET_TARIHI, ISLEM_TARIHI,null,ACIKLAMA,ISLEM_MIKTARI,BAKIYE,NULL,NULL,NULL,NULL,ISLEMKODU,ISLEM_SICIL,
ISLEM_SUBE,TRANSACTION_ID FROM  VBTEFTIS2.PERRISKSANSEKSTRE_6
     WHERE YASADISIMI='YASADISI'
UNION SELECT SUBSTR(BANKASICILNO, -5) AS SICIL, PERSONELMI, GONDERENHESAPNO, NULL, NULL, NULL, NULL, NULL, ISLEMTARIHI, NULL, NULL,
     EFTTUTARI, NULL, NULL, NULL,NULL,NULL, NULL, NULL, NULL, TRANSACTIONOBJECTID FROM  VBTEFTIS2.PERRISKSANSEKSTRE_8
     WHERE YASADISIMI='YASADISI'    ;
     

create table PERRISKILLEGALSANSICMALHAZIRLIK2 as
select * from (
select ICM.*, zt.ZT, case when trunc(ZT.ZT)-trunc(ISLEM_TARIHI)<365 and trunc(ISLEM_TARIHI)-trunc(ZT.ZT)<60 then 'EVET' else 'HAYIR' end as DURUM from 
PERRISKILLEGALICMALHAZIRLIK1 ICM left outer join 
PERRISKSUISTIMALLISTEES ZT on ICM.SICIL=substr(ZT.SICIL,-5)) where DURUM='EVET'


INSERT INTO   PERRISKSANSICMALZMMTILLEGAL (SICIL,ISIM,ISLEM_SAYISI,TOPLAM_ISLEM_MIKTARI,OLUSTURMA_TARIHI)
    select SICIL, ISIM,COUNT(*),SUM(ABS(ISLEM_MIKTARI)), sysdate FROM (
    SELECT  S.SICIL, PS.ADSOYAD as ISIM,S.ISLEM_MIKTARI,PS.ZT
    FROM PERRISKILLEGALSANSICMALHAZIRLIK2 S
    INNER JOIN PERRISKSUISTIMALLISTEES PS ON SUBSTR('0'||S.SICIL,-5)=SUBSTR('0'||PS.SICIL,-5))  GROUP BY SICIL,ISIM;

create table PERRISKSANSOYUNUPUAN as
select SC.SICIL, nvl(LEG.ISLEM_SAYISI,0) as SANS_OYUNU_PUAN,nvl(ILLEG.TOPLAM_ISLEM_MIKTARI,0) as SANS_OYUNU_PUAN2 from (select SICIL from PERRISKSANSICMALZMMT
UNION
select SICIL from PERRISKSANSICMALZMMTILLEGAL)  SC left outer join
PERRISKSANSICMALZMMT LEG on LEG.toplam_islem_miktari>=5000 and LEG.SICIL=SC.SICIL 
left outer join
PERRISKSANSICMALZMMT ILLEG on ILLEG.toplam_islem_miktari>=1000 and ILLEG.SICIL=SC.SICIL
 


-------------------------BORSA
/*CREATE TABLE*/ 
CREATE table PERRISKBORSAHESAPHAR as select * from
VBTEFTIS2.BANKA_BORSA_OYNAMA_SAYI where 1=2
;
                         

CREATE table PERRISKBORSAHESAPHARNO as select * from
VBTEFTIS2.BANKA_BORSA_OYNAMA_SAYI where 1=2;


BEGIN
  FOR D1 IN
        (
        select  distinct SICIL, ZT from  PERRISKSUISTIMALLISTEES WHERE DURUM='KENDISI' -- ilgili tablo 10'ar günlük periyodları içermektedir.
        --Bu noktada istenen hesap hareketleri için tarih aralığı HH_SABLON_DENEME_FO tablosuna bakılarak tespit edilmelidir.
        --Örneğin 01.08.2020 itibarıyla alınacak hesap hareketleri için sorgunun bu kısmına
        --WHERE TARIH1>='01.08.2020'
        -- koşulu eklenmelidir.
        )
LOOP
Insert into  PERRISKBORSAHESAPHAR
SELECT SICIL, SUM (HISSETOPLAMTUTAR) AS HISSEVIOPTUTAR
       FROM (SELECT DISTINCT
                    SICIL,
                    NVL (PORT.ADET * HF.KAPANISFIYATI, 0) AS HISSETOPLAMTUTAR
               FROM VITDWH.DW_MNK_MUSTERIPORTFOY PORT
                    INNER JOIN (select * from HESAPPERSONELILISKISI where SICIL=D1.SICIL )  HP
                       ON  PORT.YATIRIMHESAPNO = HP.HESAPNO
                    INNER JOIN IKY.DW_IKY_PERSONEL p
                       ON     hP.VBMUSTERINO = p.musterino
                          AND kisitipi = 1
                    INNER JOIN VITDWH.DW_HSS_HISSESENEDITANIM HTNM
                       ON HTNM.ISIN = PORT.ISIN AND HTNM.DURUMKODU = 'A'
                    INNER JOIN VITDWH.DW_HSS_HISSESEANSFIYAT HF
                       ON     HF.SEANSTARIHI = to_date(D1.ZT,'DD.MM.YYYY')
                          AND HTNM.HISSEKODU = HF.HISSEKODU
                          AND HTNM.HISSEALTKODU = HF.HISSEALTKODU
              WHERE senetgrubu <> 'A'
                    AND PORT.END_DATE = '31.12.9999'
                    AND PORT.ADET <> 0
             UNION
             SELECT SICIL, NVL (TUTAR, 0)
               FROM VITDWH.DW_VIO_PORTFOYGUNLUK VIO
                    INNER JOIN (select * from HESAPPERSONELILISKISI where SICIL=D1.SICIL)  HP
                       ON     VIO.YATIRIMHESAPNO = HP.HESAPNO
                    INNER JOIN IKY.DW_IKY_PERSONEL p
                       ON     hP.VBMUSTERINO = p.musterino
              WHERE VIO.BITISTARIHI = to_date(D1.ZT,'DD.MM.YYYY')
              )
   GROUP BY SICIL

;
COMMIT;
END LOOP;
END;

CREATE table PERRISKMENKULNOZMMT as
select HV.*, SZ.SICIL, '03.05.2024' as TARIH from
(
SELECT ID FROM VBTEFTIS2.PERRISKMODELHAMVERI  where ZMMT=0 )HV
left outer join PERRISKSICILZMMTNOZMMT SZ on SZ.ID=HV.ID;

--ZIMMETCI OLMAYAN BORSA BAKIYESI
BEGIN
  FOR D1 IN
        (
        select  distinct SUBSTR(SICIL,-5) as SICIL, TARIH as ZT from  PERRISKMENKULNOZMMT -- ilgili tablo 10'ar günlük periyodları içermektedir.
        --Bu noktada istenen hesap hareketleri için tarih aralığı HH_SABLON_DENEME_FO tablosuna bakılarak tespit edilmelidir.
        --Örneğin 01.08.2020 itibarıyla alınacak hesap hareketleri için sorgunun bu kısmına
        --WHERE TARIH1>='01.08.2020'
        -- koşulu eklenmelidir.
        )
LOOP
Insert into  PERRISKBORSAHESAPHARNO
SELECT SICIL, SUM (HISSETOPLAMTUTAR) AS HISSEVIOPTUTAR
       FROM (SELECT DISTINCT
                    SICIL,
                    NVL (PORT.ADET * HF.KAPANISFIYATI, 0) AS HISSETOPLAMTUTAR
               FROM VITDWH.DW_MNK_MUSTERIPORTFOY PORT
                    INNER JOIN (select * from HESAPPERSONELILISKISI where SUBSTR('000'||SICIL,-5)=D1.SICIL )  HP
                       ON  PORT.YATIRIMHESAPNO = HP.HESAPNO
                    INNER JOIN IKY.DW_IKY_PERSONEL p
                       ON     hP.VBMUSTERINO = p.musterino
                          AND kisitipi = 1
                    INNER JOIN VITDWH.DW_HSS_HISSESENEDITANIM HTNM
                       ON HTNM.ISIN = PORT.ISIN AND HTNM.DURUMKODU = 'A'
                    INNER JOIN VITDWH.DW_HSS_HISSESEANSFIYAT HF
                       ON     HF.SEANSTARIHI = to_date(D1.ZT,'DD.MM.YYYY')
                          AND HTNM.HISSEKODU = HF.HISSEKODU
                          AND HTNM.HISSEALTKODU = HF.HISSEALTKODU
              WHERE senetgrubu <> 'A'
                    AND PORT.END_DATE = '31.12.9999'
                    AND PORT.ADET <> 0
             UNION
             SELECT SICIL, NVL (TUTAR, 0)
               FROM VITDWH.DW_VIO_PORTFOYGUNLUK VIO
                    INNER JOIN (select * from HESAPPERSONELILISKISI where SICIL=D1.SICIL)  HP
                       ON     VIO.YATIRIMHESAPNO = HP.HESAPNO
                    INNER JOIN IKY.DW_IKY_PERSONEL p
                       ON     hP.VBMUSTERINO = p.musterino
              WHERE VIO.BITISTARIHI = to_date(D1.ZT,'DD.MM.YYYY')
              )
   GROUP BY SICIL

;
COMMIT;
END LOOP;
END;





--SICIL BAZLI BORSA BAKIYESI
SELECT SICIL, SUM (HISSETOPLAMTUTAR) AS HISSEVIOPTUTAR
       FROM (SELECT DISTINCT
                    SICIL,
                    NVL (PORT.ADET * HF.KAPANISFIYATI, 0) AS HISSETOPLAMTUTAR
               FROM VITDWH.DW_MNK_MUSTERIPORTFOY PORT
                    INNER JOIN (select * from HESAPPERSONELILISKISI  )  HP
                       ON  PORT.YATIRIMHESAPNO = HP.HESAPNO
                    INNER JOIN IKY.DW_IKY_PERSONEL p
                       ON     hP.VBMUSTERINO = p.musterino
                          AND kisitipi = 1
                    INNER JOIN VITDWH.DW_HSS_HISSESENEDITANIM HTNM
                       ON HTNM.ISIN = PORT.ISIN AND HTNM.DURUMKODU = 'A'
                    INNER JOIN VITDWH.DW_HSS_HISSESEANSFIYAT HF
                       ON     HF.SEANSTARIHI = to_date('01.01.2020','DD.MM.YYYY')
                          AND HTNM.HISSEKODU = HF.HISSEKODU
                          AND HTNM.HISSEALTKODU = HF.HISSEALTKODU
              WHERE senetgrubu <> 'A'
                    AND PORT.END_DATE = '31.12.9999'
                    AND PORT.ADET <> 0
             UNION
             SELECT SICIL, NVL (TUTAR, 0)
               FROM VITDWH.DW_VIO_PORTFOYGUNLUK VIO
                    INNER JOIN (select * from HESAPPERSONELILISKISI )  HP
                       ON     VIO.YATIRIMHESAPNO = HP.HESAPNO
                    INNER JOIN IKY.DW_IKY_PERSONEL p
                       ON     hP.VBMUSTERINO = p.musterino
              WHERE VIO.BITISTARIHI = to_date('01.01.2020','DD.MM.YYYY')
              )
   GROUP BY SICIL

-------------YOGUNLASMA

/*<TOAD_FILE_CHUNK>*/

CREATE TABLE PERRISKZMMTGENELTARIH10GUNLUK ( TARIH1 DATE, TARIH2 DATE);

DECLARE v_start_date DATE := TO_DATE('01.01.2012', 'DD.MM.YYYY'); 
        v_end_date DATE := TO_DATE('01.04.2024', 'DD.MM.YYYY'); 

BEGIN WHILE v_start_date <= v_end_date LOOP INSERT INTO PERRISKZMMTGENELTARIH10GUNLUK (TARIH1, TARIH2) VALUES (v_start_date, v_start_date + INTERVAL '9' DAY); v_start_date := v_start_date + INTERVAL '10' DAY; -- Move to the next period 
END LOOP; 
COMMIT; 
END; 


--3 AYLIK PERİYOTTA %90 VE ÜZERİ YOĞUNLAŞMA, 30.000 PB ÜSTÜ TEDİYE, TÜM PARA ÇEKLER ARŞİVDEN KAYIT, HESAPTAN ADK KANALIYLA PARA ÇIKIŞI=0, AÇIK KREDİSİ OLMAYAN MÜŞTERİ  

CREATE TABLE PERRISKVBDWHSUBERAPOR as
select * from
(select  A.*, B.* FROM    vbdwh.DWHSUBERAPOR  A, vbrisk.SUBE_ISLEM_TURLERI B  
WHERE   A.ISLEMADI = B.ISLEM_ADI_INGILIZCE(+))   where 1=2


CREATE TABLE PERRISKVBDWHSUBERAPORHAM as
select * from vbdwh.DWHSUBERAPOR A where A.ISLEMTARIHI >= '01.01.2012'
and A.tutar>0  and  A.SICIL IN (select  SICIL from PERRISKSUISTIMALLISTEES where DURUM='KENDISI')

CREATE TABLE PERRISKDWHSUBEISLEMTURLERI as
select * from
vbrisk.SUBE_ISLEM_TURLERI where ISLEM_ADI_TURKCE NOT LIKE '%ONAY%'



Insert into  PERRISKVBDWHSUBERAPOR
select  A.*, B.* FROM    PERRISKVBDWHSUBERAPORHAM  A left outer join PERRISKDWHSUBEISLEMTURLERI B  
on  A.ISLEMADI = B.ISLEM_ADI_INGILIZCE(+) 
WHERE
                                upper (case When  ( B.ISLEM_ADI_TURKCE is null or trim(B.ISLEM_ADI_TURKCE) = '') 
                                   Then  A.ISLEMADI 
                                   Else  B.ISLEM_ADI_TURKCE 
                                    end
                                   )NOT LIKE '%ONAY%'
;

CREATE  table PERRISKSUBERAPORZT3 as
select ISLEMID,SUBEKODU, substr( SICIL,-5) as SICIL, ISLEMTARIHI, ISLEMADI,SURE,TUTAR,TUTARBIRIMI,ADET,ONAYLI,MASRAF,MASRAFBIRIMI
,MUAFIYET, MUSTERINO,EKRANTIPI, ROW_DATE,ROL,UNVAN,TAKIM,SUBEILKODU,SUBEBOLGEKODU,SUBEBOLGEADI,MUSTERISEGMENT,SOURCE,HIZMETYETKIDURUMU,TRANSACTIONOBJECTID,ISLEM_ADI_INGILIZCE,
ISLEM_ADI_TURKCE,EKRAN_TIPI,ZT from (
select DWH.*,SUIS.ZT, case when (SUIS.ZT-DWH.ISLEMTARIHI)<365 and (SUIS.ZT-DWH.ISLEMTARIHI)>=0 then 'EVET' else 'HAYIR' end as FARK from PERRISKVBDWHSUBERAPOR  DWH 
left outer join (select SICIL as SICIL,ZT
from PERRISKSUISTIMALLISTEES) SUIS
on SUIS.SICIL=DWH.SICIL) where FARK='EVET'


CREATE TABLE PERRISKMSTYOG3AY_V1 AS
select  MUSTERINO,  SUBSTR('VB'||SICIL,-5)AS SICIL,
                               COUNT(*) AS SICILIN_TOPLAM_ISLEM_SAYISI,sum(tutar) as sicilin_toplam_islem_miktari,max(TRUNC(ISLEMTARIHI)) as MAKS_ISLEM_TARIHI,
                                min(TRUNC(ISLEMTARIHI)) as MIN_ISLEM_TARIHI
                       FROM    PERRISKSUBERAPORZT3 
                       where MUSTERINO is not null
                       GROUP BY  MUSTERINO, SUBSTR('VB'||SICIL,-5) ; 


CREATE TABLE PERRISKMSTYOGUNLASMA3AY_V1 AS
select distinct Yo.*,SU.ZT from PERRISKMSTYOG3AY_V1 YO left outer join PERRISKSUISTIMALLISTEES SU on substr(SU.SICIL,-5)=YO.SICIL


--CREATE TABLE SICIL_MUSTERI_YOGUNLASMA_3AY AS
--  select  A.MUSTERINO,  SUBSTR('VB'||A.SICIL,-5)AS SICIL,
--                               COUNT(*) AS SICILIN_TOPLAM_ISLEM_SAYISI,sum(tutar) as sicilin_toplam_islem_miktari,max(TRUNC(A.ISLEMTARIHI)) as MAKS_ISLEM_TARIHI
--                               ,min(TRUNC(A.ISLEMTARIHI)) as MIN_ISLEM_TARIHI
--                            
--                       FROM    vbdwh.DWHSUBERAPOR  A, vbrisk.SUBE_ISLEM_TURLERI B  
--                       WHERE   A.ISLEMADI = B.ISLEM_ADI_INGILIZCE(+) 
--                               and TRUNC(A.ISLEMTARIHI) >= trunc(LAST_DAY(add_months(sysdate,-4))+1) and TRUNC(A.ISLEMTARIHI) <= trunc(LAST_DAY(add_months(sysdate,-1)))
--                               and tutar>0
--                              --and MUSTERINO='445001657297'
--                               and  (regexp_like( REPLACE(SICIL,'vb',''), '^[[:digit:]]*$') OR regexp_like( REPLACE(SICIL,'VB',''), '^[[:digit:]]*$')) 
--                               AND upper
--                                   (case  
--                                   When  ( B.ISLEM_ADI_TURKCE is null or trim(B.ISLEM_ADI_TURKCE) = '') 
--                                   Then  A.ISLEMADI 
--                                   Else  B.ISLEM_ADI_TURKCE 
--                                    end
--                                   )NOT LIKE '%ONAY%' 
--                       GROUP BY  MUSTERINO, SUBSTR('VB'||A.SICIL,-5)
--;

 
--%90 ÜZERİ YOĞUNLAŞANLAR TESPİT EDİLİR

CREATE TABLE PERRISKMSTYOGORAN3AY AS 
SELECT  X.*,Y.TOPLAM_SICIL_ISLEM_SAYISI,ROUND(X.SICILIN_TOPLAM_ISLEM_SAYISI/Y.TOPLAM_SICIL_ISLEM_SAYISI,2) AS YOGUNLASMA FROM PERRISKMSTYOG3AY_V1 X INNER JOIN 
(SELECT MUSTERINO,SUM(SICILIN_TOPLAM_ISLEM_SAYISI) AS TOPLAM_SICIL_ISLEM_SAYISI FROM PERRISKMSTYOGUNLASMA3AY_V1
GROUP BY MUSTERINO
)Y ON X.MUSTERINO=Y.MUSTERINO
WHERE ROUND(X.SICILIN_TOPLAM_ISLEM_SAYISI/Y.TOPLAM_SICIL_ISLEM_SAYISI,2)>=0.9 
ORDER BY X.MUSTERINO;

/*
EXECUTE IMMEDIATE'
CREATE TABLE SICIL_MUSTERI_YOG_TEDIYE_3AY AS 
SELECT MUSTERINO,SUBSTR(''VB''||SICIL,-5) AS SICIL,
       sum(tutar_TL) AS TEDIYE_TUTARI,COUNT(*) AS TEDIYE_SAYISI,max(TRUNC(ISLEMTARIHI)) as MAKS_TEDIYE_TARIHI
       FROM SUBERAPOR 
group by MUSTERINO,SUBSTR(''VB''||SICIL,-5)
having sum(tutar)>=30000
';
*/



create TABLE  PERRISKVBDWHSUBERAPOR2 as
select * from PERRISKVBDWHSUBERAPOR where ISLEMADI='Mevduat Para Çek'  



create table PERRISKSUBERAPORZT4 as
select ISLEMID,SUBEKODU, substr( SICIL,-5) as SICIL, ISLEMTARIHI, ISLEMADI,SURE,TUTAR,TUTARBIRIMI,ADET,ONAYLI,MASRAF,MASRAFBIRIMI
,MUAFIYET, MUSTERINO,EKRANTIPI, ROW_DATE,ROL,UNVAN,TAKIM,SUBEILKODU,SUBEBOLGEKODU,SUBEBOLGEADI,MUSTERISEGMENT,SOURCE,HIZMETYETKIDURUMU,TRANSACTIONOBJECTID,ISLEM_ADI_INGILIZCE,
ISLEM_ADI_TURKCE,EKRAN_TIPI,ZT from (
select DWH.*,SUIS.ZT, case when (SUIS.ZT-DWH.ISLEMTARIHI)<365 and (SUIS.ZT-DWH.ISLEMTARIHI)>=0 then 'EVET' else 'HAYIR' end as FARK from PERRISKVBDWHSUBERAPOR2  DWH 
left outer join (select SICIL as SICIL,ZT
from PERRISKSUISTIMALLISTEES) SUIS
on SUIS.SICIL=DWH.SICIL) where FARK='EVET'


create table PERRISKYOGTEDIYE3AY as
select    MUSTERINO,SUBSTR('VB'||SICIL,-5) AS SICIL,sum(tutar) AS TEDIYE_TUTARI,COUNT(*) AS TEDIYE_SAYISI,max(TRUNC(ISLEMTARIHI)) as MAKS_TEDIYE_TARIHI
FROM    (select * from PERRISKSUBERAPORZT4 -- where FARK<91
)  group by MUSTERINO,SUBSTR('VB'||SICIL,-5) having sum(tutar)>=5000   ;


CREATE TABLE PERRISKMSTYOGUNLASMATED3AY_V1 AS
select distinct Yo.*,SU.ZT from PERRISKYOGTEDIYE3AY YO left outer join PERRISKSUISTIMALLISTEES SU on substr(SU.SICIL,-5)=YO.SICIL


--CREATE TABLE SICIL_MUSTERI_YOG_TEDIYE_3AY AS 
--select      A.MUSTERINO,SUBSTR(''VB''||A.SICIL,-5) AS SICIL,sum(tutar) AS TEDIYE_TUTARI,COUNT(*) AS TEDIYE_SAYISI,max(TRUNC(A.ISLEMTARIHI)) as MAKS_TEDIYE_TARIHI
--                       FROM    vbdwh.DWHSUBERAPOR  A, vbrisk.SUBE_ISLEM_TURLERI B  
--                       WHERE   A.ISLEMADI = B.ISLEM_ADI_INGILIZCE(+) 
--                               and TRUNC(A.ISLEMTARIHI) >= trunc(LAST_DAY(add_months(sysdate,-4))+1) 
--                               and TRUNC(A.ISLEMTARIHI) <= trunc(LAST_DAY(add_months(sysdate,-1)))
--                               and tutar>0
--                                AND upper
--                                   (case  
--                                   When  ( B.ISLEM_ADI_TURKCE is null or trim(B.ISLEM_ADI_TURKCE) = '''') 
--                                   Then  A.ISLEMADI 
--                                   Else  B.ISLEM_ADI_TURKCE 
--                                    end
--                                   )NOT LIKE ''%ONAY%'' 
--                                   and MUSTERINO IS NOT NULL
--                                   --AND MUSTERINO =''445001657297''
--                                   AND ISLEMADI in (''Mevduat Para Çek'',''Mevduat Hesap Kapat'')          
--                              group by MUSTERINO,SUBSTR(''VB''||A.SICIL,-5)
--                              having sum(tutar)>=5000   --md606 da 30.000 kullanıyoruz ancak, müşteri risklilik belirlemede kullanılmak üzere 5.000 yapıldı /13.07.2015                
--;

create table PERRISKYOGMUSTERINO as
select MUSTERINO from
PERRISKMSTYOGUNLASMA3AY_V1 
UNION 
select MUSTERINO from
PERRISKMSTYOGUNLASMATED3AY_V1 

--AÇIK KREDİSİ OLAN MÜŞTEİRLER ELENİR

create TABLE PERRISKYOGMUSTERINOACKKRD AS
    select MUSTERINO from
    (SELECT BRY.*, YO.ZT FROM 
    (select * from
    VITDWH.DW_BKR_BIREYSELKREDIHESAP where MUSTERINO IN (select distinct * from PERRISKYOGMUSTERINO) ) BRY inner join (select * from PERRISKMSTYOGUNLASMA3AY_V1 YF
    inner join (select substr(SICIL,-5) as SICIL2 from PERRISKSUISTIMALLISTEES) MS on YF.SICIL=MS.SICIL2
    ) YO
    on BRY.MUSTERINO=YO.MUSTERINO)
    where ZT>KULLANDIRIMTARIHI and KREDIHESAPDURUMTARIHI>ZT and KREDIHESAPDURUMKODU='1'
    UNION 
    select MUSTERINO from(SELECT TKR.*,YP.ZT FROM (select * from VITDWH.DW_TKR_HESAP where MUSTERINO IN (select distinct * from PERRISKYOGMUSTERINO) ) TKR 
    inner join (select YF.* from PERRISKMSTYOGUNLASMA3AY_V1 YF
    inner join (select substr(SICIL,-5) as SICIL2, ZT from PERRISKSUISTIMALLISTEES) MS on YF.SICIL=MS.SICIL2
    ) YP
    on TKR.MUSTERINO=YP.MUSTERINO)
    where ZT>KREDIKULLANDIRIMTARIHI and KREDIDURUMDEGISIKLIKTARIHI>ZT and KREDIDURUMKODU='1'
    UNION
    select MUSTERINO from (SELECT ADT.*, YA.ZT FROM 
    (select * from VITDWH.DW_ADT_HESAP where MUSTERINO IN (select distinct * from PERRISKYOGMUSTERINO) ) ADT inner join (select YF.* from PERRISKMSTYOGUNLASMA3AY_V1 YF
    inner join (select substr(SICIL,-5) as SICIL2, ZT from PERRISKSUISTIMALLISTEES) MS on YF.SICIL=MS.SICIL2
    ) YA on ADT.MUSTERINO=YA.MUSTERINO)
    where ZT>KREDIKULLANDIRIMTARIHI and KREDIDURUMDEGISIKLIKTARIHI>ZT and KREDIDURUMKODU='1'




DELETE  FROM PERRISKMSTYOGUNLASMATED3AY_V1
WHERE   MUSTERINO IN (SELECT MUSTERINO FROM PERRISKYOGMUSTERINOACKKRD ) 
;


select distinct SICIL from SICIL_MST_YOG_HSP_3AY_FO

--%90 VE ÜZERİ YOĞUNLAŞAN, TOPLAMDA 5000 ÜSTÜ TEDİYESİ OLANLARA AİT HESAPLAR TESPİT EDİLİR 

CREATE TABLE PERRISKMSTYOGUNLASMAHSP3AY AS      
 SELECT distinct --YOG.SICIL
 YOG.*,HESAPNO 
 FROM 
 (SELECT XX.*,TEDIYE_TUTARI,TEDIYE_SAYISI,MAKS_TEDIYE_TARIHI,YY.ZT FROM PERRISKMSTYOGORAN3AY XX INNER JOIN  
 (select * from PERRISKMSTYOGUNLASMATED3AY_V1) YY ON XX.MUSTERINO=YY.MUSTERINO 
 AND XX.SICIL=YY.SICIL
 WHERE TEDIYE_TUTARI>=5000
 )YOG
 INNER JOIN HESAPMUSTERIILISKISI HM ON YOG.MUSTERINO=HM.VBMUSTERINO
  WHERE LENGTH(HESAPNO)=17 
;

create TABLE PERRISKMSTYOGUNLASMAHH3AY AS  -- 5SAATe yakın sürüyor
select MVD.* from
VITDWH.DW_MVD_HESAPHAREKET MVD
INNER JOIN PERRISKMSTYOGUNLASMAHSP3AY HY ON MVD.HESAPNO=HY.HESAPNO AND MVD.ISLEMTARIHI-HY.ZT>=0 and MVD.ISLEMTARIHI-HY.ZT<365

 
--SON ÜÇ  AYDA MÜŞTERİNİN HESABINDAN ADK VE ŞUBE KANALIYLA YAPILAN PARA ÇIKIŞ İŞLEMLERİ 

create TABLE PERRISKMSTYOGUNLASMAADK3AY AS 
SELECT MUSTERINO,HESAP_NO,TUR,DECODE(TUR,'SPC',ISLEM_SICIL,TUR) AS TUR_SICIL,COUNT(*) AS ISLEM_aDEDI,SUM(ABS(ISLEM_MIKTARI))  AS ISLEM_MIKTARI_MUTLAK,max(hareket_tarihi)  as maks_tediye_trh FROM 
(
        SELECT SUBSTR(HESAPNO,-11) AS HESAP_NO,ISLEMTARIHI AS HAREKET_TARIHI,FISNO AS FIS_NO,
        ISLEMTUTARI AS ISLEM_MIKTARI,
        SUBSTR(KULLANICIKODU,-5) AS  ISLEM_SICIL, 
        case 
        when KANALKODU IN (4,6) THEN 'INT'
        WHEN KANALKODU =1 AND  ISLEMKODU IN (select DETAILCODE from vitdwh.dw_app_transactiondetailcode WHERE HOSTCODE IN ('A73','A51','D09') AND DETAILCODE NOT LIKE 'CEK%') THEN 'SPC' 
        WHEN KANALKODU IN (2,12) THEN 'ATM'
        WHEN KANALKODU IN (3,7,13) THEN 'POS'                               
        ELSE 'XXX'  
        END  AS TUR                                                      
        FROM PERRISKMSTYOGUNLASMAHH3AY
        WHERE 
        ISLEMTUTARI<0
)
 E 
INNER JOIN PERRISKMSTYOGUNLASMAHSP3AY HY ON E.HESAP_NO=SUBSTR(HY.HESAPNO,-11) AND E.HAREKET_TARIHI-HY.ZT>=0 and E.HAREKET_TARIHI-HY.ZT<365
GROUP BY MUSTERINO,HESAP_NO,TUR,DECODE(TUR,'SPC',ISLEM_SICIL,TUR)

;
create table PERRISKMSTYOGADK3AY AS 

SELECT SPC.MUSTERINO,SPC.HESAP_NO,SPC.maks_tediye_trh,SPC.SPC_ADEDI,SPC.SPC_ISLEM_MIKTARI,INTERNET,ATM_POS_ISLEM_ADEDI,ATM_POS_ISLEM_MIKTARI,INT_ISLEM_ADEDI, INT_ISLEM_MIKTARI  FROM 

(SELECT MUSTERINO,HESAP_NO,maks_tediye_trh, SUM(ISLEM_ADEDI)  AS SPC_ADEDI, SUM(ISLEM_MIKTARI_MUTLAK) AS SPC_ISLEM_MIKTARI  FROM PERRISKMSTYOGUNLASMAADK3AY 
WHERE TUR='SPC'  AND MUSTERINO||SUBSTR('0'||TUR_SICIL,-5) IN (SELECT DISTINCT MUSTERINO||SUBSTR('0'||SICIL,-5) FROM PERRISKMSTYOGUNLASMAHSP3AY )
GROUP BY MUSTERINO,HESAP_NO,maks_tediye_trh
)SPC --SPC HESAPLAR
LEFT OUTER JOIN
(
SELECT MUSTERINO,HESAP_NO,SUM(ISLEM_ADEDI) AS ATM_POS_ISLEM_ADEDI, SUM(ISLEM_MIKTARI_MUTLAK) AS ATM_POS_ISLEM_MIKTARI FROM PERRISKMSTYOGUNLASMAADK3AY 
WHERE TUR IN ('ATM','POS')
GROUP BY MUSTERINO,HESAP_NO
)A_POS --ATM_POS
ON A_POS.HESAP_NO=SPC.HESAP_NO
LEFT OUTER JOIN
(
SELECT MUSTERINO,HESAP_NO,'E' AS "INTERNET",SUM(ISLEM_ADEDI) AS INT_ISLEM_ADEDI, SUM(ISLEM_MIKTARI_MUTLAK) AS INT_ISLEM_MIKTARI FROM PERRISKMSTYOGUNLASMAADK3AY 
WHERE TUR='INT'
GROUP BY MUSTERINO,HESAP_NO
)INTER --INTERNET 
ON INTER.HESAP_NO=SPC.HESAP_NO
--WHERE SUBSTR(SPC.HESAP_NO,1,1)  NOT IN ('1','3')
;


--EXECUTE IMMEDIATE 'CREATE TABLE SICIL_MUSTERI_YOG_ADK_3AY AS 
--
--SELECT SPC.MUSTERINO,SPC.HESAP_NO,SPC.maks_tediye_trh,SPC.SPC_ADEDI,SPC.SPC_ISLEM_MIKTARI,INTERNET,ATM_POS_ISLEM_ADEDI,ATM_POS_ISLEM_MIKTARI,INT_ISLEM_ADEDI, INT_ISLEM_MIKTARI  FROM 
--
--(SELECT MUSTERINO,HESAP_NO,maks_tediye_trh, SUM(ISLEM_ADEDI)  AS SPC_ADEDI, SUM(ISLEM_MIKTARI_MUTLAK) AS SPC_ISLEM_MIKTARI  FROM SICIL_MUSTERI_YOG_ADK_DTY_3AY
--WHERE TUR=''SPC''  AND MUSTERINO||SUBSTR(''0''||TUR_SICIL,-5) IN (SELECT DISTINCT MUSTERINO||SUBSTR(''0''||SICIL,-5) FROM SICIL_MUSTERI_YOG_HESAPLAR_3AY)
--GROUP BY MUSTERINO,HESAP_NO,maks_tediye_trh
--)SPC --SPC HESAPLAR
--LEFT OUTER JOIN
--(
--SELECT MUSTERINO,HESAP_NO,SUM(ISLEM_ADEDI) AS ATM_POS_ISLEM_ADEDI, SUM(ISLEM_MIKTARI_MUTLAK) AS ATM_POS_ISLEM_MIKTARI FROM SICIL_MUSTERI_YOG_ADK_DTY_3AY
--WHERE TUR IN (''ATM'',''POS'')
--GROUP BY MUSTERINO,HESAP_NO
--)A_POS --ATM_POS
--ON A_POS.HESAP_NO=SPC.HESAP_NO
--LEFT OUTER JOIN
--(
--SELECT MUSTERINO,HESAP_NO,''E'' AS "INTERNET",SUM(ISLEM_ADEDI) AS INT_ISLEM_ADEDI, SUM(ISLEM_MIKTARI_MUTLAK) AS INT_ISLEM_MIKTARI FROM SICIL_MUSTERI_YOG_ADK_DTY_3AY
--WHERE TUR=''INT''
--GROUP BY MUSTERINO,HESAP_NO
--)INTER --INTERNET 
--ON INTER.HESAP_NO=SPC.HESAP_NO
----WHERE SUBSTR(SPC.HESAP_NO,1,1)  NOT IN (''1'',''3'')
;

--ANA YOĞUNLAŞMA TABLOSU

create table  PERRISKSUISTIMALLISTEES_S as
select distinct GN.* , TP.TCKIMLIKNO, TP.FIILIBIRIMKODU,TP.FIILIGOREVBASLANGICTARIHI from PERRISKSUISTIMALLISTEES GN left outer join
(select * from IKY.DW_IKY_PERSONEL) TP on GN.SICIL=TP.BANKASICILNO


--BURADAKALDIK
create table PERRISKHARKKB as
select PL.*, concat(PL.SICIL_NO,substr(concat('000', PL.PID),-2)) as ANAHTAR from 
(select HH.*,
DENSE_RANK() OVER (PARTITION BY HH.SICIL_NO ORDER BY TRUNC(HH.ZTONCESISONHAREKET) ASC)
AS PID from (
select  SICIL_NO,CALISTIGI_BIRIM_KODU, KADRO_BIRIMI_KODU, MAX(HAREKET_BASLAMA_TARIHI) as ZTONCESISONHAREKET from(
SELECT SH.*,KH.ZT from
(SELECT *
FROM IKY.V_DW_GRV_PERSONELHAREKETLERI where SICIL_NO IN (select SICIL from PERRISKSUISTIMALLISTEES)) SH
left outer join (select SICIL,ZT from PERRISKSUISTIMALLISTEES_S) KH on SH.SICIL_NO=KH.SICIL
where SH.HAREKET_BASLAMA_TARIHI<KH.ZT)
group by SICIL_NO,CALISTIGI_BIRIM_KODU, KADRO_BIRIMI_KODU
order by SICIL_NO,ZTONCESISONHAREKET)
 HH) PL
 
 
create table PERRISKHARKKB_2 as
select FB.* from PERRISKHARKKB FB where ANAHTAR IN (
select ANAHTAR from (
select AA.*, concat(AA.SICIL_NO,substr(concat('000', AA.MAXPID),-2)) as ANAHTAR  from ( 
select SICIL_NO, MAX(PID) as MAXPID from  PERRISKHARKKB
group by SICIL_NO) AA))

create table PERRISKHARKKB_3 as
select H2.*, H3.ZT from PERRISKHARKKB_2 H2
left outer join (select SICIL,ZT from PERRISKSUISTIMALLISTEES where DURUM='KENDISI') H3 on H2.SICIL_NO=H3.SICIL;


INSERT INTO  PERRISKMSTYG3AYGUNCEL
   
   (MUSTERINO, SICIL, CALISTIGI_BIRIM_KODU, 
   SUBE_BASLAMA_TARIHI, SICILIN_TOPLAM_ISLEM_SAYISI, SICILIN_TOPLAM_ISLEM_MIKTARI, 
   MAKS_ISLEM_TARIHI,MIN_ISLEM_TARIHI, TOPLAM_ISLEM_SAYISI, YOGUNLASMA, 
   TEDIYE_TUTARI, TEDIYE_SAYISI, ADK_ISLEM_ADEDI, 
   ATM_POS_ISLEM_MIKTARI, INT_ISLEM_ADEDI, INT_ISLEM_MIKTARI, 
   BASLANGIC_TARIHI, BITIS_TARIHI, OLUSTURMA_TARIHI,MAKS_TEDIYE_TARIHI)  

SELECT distinct XX.MUSTERINO,XX.SICIL, PSB.FIILIBIRIMKODU as CALISTIGI_BIRIM_KODU, PSB.FIILIGOREVBASLANGICTARIHI as SUBE_BASLAMA_TARIHI , XX.SICILIN_TOPLAM_ISLEM_SAYISI, XX.SICILIN_TOPLAM_ISLEM_MIKTARI,
XX.MAKS_ISLEM_TARIHI,XX.MIN_ISLEM_TARIHI,XX.TOPLAM_SICIL_ISLEM_SAYISI AS TOPLAM_ISLEM_SAYISI,
XX.YOGUNLASMA,ADK.SPC_ISLEM_MIKTARI AS TEDIYE_TUTARI,ADK.SPC_ISLEM_ADEDI AS TEDIYE_SAYISI, 
ADK.ATM_POS_ISLEM_ADEDI AS ADK_ISLEM_ADEDI,ATM_POS_ISLEM_MIKTARI,INT_ISLEM_ADEDI,INT_ISLEM_MIKTARI, 
trunc(LAST_DAY(add_months(sysdate,-4))+1) as baslangic_tarihi, trunc(LAST_DAY(add_months(sysdate,-1))) as bitis_tarihi,
 trunc(sysdate) as olusturma_tarihi,XX.MAKS_ISLEM_TARIHI as MAKS_TEDIYE_TARIHI
 FROM  PERRISKMSTYOGORAN3AY 
  XX 
 INNER JOIN 
 (SELECT MUSTERINO,SUM(SPC_ADEDI) AS SPC_ISLEM_ADEDI,SUM(SPC_ISLEM_MIKTARI) AS SPC_ISLEM_MIKTARI,
  SUM(ATM_POS_ISLEM_ADEDI)As ATM_POS_ISLEM_ADEDI,sum(ATM_POS_ISLEM_MIKTARI) AS ATM_POS_ISLEM_MIKTARI, SUM(INT_ISLEM_ADEDI) AS INT_ISLEM_ADEDI ,
 SUM(INT_ISLEM_MIKTARI) AS INT_ISLEM_MIKTARI  FROM PERRISKMSTYOGADK3AY  GROUP BY MUSTERINO) ADK ON XX.MUSTERINO=ADK.MUSTERINO
LEFT OUTER JOIN PERRISKSUISTIMALLISTEES_S PSB ON SUBSTR('0'||PSB.SICIL,-5)=SUBSTR('0'||XX.SICIL,-5) --AND PSB.PERSON_TYPE_ID='1120'
WHERE XX.MUSTERINO IN  (SELECT VB_MUSTERI_NO FROM MUSTERI_GUNLUK --WHERE G_T='G'
)
AND ADK.SPC_ISLEM_MIKTARI>=5000 --5.000 ÜZERİ ŞUBE PARA ÇEK OLMALI
--AND ADK.ISLEM_ADEDI IS NULL
--AND ( SICILIN_TOPLAM_ISLEM_SAYISI>1  OR (SICILIN_TOPLAM_ISLEM_SAYISI=1 AND TEDIYE_TUTARI>=50000))
--and XX.MUSTERINO NOT in (SELECT MUSTERINO FROM IKY.DW_IKY_PERSONEL --personel hesapları elenir
                       -- WHERE KISITIPI=1 
                       -- AND DURUMKODU IN (1120,1147) --ÇALIŞAN, HİZMET AKDİ ASKIDA
                        --AND MUSTERINO IS NOT NULL
                        --) --personel hesapları elenir
order by  XX.MUSTERINO
;



create table PERRISKYOGUNLASMARISKI as

 SELECT  S.NAME,S.OPENINGDATE,MG.ISIM,
  Y.*,H.HESAPLAR,LENGTH(H.HESAPLAR) AS UZUNLUK, sysdate as TARIH  FROM PERRISKMSTYG3AYGUNCEL Y 
LEFT OUTER JOIN (SELECT MUSTERINO,count(hesap_no) AS HESAPLAR FROM PERRISKMSTYOGUNLASMAADK3AY
                 WHERE TUR='SPC'   GROUP BY MUSTERINO) H ON Y.MUSTERINO=H.MUSTERINO 
LEFT OUTER JOIN MUSTERI_GUNLUK MG ON Y.MUSTERINO=MG.VB_MUSTERI_NO                
LEFT OUTER JOIN (SELECT 
                CODE, NAME,OPENINGDATE
                 FROM VITDWH.DW_SEC_BRANCH_TIP2
--                 WHERE CURRENTFLAG=1
                 WHERE CLOSINGDATE IS NULL
                 AND CODE LIKE 'S%'
                )S ON Y.CALISTIGI_BIRIM_KODU='S'||SUBSTR(S.CODE,-4)
left outer join PERRISKSUISTIMALLISTEES_S HAR on Y.SICIL=substr(HAR.SICIL,-5)
 
WHERE  OLUSTURMA_TARIHI=(SELECT MAX(OLUSTURMA_TARIHI) FROM PERRISKMSTYG3AYGUNCEL) --)
 and (sicilin_toplam_islem_sayisi>3 or (sicilin_toplam_islem_sayisi=3 and tediye_sayisi=3)) --) 
--AND (TRUNC(BITIS_TARIHI)-SUBE_BASLAMA_TARIHI>(365*3) 
--        OR (TRUNC(BITIS_TARIHI)-OPENINGDATE>(365*2) AND TRUNC(BITIS_TARIHI)-SUBE_BASLAMA_TARIHI>(365*2) AND SUBE_BASLAMA_TARIHI-OPENINGDATE<31  ))   
-- 3 YILDAN UZUN AYNI ŞUBEDA ÇALIŞAN VEYA ŞUBE AÇILIŞ TARİHİNDEN SONRA 1 AY İÇİNDE ŞUBEYE BAŞLAYANALAR İÇİN 2 YILDIR AYNI ŞUBEDE ÇALIŞAN
 --and TRUNC(BITIS_TARIHI)-SUBE_BASLAMA_TARIHI>(365)
-- AND SUBSTR('0'||SICIL,-5) NOT IN (SELECT SUBSTR('00'||REPLACE(UPPER(SICIL),'VB',''),-5)
--                                             FROM IKY.DW_PDK_PERSONELIZINKULLANIM
--                                                WHERE IZINBASLANGICTARIHI>=trunc(LAST_DAY(add_months(HAR.ZT,-8))+1)
--                                                AND IZINBASLANGICTARIHI<trunc(LAST_DAY(add_months(HAR.ZT,-5)))+1 
--                                                AND IZINDURUMKODU IN ('3','1')--ONAYLI İZİNLER 
--                                                AND IZINKULLANIMTIPI='1'--GÜNLÜK İZİN (SAATLİK DEĞİL)
----                                                --AND KISITIPIKODU='1120' 
--                                               AND IZNINSISTEMEGIRISTARIHI<IZINBASLANGICTARIHI
--                                               AND (CASE WHEN IZINSURESI IS NULL THEN IZINBITISTARIHI-IZINBASLANGICTARIHI ELSE IZINSURESI END)>=10
--                                   )--BU SÜREDE 10 GÜNLÜK İZİN KULLANAN VE SİSTEME GİRİŞİNİ İZİNE ÇIKMADAN ÖNCE YAPANLAR ELENİR

AND Y.MUSTERINO IN
--INTERNETTEN ISLEM YAPMAMIŞ OLACAK(1 TEK İŞLEM DAHİ OLSA HİÇ GELMEYECEK), 
--ŞUBE PARA ÇEK GERÇEKLEŞEN  HESABINDAN ADK İŞLEMİ HİÇ OLMAYACAK
 (
SELECT  MUSTERINO FROM PERRISKMSTYOGADK3AY
WHERE MUSTERINO NOT IN (SELECT MUSTERINO FROM PERRISKMSTYOGADK3AY WHERE INTERNET='E') --İNTERNET ELENECEK
 AND ATM_POS_ISLEM_ADEDI IS NULL
 UNION ALL
 
--INTERNETTEN ISLEM YAPMAMIŞ OLACAK, ŞUBE PARA ÇEK GERÇEKLEŞEMN HESABINDAN 4000 PB DEN AZ ATM_POS İŞLEMİ VE TOPLAMDA 4 TEN AZ ATM_POS İŞLEMİ GERÇEKLEŞECEK  

SELECT  MUSTERINO FROM PERRISKMSTYOGADK3AY
WHERE MUSTERINO NOT IN (SELECT  MUSTERINO FROM PERRISKMSTYOGADK3AY
 
                        WHERE MUSTERINO NOT IN (SELECT MUSTERINO FROM PERRISKMSTYOGADK3AY WHERE INTERNET='E') --İNTERNET ELENECEK
 
                        AND ATM_POS_ISLEM_ADEDI IS NULL)
 
AND MUSTERINO NOT IN (SELECT MUSTERINO FROM PERRISKMSTYOGADK3AY WHERE INTERNET='E')             
AND (ATM_POS_ISLEM_ADEDI<4 AND  ATM_POS_ISLEM_MIKTARI<4000)           
)
;




select * from (
select YG.*, MA.ZT from PERRISKYOGUNLASMARISKI   YG left outer join 
PERRISKSUISTIMALLISTEES_S MA on 'VB'||YG.SICIL=MA.SICIL ) where

(TRUNC(BITIS_TARIHI)-SUBE_BASLAMA_TARIHI>(365*3) 
        OR (TRUNC(BITIS_TARIHI)-OPENINGDATE>(365*2) AND TRUNC(BITIS_TARIHI)-SUBE_BASLAMA_TARIHI>(365*2) AND SUBE_BASLAMA_TARIHI-OPENINGDATE<31  ))   
        -- 3 YILDAN UZUN AYNI ŞUBEDA ÇALIŞAN VEYA ŞUBE AÇILIŞ TARİHİNDEN SONRA 1 AY İÇİNDE ŞUBEYE BAŞLAYANALAR İÇİN 2 YILDIR AYNI ŞUBEDE ÇALIŞAN
 and TRUNC(BITIS_TARIHI)-SUBE_BASLAMA_TARIHI>(365)
 AND SUBSTR('0'||SICIL,-5) NOT IN (SELECT SUBSTR('00'||REPLACE(UPPER(SICILNO),'VB',''),-5)
                                                FROM IKY.DW_PDK_PERSONELIZINKULLANIM
                                                WHERE IZINBASLANGICTARIHI>=trunc(LAST_DAY(add_months(sysdate,-8))+1)
                                                AND IZINBASLANGICTARIHI<trunc(LAST_DAY(add_months(sysdate,-5)))+1 
                                                AND IZINDURUMKODU IN ('3','1')--ONAYLI İZİNLER 
                                                AND IZINKULLANIMTIPI='1'--GÜNLÜK İZİN (SAATLİK DEĞİL)
                                                AND IZNINSISTEMEGIRISTARIHI<IZINBASLANGICTARIHI




/*
--YOĞUNLAŞMA LİSTESİNDEKİ MÜŞTERİLERE AİT DYS PARA ÇEK KAYITLARININ TARAMA VEYA ARŞİVDEN KAYIT OLDUKLARININ TESPİTİ 
EXECUTE IMMEDIATE '
create table  yogunlasma_dys_3ay as

select d.* from 
(select  R.LOGINID, R.FRSCUSTOMERNO,R.INSTANCEID, INSTANCECREATE,substr(R.FRSACCOUNTNO,-11) as hesap_no,R.FRSTRANSACTIONNO,taskname,row_number() over(partition by INSTANCEID order by taskname) as rn 
from vbdwh.dwhvbreportlog r
where R.FRSMAINCATEGORYNAME=''KİMLİK'' and FRSDOCUMENTTYPENAME in (''Sürücü Belgesi'',''Nüfus Cüzdanı'',''Pasaport'')  
and R.INSTANCECREATE>=trunc(LAST_DAY(add_months(sysdate,-4))+1) 
AND R.INSTANCECREATE<= trunc(LAST_DAY(add_months(sysdate,-1)))+1  
AND R.FRSMAINFUNCTIONNAME=''Para Çek'' 
)d
inner join 
(SELECT musterino,sicil FROM SICIL_MUSTERI_YOGUNLASMASI_3AY
WHERE  ADK_ISLEM_ADEDI IS NULL
AND ( SICILIN_TOPLAM_ISLEM_SAYISI>1  OR (SICILIN_TOPLAM_ISLEM_SAYISI=1 AND TEDIYE_TUTARI>=50000))
AND TRUNC(BITIS_TARIHI)-SUBE_BASLAMA_TARIHI>(365*3)
)y
on d.FRSCUSTOMERNO=y.musterino
';


--tarama kaydı olanlar
/*
select trm.frscustomerno, upper(trm.loginid) as sicil, decode(ars.taskname,null,''Tarama'',ars.taskname)as Tur from 

(select distinct  frscustomerno,instanceid,loginid from yogunlasma_dys_3ay
where taskname=''Tarama''
)trm
left outer join 
(select distinct loginid,frscustomerno,instanceid,hesap_no,frstransactionno,taskname from yogunlasma_dys_3ay
where taskname =''EASY Aktarım''
)ars
on ars.instanceid=trm.instanceid
where ars.taskname is null
order by trm.frscustomerno,trm.instanceid
*/



create table PERRISKYOGUNLASMAPUANI as
SELECT sicil,case when sayi< (SELECT ceil(replace(ROUND(AVG(TO_NUMBER(NVL(SAYI,'0'))),2),'.',','))  AS ORTALAMA 
                             FROM (select distinct sicil,COUNT(DISTINCT MUSTERINO) as sayı from PERRISKYOGUNLASMARISKI GROUP BY SICIL)) THEN 2
                  WHEN sayi>= (SELECT ceil(replace(ROUND(AVG(TO_NUMBER(NVL(SAYI,'0'))),2),'.',','))  AS ORTALAMA 
                                 FROM (select distinct sicil,COUNT(DISTINCT MUSTERINO) as sayı from PERRISKYOGUNLASMARISKI GROUP BY SICIL)) and
                        sayi< (SELECT ceil(replace(ROUND(AVG(TO_NUMBER(NVL(SAYI,'0'))),2),'.',','))+ceil(replace(ROUND(STDDEV(TO_NUMBER(NVL(SAYI,'0'))),2),'.',','))
                                 FROM (select distinct sicil,COUNT(DISTINCT MUSTERINO) as sayı from PERRISKYOGUNLASMARISKI GROUP BY SICIL))
                        THEN 1 ELSE 0 END AS YOG_PUANI
FROM (select distinct sicil,COUNT(DISTINCT MUSTERINO) as sayı from PERRISKYOGUNLASMARISKI GROUP BY SICIL);


create table PERRISKYOGUNLASMAPUANIADET as
SELECT SICIL,case when ISLEM_SAYISI>=(SELECT AVG(ISLEM_SAYISI)+STDDEV(ISLEM_SAYISI)  
                         FROM (SELECT SICIL,MAX(SICILIN_TOPLAM_ISLEM_SAYISI)
                         AS ISLEM_SAYISI FROM PERRISKYOGUNLASMARISKI   -- SICILIN MÜŞTERİ BAZINDA YAPTIĞII MAX İŞLEM SAYISI
                         GROUP BY SICIL)) THEN 3 when ISLEM_SAYISI<=(SELECT AVG(ISLEM_SAYISI) 
                         FROM (SELECT SICIL,MAX(SICILIN_TOPLAM_ISLEM_SAYISI)
                         AS ISLEM_SAYISI FROM PERRISKYOGUNLASMARISKI   -- SICILIN MÜŞTERİ BAZINDA YAPTIĞII MAX İŞLEM SAYISI
                         GROUP BY SICIL)) THEN 1                         
     ELSE 2 END AS ISLEM_SAYISI_YOG FROM
(SELECT SICIL,MAX(SICILIN_TOPLAM_ISLEM_SAYISI) AS ISLEM_SAYISI FROM PERRISKYOGUNLASMARISKI   -- SICILIN MÜŞTERİ BAZINDA YAPTIĞII MAX İŞLEM SAYISI
GROUP BY SICIL);






--*******************************ALTMIS_YAS_USTU***********************************************************************
create table PERRISK60YASUSTU as
select sicil, MAX(ALTMIS_YAS_USTU) as ALTMIS_YAS_USTU from (
select SICIL, case when YAS>=60 then 1 else 0 end as ALTMIS_YAS_USTU from PERRISKMSTYG3AYGUNCEL SF INNER JOIN 
 (SELECT 

MUSTERINO,AD||' '||SOYAD AS ISIM,ROUND((TRUNC(SYSDATE)-DOGUMTARIHI)/365,0) AS YAS,OLUMTARIHI
 
FROM VITDWH.DW_MST_MUSTERIGERCEK) B ON SF.MUSTERINO=B.MUSTERINO 
order by SICIL)
group by SICIL


CREATE table PERRISKYOGUNLASMAZMMTPUAN as
select  RM.*, nvl(Y60.ALTMIS_YAS_USTU,0) as YAS60_PUANI  from PERRISKYOGUNLASMAZMMT RM left outer join
PERRISK60YASUSTU Y60 on Y60.SICIL=substr(RM.SICIL,-5)





/*
select  RM.*,nvl(YA.ISLEM_SAYISI_YOG,0) as ISLEM_SAYISI_YOG,nvl(YS.YOG_PUANI,0) as YOG_PUANI  from PERRISKSUISTIMALLISTEES RM left outer join
YOGUNLASMAPUANI_FO YS on YS.SICIL=substr(RM.SICIL,-5) left outer join
YOGUNLASMAPUANI_ADET_FO YA on YA.SICIL=substr(RM.SICIL,-5)


create table PERRISKYOGUNLASMAPUANI as
SELECT sicil,case when sayi< (SELECT ceil(replace(ROUND(AVG(TO_NUMBER(NVL(SAYI,'0'))),2),'.',','))  AS ORTALAMA 
                             FROM (select distinct sicil,COUNT(DISTINCT MUSTERINO) as sayı from PERRISKYOGUNLASMARISKI GROUP BY SICIL)) THEN 2
                  WHEN sayi>= (SELECT ceil(replace(ROUND(AVG(TO_NUMBER(NVL(SAYI,'0'))),2),'.',','))  AS ORTALAMA 
                                 FROM (select distinct sicil,COUNT(DISTINCT MUSTERINO) as sayı from PERRISKYOGUNLASMARISKI GROUP BY SICIL)) and
                        sayi< (SELECT ceil(replace(ROUND(AVG(TO_NUMBER(NVL(SAYI,'0'))),2),'.',','))+ceil(replace(ROUND(STDDEV(TO_NUMBER(NVL(SAYI,'0'))),2),'.',','))
                                 FROM (select distinct sicil,COUNT(DISTINCT MUSTERINO) as sayı from PERRISKYOGUNLASMARISKI GROUP BY SICIL))
                        THEN 1 ELSE 0 END AS YOG_PUANI
FROM (select distinct sicil,COUNT(DISTINCT MUSTERINO) as sayı from PERRISKYOGUNLASMARISKI GROUP BY SICIL);


create table YOGUNLASMAPUANI_ADET_FO as
SELECT SICIL,case when ISLEM_SAYISI>=(SELECT AVG(ISLEM_SAYISI)+STDDEV(ISLEM_SAYISI)  
                         FROM (SELECT SICIL,MAX(SICILIN_TOPLAM_ISLEM_SAYISI)
                         AS ISLEM_SAYISI FROM yogunlasma_risk_FO2  -- SICILIN MÜŞTERİ BAZINDA YAPTIĞII MAX İŞLEM SAYISI
                         GROUP BY SICIL)) THEN 3 when ISLEM_SAYISI<=(SELECT AVG(ISLEM_SAYISI) 
                         FROM (SELECT SICIL,MAX(SICILIN_TOPLAM_ISLEM_SAYISI)
                         AS ISLEM_SAYISI FROM yogunlasma_risk_FO2  -- SICILIN MÜŞTERİ BAZINDA YAPTIĞII MAX İŞLEM SAYISI
                         GROUP BY SICIL)) THEN 1                         
     ELSE 2 END AS ISLEM_SAYISI_YOG FROM
(SELECT SICIL,MAX(SICILIN_TOPLAM_ISLEM_SAYISI) AS ISLEM_SAYISI FROM yogunlasma_risk_FO2  -- SICILIN MÜŞTERİ BAZINDA YAPTIĞII MAX İŞLEM SAYISI
GROUP BY SICIL);


create table FO_ZMMT_RAWDATA_V3 as
select  RM.*,nvl(YA.ISLEM_SAYISI_YOG,0) as ISLEM_SAYISI_YOG,nvl(YS.YOG_PUANI,0) as YOG_PUANI  from PERRISKSUISTIMALLISTEES RM left outer join
YOGUNLASMAPUANI_FO YS on YS.SICIL=substr(RM.SICIL,-5) left outer join
YOGUNLASMAPUANI_ADET_FO YA on YA.SICIL=substr(RM.SICIL,-5)
*/

----------------------------- ROL

---------------------------------------------1 YILDAN FAZLA AYNI SUBE PUANI-------------------------------------------------------------------------------

select L.*,substr(P.BANKASICILNO,-5) as SICIL from  PERRISKSUISTIMALLISTEES L left outer join IKY.DW_IKY_PERSONEL P on L.MUSTERINO=P.MUSTERINO
;

create TABLE  PERRISKSUBEBASLANGICYENIYAPI AS
select 
DURUM,PERSONID as PERSON_TYPE_ID,SICIL_NO as SICIL, concat(concat(ADI,''), SOYADI)  as ISIM,VAKIFBANK_GIRIS_TARIHI as BANKA_GIRIS_TARIHI,
HAREKETTURUACIKLAMASI as HAREKET_TURU,HAREKET_BASLAMA_TARIHI as  BASLANGIC_TARIHI,
HAREKET_BITIS_TARIHI as BITIS_TARIHI,  KADRO_BIRIMI_KODU ,  KADRO_BIRIMI_ADI as KADRO_BIRIMI,  ETKIN_UNVAN_ADI as ETKIN_UNVAN,  
TERFITARIHI as TERFI_TARIHI,  NAKILTARIHI as NAKIL_TARIHI,  BIRIM_BASLAMA_TARIHI as BIRIM_BAS_TARIHI,  FIILI_UNVAN_ADI ,
CALISTIGI_BIRIM_KODU ,  CALISTIGI_BIRIM_ADI as CALISTIGI_BIRIM,  ROLU as ROL ,  IMZAYETKIDERECESI as IMZA_DERECE,  RN  ,
FARKLI_BIRIM_SAYISI,  ONCEKI_HAREKET_BASLAMA_TARIHI as ONCEKI_BASLANGIC_TARIHI,  ONCEKI_HAREKET_BITIS_TARIHI  as ONCEKI_BITIS_TARIHI   ,
ONCEKI_CALSITIGI_BIRIM_KODU ,ZT,ZT1YIL,DURUM2
 
from
( select BB.*, PS.ZT,PS.ZT1YIL, case when BB.HAREKET_BASLAMA_TARIHI<PS.ZT and BB.HAREKET_BITIS_TARIHI>=PS.ZT then 'EVET' else 'HAYIR' end as DURUM2  from
(select AA.*,substr(concat('000000',AA.SICIL),-5) as SICIL2   from 
(SELECT CASE WHEN FBS.FARKLI_BIRIM_SAYISI >1 AND   X.CALISTIGI_BIRIM_KODU=NVL(Y.CALISTIGI_BIRIM_KODU,0) THEN 1 
WHEN FBS.FARKLI_BIRIM_SAYISI=1 THEN 1
ELSE 0  END AS DURUM,
X.*,
FBS.FARKLI_BIRIM_SAYISI, Y.HAREKET_BASLAMA_TARIHI AS ONCEKI_HAREKET_BASLAMA_TARIHI,Y.HAREKET_BITIS_TARIHI AS ONCEKI_HAREKET_BITIS_TARIHI,Y.CALISTIGI_BIRIM_KODU AS ONCEKI_CALSITIGI_BIRIM_KODU 
FROM 

(select VPH.*, 
VPH.AD as ADI,
VPH.SOYAD as SOYADI,
VPH.SICIL_NO as SICIL, ROW_NUMBER() OVER (PARTITION BY SICIL_NO ORDER BY HAREKET_BITIS_TARIHI DESC ) AS RN
from ( SELECT HRK.*, PER.MUSTERINO , PER.HESAPNO
FROM IKY.V_DW_GRV_PERSONELHAREKETLERI HRK
INNER JOIN IKY.DW_IKY_PERSONEL PER ON HRK.PERSONID=PER.PERSONELID
WHERE PER.BANKASICILNO IN (SELECT P.BANKASICILNO FROM PERRISKSUISTIMALLISTEES L 
left outer join IKY.DW_IKY_PERSONEL P on L.MUSTERINO=P.MUSTERINO and L.DURUM='KENDISI')
) VPH 
--where HAREKET_BITIS_TARIHI-HAREKET_BASLAMA_TARIHI>=7
--AND PERSON_TYPE_ID=''1120''
--AND VPH.SICIL=''23798''
)X
INNER JOIN 
(SELECT  SICIL_NO as SICIL, COUNT(DISTINCT CALISTIGI_BIRIM_KODU) AS FARKLI_BIRIM_SAYISI  FROM ( SELECT *
FROM IKY.V_DW_GRV_PERSONELHAREKETLERI HRK
INNER JOIN IKY.DW_IKY_PERSONEL PER ON HRK.PERSONID=PER.PERSONELID
WHERE PER.BANKASICILNO IN (SELECT P.BANKASICILNO FROM vbteftis2. PERRISKSUISTIMALLISTEES L 
left outer join IKY.DW_IKY_PERSONEL P on L.MUSTERINO=P.MUSTERINO and L.DURUM='KENDISI')
) GROUP BY SICIL_NO) FBS 
ON FBS.SICIL=X.SICIL 

LEFT OUTER JOIN 

(
select SICIL_NO,HAREKET_BASLAMA_TARIHI,HAREKET_BITIS_TARIHI,CALISTIGI_BIRIM_KODU,CALISTIGI_BIRIM_ADI,ROW_NUMBER() OVER (PARTITION BY SICIL_NO ORDER BY HAREKET_BITIS_TARIHI DESC ) 
 AS RN from ( SELECT *
FROM IKY.V_DW_GRV_PERSONELHAREKETLERI HRK
INNER JOIN IKY.DW_IKY_PERSONEL PER ON HRK.PERSONID=PER.PERSONELID
WHERE PER.BANKASICILNO IN (SELECT P.BANKASICILNO FROM vbteftis2. PERRISKSUISTIMALLISTEES L 
left outer join IKY.DW_IKY_PERSONEL P on L.MUSTERINO=P.MUSTERINO and L.DURUM='KENDISI')
)
--where HAREKET_BITIS_TARIHI-HAREKET_BASLAMA_TARIHI>=7
--AND SICIL='23798'
)Y
ON X.SICIL_NO=Y.SICIL_NO
AND X.RN=Y.RN-1
ORDER BY X.SICIL,X.RN) AA ) BB
left outer join (select * from ( select  substr(P.BANKASICILNO,-5) as SICIL,ZT,ZT-365 as ZT1YIL from  PERRISKSUISTIMALLISTEES L left 
 outer join IKY.DW_IKY_PERSONEL P on L.MUSTERINO=P.MUSTERINO and L.DURUM='KENDISI') where SICIL is not null
) PS on BB.SICIL2=PS.SICIL )
where 
--DURUM2='EVET' and   
ZT is not null
;
 



create table PERRISKSUBEBASLANGIC as
select AB.* from 
(SELECT YENI_SUBE_BASLAMA_TARIHI AS SUBE_BASLAMA_TARIHI, vph.PERSONID AS PERSON_TYPE_ID, vph.SICIL_NO as SICIL, 
   concat(concat(vph.AD,' '), vph.SOYAD) as ISIM, vph.VAKIFBANK_GIRIS_TARIHI as BANKA_GIRIS_TARIHI, vph.HAREKETTURU as HAREKET_TURU, 
   HAREKET_BASLAMA_TARIHI, HAREKET_BITIS_TARIHI, KADRO_BIRIMI_KODU, 
   vph.KADRO_BIRIMI_ADI as KADRO_BIRIMI, vph.ETKIN_UNVAN_ADI as ETKIN_UNVAN, vph.TERFITARIHI as TERFI_TARIHI, 
   vph.NAKILTARIHI as NAKIL_TARIHI, vph.BIRIM_BASLAMA_TARIHI, vph.FIILI_UNVAN_ADI, 
   vph.CALISTIGI_BIRIM_KODU, vph.CALISTIGI_BIRIM_ADI as CALISTIGI_BIRIM, ROLU as  ROL, 
   vph.IMZAYETKIDERECESI as IMZA_DERECE 
FROM IKY.V_DW_GRV_PERSONELHAREKETLERI vph LEFT OUTER JOIN 

(SELECT  SICIL,MAX(BASLANGIC_TARIHI) AS YENI_SUBE_BASLAMA_TARIHI FROM PERRISKSUBEBASLANGICYENIYAPI
WHERE  DURUM=0
GROUP BY SICIL
UNION
SELECT  SICIL,MIN(BASLANGIC_TARIHI)FROM PERRISKSUBEBASLANGICYENIYAPI
WHERE  FARKLI_BIRIM_SAYISI=1
GROUP BY SICIL) YSB
ON YSB.SICIL=vph.SICIL_NO
where YSB.YENI_SUBE_BASLAMA_TARIHI is not null) AB left outer join PERRISKSUISTIMALLISTEES ZM on AB.SICIL=ZM.SICIL and ZM.DURUM='KENDISI'
where ZT is not null

and TRUNC(ZT) BETWEEN HAREKET_BASLAMA_TARIHI AND HAREKET_BITIS_TARIHI  

--AND PERSON_TYPE_ID=''1120''
;


----------------------------------------SON PUANLAMA ADIMI-----------------------------------------------------------------------

create table PERRISKROLPUANSON as  
select P1.*,P2.BNK_BSLMA_SB_BSLAMA_IKI_YIL_MI  from (                                          
SELECT SUBSTR('000'||REPLACE(UPPER(SICIL),'VB',''),-5) AS SICIL, CASE WHEN (TRUNC(SYSDATE)-SUBE_BASLAMA_TARIHI)<(365) THEN 0      --AYNI ŞUBEDE 1 YILDAN AZ SÜREDİR ÇALIŞIYORSA 0 FAZLA İSE 1
 ELSE 1 END AS BIR_YILDAN_FAZLA_AYNI_SUBE FROM PERRISKSUBEBASLANGIC) P1 left outer join 
(SELECT SUBSTR('000'||REPLACE(UPPER(SICIL),'VB',''),-5) AS SICIL, 
CASE  WHEN SUBE_BASLAMA_TARIHI=BANKA_GIRIS_TARIHI AND TRUNC(SYSDATE)-BANKA_GIRIS_TARIHI>=(365*2) THEN 1   --BANKAYA BAŞLADIĞINDAN BERİ AYNI ŞUBEDE VE 2 YIL VE FAZLA SÜREDİR ÇALIŞIYORSA 1
ELSE 0 END AS BNK_BSLMA_SB_BSLAMA_IKI_YIL_MI FROM PERRISKSUBEBASLANGIC) P2 on P1.SICIL=P2.SICIL









create TABLE PERRISKSUBEBASLANGIC AS
--create TABLE  PERRISKSUBEBASLANGICYENIYAPI AS
select 
DURUM,PERSONID as PERSON_TYPE_ID,SICIL_NO as SICIL, concat(concat(ADI,''), SOYADI)  as ISIM,VAKIFBANK_GIRIS_TARIHI as BANKA_GIRIS_TARIHI,
HAREKETTURUACIKLAMASI as HAREKET_TURU,HAREKET_BASLAMA_TARIHI as  BASLANGIC_TARIHI,
HAREKET_BITIS_TARIHI as BITIS_TARIHI,  KADRO_BIRIMI_KODU ,  KADRO_BIRIMI_ADI as KADRO_BIRIMI,  ETKIN_UNVAN_ADI as ETKIN_UNVAN,  
TERFITARIHI as TERFI_TARIHI,  NAKILTARIHI as NAKIL_TARIHI,  BIRIM_BASLAMA_TARIHI as BIRIM_BAS_TARIHI,  FIILI_UNVAN_ADI ,
CALISTIGI_BIRIM_KODU ,  CALISTIGI_BIRIM_ADI as CALISTIGI_BIRIM,  ROLU as ROL ,  IMZAYETKIDERECESI as IMZA_DERECE,  RN  ,
FARKLI_BIRIM_SAYISI,  ONCEKI_HAREKET_BASLAMA_TARIHI as ONCEKI_BASLANGIC_TARIHI,  ONCEKI_HAREKET_BITIS_TARIHI  as ONCEKI_BITIS_TARIHI   ,
ONCEKI_CALSITIGI_BIRIM_KODU ,ZT,ZT1YIL,DURUM2
 
from
( select BB.*, PS.ZT,PS.ZT1YIL, case when BB.HAREKET_BASLAMA_TARIHI<PS.ZT and BB.HAREKET_BITIS_TARIHI>=PS.ZT then 'EVET' else 'HAYIR' end as DURUM2  from
(select AA.*,substr(concat('000000',AA.SICIL),-5) as SICIL2   from 
(SELECT CASE WHEN FBS.FARKLI_BIRIM_SAYISI >1 AND   X.CALISTIGI_BIRIM_KODU=NVL(Y.CALISTIGI_BIRIM_KODU,0) THEN 1 
WHEN FBS.FARKLI_BIRIM_SAYISI=1 THEN 1
ELSE 0  END AS DURUM,
X.*,
FBS.FARKLI_BIRIM_SAYISI, Y.HAREKET_BASLAMA_TARIHI AS ONCEKI_HAREKET_BASLAMA_TARIHI,Y.HAREKET_BITIS_TARIHI AS ONCEKI_HAREKET_BITIS_TARIHI,Y.CALISTIGI_BIRIM_KODU AS ONCEKI_CALSITIGI_BIRIM_KODU 
FROM 


(select VPH.*, 
VPH.AD as ADI,
VPH.SOYAD as SOYADI,
VPH.SICIL_NO as SICIL, ROW_NUMBER() OVER (PARTITION BY SICIL_NO ORDER BY HAREKET_BITIS_TARIHI DESC ) AS RN
from ( SELECT HRK.*, PER.MUSTERINO , PER.HESAPNO
FROM IKY.V_DW_GRV_PERSONELHAREKETLERI HRK
INNER JOIN IKY.DW_IKY_PERSONEL PER ON HRK.PERSONID=PER.PERSONELID
WHERE PER.BANKASICILNO IN (SELECT P.BANKASICILNO FROM vbteftis2.PERRISKSUISTIMALLISTEES L 
left outer join IKY.DW_IKY_PERSONEL P on L.MUSTERINO=P.MUSTERINO)
) VPH 
--where HAREKET_BITIS_TARIHI-HAREKET_BASLAMA_TARIHI>=7
--AND PERSON_TYPE_ID=''1120''
--AND VPH.SICIL=''23798''
)X
INNER JOIN 
(SELECT  SICIL_NO as SICIL, COUNT(DISTINCT CALISTIGI_BIRIM_KODU) AS FARKLI_BIRIM_SAYISI  FROM ( SELECT *
FROM IKY.V_DW_GRV_PERSONELHAREKETLERI HRK
INNER JOIN IKY.DW_IKY_PERSONEL PER ON HRK.PERSONID=PER.PERSONELID
WHERE PER.BANKASICILNO IN (SELECT P.BANKASICILNO FROM vbteftis2.PERRISKSUISTIMALLISTEES L 
left outer join IKY.DW_IKY_PERSONEL P on L.MUSTERINO=P.MUSTERINO)
) GROUP BY SICIL_NO) FBS 
ON FBS.SICIL=X.SICIL 

LEFT OUTER JOIN 

(
select SICIL_NO,HAREKET_BASLAMA_TARIHI,HAREKET_BITIS_TARIHI,CALISTIGI_BIRIM_KODU,CALISTIGI_BIRIM_ADI,ROW_NUMBER() OVER (PARTITION BY SICIL_NO ORDER BY HAREKET_BITIS_TARIHI DESC ) 
 AS RN from ( SELECT *
FROM IKY.V_DW_GRV_PERSONELHAREKETLERI HRK
INNER JOIN IKY.DW_IKY_PERSONEL PER ON HRK.PERSONID=PER.PERSONELID
WHERE PER.BANKASICILNO IN (SELECT P.BANKASICILNO FROM vbteftis2.PERRISKSUISTIMALLISTEES L 
left outer join IKY.DW_IKY_PERSONEL P on L.MUSTERINO=P.MUSTERINO)
)
--where HAREKET_BITIS_TARIHI-HAREKET_BASLAMA_TARIHI>=7
--AND SICIL='23798'
)Y
ON X.SICIL_NO=Y.SICIL_NO
AND X.RN=Y.RN-1
ORDER BY X.SICIL,X.RN) AA ) BB
left outer join (select * from ( select  substr(P.BANKASICILNO,-5) as SICIL,ZT,trunc(ZT-365) as ZT1YIL from PERRISKSUISTIMALLISTEES L left 
 outer join IKY.DW_IKY_PERSONEL P on L.MUSTERINO=P.MUSTERINO) where SICIL is not null
) PS on BB.SICIL2=PS.SICIL )
where 
--DURUM2='EVET' and   
ZT is not null



create table PERRISKSUBEBASLANGIC2 as
select AB.* from 
(SELECT YENI_SUBE_BASLAMA_TARIHI AS SUBE_BASLAMA_TARIHI, vph.PERSONID AS PERSON_TYPE_ID, vph.SICIL_NO as SICIL, 
   concat(concat(vph.AD,' '), vph.SOYAD) as ISIM, vph.VAKIFBANK_GIRIS_TARIHI as BANKA_GIRIS_TARIHI, vph.HAREKETTURU as HAREKET_TURU, 
   HAREKET_BASLAMA_TARIHI, HAREKET_BITIS_TARIHI, KADRO_BIRIMI_KODU, 
   vph.KADRO_BIRIMI_ADI as KADRO_BIRIMI, vph.ETKIN_UNVAN_ADI as ETKIN_UNVAN, vph.TERFITARIHI as TERFI_TARIHI, 
   vph.NAKILTARIHI as NAKIL_TARIHI, vph.BIRIM_BASLAMA_TARIHI, vph.FIILI_UNVAN_ADI, 
   vph.CALISTIGI_BIRIM_KODU, vph.CALISTIGI_BIRIM_ADI as CALISTIGI_BIRIM, ROLU as  ROL, 
   vph.IMZAYETKIDERECESI as IMZA_DERECE 
FROM IKY.V_DW_GRV_PERSONELHAREKETLERI vph LEFT OUTER JOIN 

(SELECT  SICIL,MAX(BASLANGIC_TARIHI) AS YENI_SUBE_BASLAMA_TARIHI FROM PERRISKSUBEBASLANGIC
WHERE  DURUM=0
GROUP BY SICIL
UNION
SELECT  SICIL,MIN(BASLANGIC_TARIHI)FROM PERRISKSUBEBASLANGIC
WHERE  FARKLI_BIRIM_SAYISI=1
GROUP BY SICIL) YSB
ON YSB.SICIL=vph.SICIL_NO
where YSB.YENI_SUBE_BASLAMA_TARIHI is not null) AB left outer join PERRISKSUISTIMALLISTEES ZM on AB.SICIL=ZM.SICIL
where ZT is not null
and TRUNC(ZT) BETWEEN HAREKET_BASLAMA_TARIHI AND HAREKET_BITIS_TARIHI  



----------------------------------------SON PUANLAMA ADIMI-----------------------------------------------------------------------

create table PERRISKZMMTROLPUAN as  
select distinct P1.*,P2.BNK_BSLMA_SB_BSLAMA_IKI_YIL_MI  from (                                          
SELECT SUBSTR('000'||REPLACE(UPPER(SICIL),'VB',''),-5) AS SICIL, CASE WHEN (TRUNC(SYSDATE)-SUBE_BASLAMA_TARIHI)<(365) THEN 0      --AYNI ŞUBEDE 1 YILDAN AZ SÜREDİR ÇALIŞIYORSA 0 FAZLA İSE 1
 ELSE 1 END AS BIR_YILDAN_FAZLA_AYNI_SUBE FROM PERRISKSUBEBASLANGIC2) P1 left outer join 
(SELECT SUBSTR('000'||REPLACE(UPPER(SICIL),'VB',''),-5) AS SICIL, 
CASE  WHEN SUBE_BASLAMA_TARIHI=BANKA_GIRIS_TARIHI AND TRUNC(SYSDATE)-BANKA_GIRIS_TARIHI>=(365*2) THEN 1   --BANKAYA BAŞLADIĞINDAN BERİ AYNI ŞUBEDE VE 2 YIL VE FAZLA SÜREDİR ÇALIŞIYORSA 1
ELSE 0 END AS BNK_BSLMA_SB_BSLAMA_IKI_YIL_MI FROM PERRISKSUBEBASLANGIC2) P2 on P1.SICIL=P2.SICIL


------------------------MESAIDISI

--*****************************************MESAI_DIŞI_İŞLEM******************************************************************
import os   
import cx_Oracle
import sys
from datetime import timedelta, date, datetime
    

##os.chdir(os.path.dirname(os.path.abspath(__file__)))


##cx_Oracle.init_oracle_client(lib_dir=r"D:\Users\VB31910\Desktop\python_app\instantclient-basic-nt-19.8.0.0.0dbru\instantclient_19_8")



ora_conn = cx_Oracle.connect('VBTEFTIS2', 'Qwerty!2', 'exa-scan:1954/exa_tfts', encoding='UTF-8', nencoding='UTF-8')
ora_conn2 = cx_Oracle.connect('VBTEFTIS2', 'Qwerty!2', 'exa-scan:1954/exa_tfts', encoding='UTF-8', nencoding='UTF-8')
    

    
ora_cursor = ora_conn.cursor()
ora_cursorWrite = ora_conn2.cursor()


def daterange(start_date, end_date):
    for n in range(int ((end_date - start_date).days)):
        yield start_date + timedelta(n)
##yıl ay gün, start date dahil end date dahil değil
start_date = date(2014, 1, 1)
end_date = date(2024, 1, 1)
app_start = datetime.now()
for single_date in daterange(start_date, end_date):
    fisdateT = single_date.strftime('%d.%m.%Y')
    fisdateT1 = (single_date + timedelta(1)).strftime('%d.%m.%Y')
    print('{0} Processing: {1}'.format(datetime.now().strftime('%d.%m.%Y %H:%M:%S'), fisdateT))
    query = """ Select F.SUBEKODU AS FIS_SUBE_KODU,H.MUSTERINO AS VB_MUSTERI_NO,F.FISNO AS FIS_NO,
                F.KULLANICIKODU AS SICIL_NO,F.CASUALKOD AS CASUAL_KOD,TO_CHAR(TRUNC(F.ISLEMZAMANI),'YYYYMMDD') AS ISLEM_TARIHI,
                TO_CHAR(F.MUHASEBETARIHI,'YYYYMMDD') AS FIS_TARIHI,CASE WHEN H.BORCTUTARI=0 THEN  H.ALACAKTUTARI WHEN  H.ALACAKTUTARI=0 THEN  H.BORCTUTARI END AS HAREKET_MIKTARI,
                F.FISACIKLAMASI AS FIS_ACIKLAMA1,TO_CHAR(F.ISLEMZAMANI,'HH24:MI') AS ISLEM_SAATI, 
                CASE WHEN H.BORCTUTARI>0 THEN 'B' WHEN  H.ALACAKTUTARI>0 THEN 'A' END AS BA_KODU,
                H.SKONT AS MUHASEBE_HESAP_NO,F.TERMINALKODU from (select * from VITDWH.DW_MUH_FIS where
                KULLANICIKODU IN (select SUBSTR(SICIL,-5) as VBSIZSICIL from PERRISKSUISTIMALLISTEES where DURUM='KENDISI')) F 
                INNER JOIN VITDWH.DW_MUH_FISHAREKET H ON F.ID=H.FISID
                WHERE H.SKONT in ('01000','01100','01001','01101') 
                and F.MUHASEBETARIHI >= TO_DATE('{0}', 'dd.mm.YYYY') and F.MUHASEBETARIHI  < TO_DATE('{1}', 'dd.mm.YYYY') 
                and  H.MUHASEBETARIHI >= TO_DATE('{0}', 'dd.mm.YYYY') and H.MUHASEBETARIHI  < TO_DATE('{1}', 'dd.mm.YYYY') 
                and  F.ISLEMZAMANI >= TO_DATE('{0}', 'dd.mm.YYYY') and F.ISLEMZAMANI  < TO_DATE('{1}', 'dd.mm.YYYY')  """.format(fisdateT, fisdateT1)
    ora_cursor.arraysize = 500
    try:    
        ora_cursor.execute(query)
    except cx_Oracle.DatabaseError as exc:
        error, = exc.args
        print("Oracle-Error-Code:", error.code)
        print("Oracle-Error-Message:", error.message)
        print(query)
        sys.exit(1)
    rows = []
    for row_data in ora_cursor:
        rows.append(row_data)
        if len(rows) >= 5000:
            ora_cursorWrite.executemany('''insert into VBTEFTIS2.PERRISKMESAIDISIHAM(FIS_SUBE_KODU, VB_MUSTERI_NO, FIS_NO, SICIL_NO, CASUAL_KOD, ISLEM_TARIHI, FIS_TARIHI, HAREKET_MIKTARI, FIS_ACIKLAMA1,ISLEM_SAATI, BA_KODU, MUHASEBE_HESAP_NO, TERMINALKODU) 
            values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)''', rows)
            rows = []
            ora_conn2.commit()
    if len(rows) > 0:
        ora_cursorWrite.executemany('''insert into VBTEFTIS2.PERRISKMESAIDISIHAM(FIS_SUBE_KODU, VB_MUSTERI_NO, FIS_NO, SICIL_NO, CASUAL_KOD, ISLEM_TARIHI, FIS_TARIHI, HAREKET_MIKTARI, FIS_ACIKLAMA1, ISLEM_SAATI, BA_KODU, MUHASEBE_HESAP_NO, TERMINALKODU) 
        values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)''', rows)
        rows = []
        ora_conn2.commit()
         
print("papiculo")
    
    

ora_conn2.close()
ora_conn.close()
app_end = datetime.now()
print("ended in: {}".format(app_end-app_start))

--YUKARIDAKI ADIM PYTHON'da gerçekleştirildi. PERRISKMESAIDISIHAM tablolarına ilgili tarihler insert edildi.



CREATE INDEX INDX_SUBEKODU_PERRISKMESAIDISIISLEM ON PERRISKMESAIDISIHAM
(FIS_SUBE_KODU)
;

CREATE TABLE PERRISKMESAIDISIISLEM AS
SELECT * FROM PERRISKMESAIDISIHAM
where FIS_SUBE_KODU LIKE 'S%'
and (regexp_like( REPLACE(UPPER(SICIL_NO),'VB',''), '^[[:digit:]]*$'))
and (      
              ISLEM_SAATI >= '17:30'  or
              ISLEM_SAATI < '08:50' or
              ISLEM_SAATI between '12:45' and '13:15'
    )
and (regexp_like( REPLACE(UPPER(SICIL_NO),'VB',''), '^[[:digit:]]*$'));


--BURADA SYSDATE-12 AY bolumunu zimmet tarihi-365 gün şeklinde aşağıdaki tablolarda oluşturup dataya son halini verdim.

INSERT INTO PERRISKMESAIDISIISLEMKUMULATIF 
SELECT * FROM PERRISKMESAIDISIISLEM;

create table PERRISKMESAIDISIISLEM1 as 
select WV.*, case when FARK>365 then 'HAYIR' else 'EVET' end as DURUM from (
select BV.*, (ZT-(to_date(TARIH2))) as FARK  from (
select VS.*,to_char (to_date(FIS_TARIHI,'YYYYMMDD'), 'DD.MM.YYYY') as TARIH2  from 
(select KM.*,SS.ZT from PERRISKMESAIDISIISLEMKUMULATIF KM
left outer join (select VBSIZSICIL,ZT from FO_ZMMT_RAWDATA_MAAS_S) SS on KM.SICIL_NO=SS.VBSIZSICIL
) VS ) BV )WV;

create table PERRISKMESAIDISIISLEM2 as 
select FIS_SUBE_KODU,VB_MUSTERI_NO,FIS_NO,SICIL_NO,CASUAL_KOD,ISLEM_TARIHI,FIS_TARIHI,HAREKET_MIKTARI,FIS_ACIKLAMA1,ISLEM_SAATI,BA_KODU,TERMINALKODU from PERRISKMESAIDISIISLEM1
where DURUM='EVET';


--KODUN GERI KALAN KISMINA DOKUNULMADI.
create table PERRISKMESAIDISIISLEMSON as 
SELECT 
  COUNT(distinct FIS_NO) as sayi , SUBSTR('0000'||REPLACE(UPPER(SICIL_NO),'VB',''),-5)  AS SICIL
 FROM PERRISKMESAIDISIISLEM2
 WHERE FIS_SUBE_KODU NOT IN ('0826','0418','0825') 
       AND FIS_SUBE_KODU NOT IN (select SUBSTR(CODE,-4) from vitdwh.dw_sec_branch where name like '%MERKEZİ VEZNE%' AND BRANCHTYPE=1)
       AND FIS_SUBE_KODU NOT IN  (SELECT DISTINCT SUBSTR(PARENTBRANCHCODE,-4) FROM VITDWH.DW_SEC_BRANCHRELATION 
                                                    WHERE RELATIONTYPEID=2--TEMERKÜZ
                                                    AND STATUS=1--AKTİF
                                                    AND BRANCHCODE LIKE 'S%' AND PARENTBRANCHCODE LIKE 'S%')
      AND FIS_SUBE_KODU||FIS_NO||SICIL_NO||ISLEM_TARIHI NOT IN                                               
     (
        SELECT FIS_SUBE_KODU||FIS_NO||SICIL_NO||ISLEM_TARIHI
         FROM MESAIDISIISLEM
         WHERE FIS_SUBE_KODU NOT IN ('0826','0418','0825') 
               AND FIS_SUBE_KODU NOT IN (select SUBSTR(CODE,-4) from vitdwh.dw_sec_branch where name like '%MERKEZİ VEZNE%' AND BRANCHTYPE=1)
               AND FIS_SUBE_KODU NOT IN  (SELECT DISTINCT SUBSTR(PARENTBRANCHCODE,-4) FROM VITDWH.DW_SEC_BRANCHRELATION 
                                                            WHERE RELATIONTYPEID=2--TEMERKÜZ
                                                            AND STATUS=1--AKTİF
                                                            AND BRANCHCODE LIKE 'S%' AND PARENTBRANCHCODE LIKE 'S%')
               AND FIS_ACIKLAMA1 LIKE '%tarihinde  para yolda fişi kesildi.%' AND ISLEM_SAATI > '00:00' AND ISLEM_SAATI < '05:00'
    )--  GECE 12 VE 5 ARASINDAKİ YOLDAKİ PARALARA SİCİLLE KESİLEN FİŞLER ASLINDA OTOM KESİLEN FİŞLER.BU YÜZDEN ELİYORUZ
                                                
       
 GROUP BY SUBSTR('0000'||REPLACE(UPPER(SICIL_NO),'VB',''),-5)
 ORDER BY COUNT(distinct FIS_NO) DESC
  

;

create table PERRISKMESAIDISIISLEMPUAN as 
select SUBSTR('0000'||REPLACE(UPPER(sicil),'VB',''),-5) AS sicil,sayi, 
case when sayi> 
(SELECT AVG(SAYI)+STDDEV(SAYI)   FROM VBTEFTIS2.PERRISKMESAIDISIISLEMSON
WHERE SICIL NOT LIKE '%OTOM%' AND SAYI in 
(select xxx.sayi from (SELECT SAYI,ROW_NUMBER() OVER(ORDER BY SAYI DESC) as rn, ROW_NUMBER() OVER(ORDER BY SAYI asc) as rn2 
FROM (select distinct sayi from VBTEFTIS2.PERRISKMESAIDISIISLEMSON ))xxx
where rn>3 and rn2>3))then 3 
when sayi<=  (SELECT AVG(SAYI)  FROM VBTEFTIS2.PERRISKMESAIDISIISLEMSON
WHERE SAYI in (select xxx.sayi from (SELECT  SAYI,ROW_NUMBER() OVER(ORDER BY SAYI DESC) as rn, ROW_NUMBER() OVER(ORDER BY SAYI asc) as rn2 
FROM (select distinct sayi from VBTEFTIS2.PERRISKMESAIDISIISLEMSON ))xxx where rn>3 and rn2>3)) then 1
else 2 end as mesai_disi_puan                                       
FROM VBTEFTIS2.PERRISKMESAIDISIISLEMSON


----------------------------------------SUBE ONU




CREATE table PERRISKAPPDETAIL as
SELECT DETAILCODE  FROM vitdwh.dw_app_transactiondetailcode where UPPER(DESCRIPTION) LIKE '%ATM%P%YATIR%' OR HOSTCODE IN ('A21','APY','D06');

CREATE table PERRISKSON6PARAYATIR as SELECT substr(hesapno,-11) as HESAP_NO, fisno as FIS_NO, kartno as KART_NO,    --PERRISKSON_6AYPARYAT2
   ' 'REF_NO, terminalid as ATM_NO, islemtarihi as HAREKET_TARIHI, 
   islemtarihi as ISLEM_TARIHI, islemkodu as CASUAL, 
   NVL(MUSTERIACIKLAMASI,MUSTERIACIKLAMASI||' || '||HAREKETACIKLAMASI) AS ACIKLAMA, 
   ISLEMTUTARI AS ISLEM_MIKTARI, YENIBAKIYE AS BAKIYE, 
   ' ' AS REFERANS1, 
   ' ' AS REFERANS2, 
   ID AS ISN, 
   KANALKODU AS ISLEM_KANAL, 
   ISLEMKODU AS ISLEM_KODU, 
   KULLANICIKODU AS ISLEM_SICIL, 
   SUBEKODU AS ISLEM_SUBE, 
   TRANSACTIONID AS TRANSACTION_ID
FROM VITDWH.DW_MVD_HESAPHAREKET where 1=2;


CREATE table PERRISKSON6PARAYATIRMVD as
SELECT substr(MVD.hesapno,-11) as HESAP_NO, MVD.fisno as FIS_NO, MVD.kartno as KART_NO, 
   ' 'REF_NO, MVD.terminalid as ATM_NO, MVD.islemtarihi as HAREKET_TARIHI, 
   MVD.islemtarihi as ISLEM_TARIHI, MVD.islemkodu as CASUAL, 
   NVL(MVD.MUSTERIACIKLAMASI,MVD.MUSTERIACIKLAMASI||' || '||MVD.HAREKETACIKLAMASI) AS ACIKLAMA, 
   MVD.ISLEMTUTARI AS ISLEM_MIKTARI, MVD.YENIBAKIYE AS BAKIYE, 
   ' ' AS REFERANS1, 
   ' ' AS REFERANS2, 
   MVD.ID AS ISN, 
   MVD.KANALKODU AS ISLEM_KANAL, 
   MVD.ISLEMKODU AS ISLEM_KODU, 
   MVD.KULLANICIKODU AS ISLEM_SICIL, 
   MVD.SUBEKODU AS ISLEM_SUBE, 
   MVD.TRANSACTIONID AS TRANSACTION_ID
FROM VITDWH.DW_MVD_HESAPHAREKET MVD
WHERE 
exists (select MUSTERINO from PERRISKSUISTIMALLISTEES A where A.MUSTERINO=MVD.MUSTERINO AND A.DURUM='KENDISI') 
AND ISLEMTARIHI>='01.01.2012'


Insert into  PERRISKSON6PARAYATIR
SELECT * from PERRISKSON6PARAYATIRMVD
WHERE CASUAL IN (SELECT DETAILCODE FROM PERRISKAPPDETAIL)
;




CREATE table PERRISKSON6AYPARYATZT as
select * from (
select ZT.MUSTERINO,ICM.*, zt.ZT, case when trunc(ZT.ZT)>trunc(ISLEM_TARIHI) and trunc(ZT.ZT)-180<trunc(ISLEM_TARIHI) then 'EVET' else 'HAYIR' end as DURUM  from 
PERRISKSON6PARAYATIR ICM left outer join 
VITDWH.DW_MVD_HESAPBILGI MVD on MVD.hesapno='001580'||ICM.hesap_no and MVD.Currentflag=1
left outer join 
PERRISKSUISTIMALLISTEES ZT on MVD.MUSTERINO=ZT.MUSTERINO and ZT.DURUM='KENDISI') where DURUM='EVET'



CREATE TABLE PERRISKSUBEONUATMKULL AS --PERSONEL_SUBEONU_ATM_KULLANIM
SELECT HESAP_NO,ATM_PY.ATM_NO AS E,
   HAREKET_TARIHI, 
   ISLEM_TARIHI, CASUAL,  ACIKLAMA, 
   ISLEM_MIKTARI, BAKIYE, ISLEM_KANAL, 
   ISLEM_SICIL, ISLEM_SUBE
   ,HPI.SICIL
   --,PPERSONEL.FIILIBIRIMKODU,PPERSONEL.AD || ' ' || PPERSONEL.SOYAD  AS PER_adsoyad
FROM PERRISKSON6AYPARYATZT ATM_PY --- ATM KODU 10051
INNER JOIN 
(
SELECT 'S'||SUBSTR('0000'||SUBEKODU,-5) AS SUBEKODU, SUBEADI, SUBSTR('000000'||ATMKODU,-6) AS ATMKODU,
BAKANSUBE,YERI,YERKODU
  FROM VITDWH.DW_ATM_ATMENVANTER
    WHERE 
    UPPER(YERKODU) LIKE 'ŞUBE ÖNÜ%'
    AND 
    END_DATE =to_date('31.12.9999','dd.mm.yyyy') AND CURRENTFLAG = 1 AND UPPER(VERITURU) LIKE 'SAHADA'
    ORDER BY ATMKODU
) ATM ON ISLEM_SUBE = ATM.SUBEKODU AND ATM.ATMKODU=ATM_NO  -- ATM ENVANTER 101A, 1011, 10101..
INNER JOIN HESAPPERSONELILISKISI HPI ON SUBSTR(HPI.HESAPNO,-11) = ATM_PY.HESAP_NO 
WHERE ATM.SUBEKODU IS NOT NULL
/*SUBSTR(TO_CHAR(TRUNC(hareket_tarihi),'YYYYMMDD'),-4) NOT IN ( '0101','0423','0501','0519','0715','0830','1029')
AND TO_CHAR(TRUNC(hareket_tarihi),'YYYYMMDD') NOT IN ( '20190603','20190604','20190605','20190606','20190810','20190811','20190812','20190813','20190814')
AND ATM.SUBEKODU IS NOT NULL   */                                             


CREATE TABLE PERRISKSUBEONUATMKULLPUAN AS 
SELECT SICIL,COUNT(*) as SAYI
FROM PERSONEL_SUBEONU_ATM_KULLANIM 
group by SICIL
order by SICIL desc

------------------------- AILE   

CREATE OR REPLACE PROCEDURE VBTEFTIS2.MST_MUSTERI_AILE_KUTUGU AUTHID CURRENT_USER AS 

BEGIN
EXECUTE IMMEDIATE 'set role ALL';


DECLARE
   A1 INT;
   B1 INT;    
   C1 INT;
   D1 INT;
   E1 INT;
   F1 INT;
   G1 INT;
   H1 INT;
   I1 INT;
   J1 INT;    
   K1 INT;
   L1 INT;
   M1 INT;
   N1 INT;
   O1 INT;
   P1 INT;
   R1 INT;
   S1 INT;    
   T1 INT;
   U1 INT;
   V1 INT;
   Y1 INT;
   Z1 INT;
   W1 INT;
   AA INT; 
   AB INT;
   AC INT;
   AD INT;
   AE INT;
   AF INT; 
   AG INT;
   AH INT;


begin


   SELECT COUNT(*) INTO A1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('MUSTERINO_MUST_AILE');
   SELECT COUNT(*) INTO B1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('MUSTERI_TCKN_MUST_AILE');
   SELECT COUNT(*) INTO C1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('NVI_MUST_AILE');
   SELECT COUNT(*) INTO D1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('NVI_ANNE_MUST_AILE');
   SELECT COUNT(*) INTO E1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('NVI_BABA_MUST_AILE');
   SELECT COUNT(*) INTO F1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('NVI_ES_MUST_AILE');  
   SELECT COUNT(*) INTO G1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('NVI_COCUK_MUST_AILE');
   SELECT COUNT(*) INTO H1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('ILISKI_ABEC_MUST_AILE'); 
   SELECT COUNT(*) INTO I1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('ILISKI_KARDES_MUST_AILE');
   SELECT COUNT(*) INTO J1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('ILISKI_KAT_1_MUST_AILE');
   SELECT COUNT(*) INTO K1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('NVI_YEGEN_MUST_AILE');
   SELECT COUNT(*) INTO L1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('NVI_KAILE_MUST_AILE');
   SELECT COUNT(*) INTO M1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('ILISKI_KAT_2_V1_MUST_AILE');
   SELECT COUNT(*) INTO N1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('NVI_ES_KARDES_MUST_AILE');  
   SELECT COUNT(*) INTO O1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('NVI_KARDES_ES_MUST_AILE');
   SELECT COUNT(*) INTO P1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('ILISKI_KAT_3_V1_MUST_AILE');
   SELECT COUNT(*) INTO R1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('ILISKI_KAT_3_V2_MUST_AILE');
   SELECT COUNT(*) INTO S1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('ILISKI_KAT_3_V3_MUST_AILE');
   SELECT COUNT(*) INTO T1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('ILISKI_DEDEANNE_MUST_AILE');
   SELECT COUNT(*) INTO U1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('ILISKI_DEDEBABA_MUST_AILE');
   SELECT COUNT(*) INTO V1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('ILISKI_ANNEANNE_MUST_AILE');
   SELECT COUNT(*) INTO Y1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('ILISKI_BABAANNE_MUST_AILE');
   SELECT COUNT(*) INTO Z1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('ILISKI_DTAH_MUST_AILE');
   SELECT COUNT(*) INTO W1 FROM USER_TABLES WHERE TABLE_NAME=UPPER('ILISKI_YENGEENISTE_MUST_AILE');
   SELECT COUNT(*) INTO AA FROM USER_TABLES WHERE TABLE_NAME=UPPER('ILISKI_KUZEN_MUST_AILE');
   SELECT COUNT(*) INTO AB FROM USER_TABLES WHERE TABLE_NAME=UPPER('MST_MUSTERIAILEKUTUGU_G3');
   SELECT COUNT(*) INTO AC FROM USER_TABLES WHERE TABLE_NAME=UPPER('MST_MUSTERIAILEKUTUGU_G2');
   SELECT COUNT(*) INTO AD FROM USER_TABLES WHERE TABLE_NAME=UPPER('MST_MUSTERIAILEKUTUGU_G1'); 
   SELECT COUNT(*) INTO AE FROM USER_TABLES WHERE TABLE_NAME=UPPER('MST_MUSTERIAILEKUTUGU_G');
   SELECT COUNT(*) INTO AF FROM USER_TABLES WHERE TABLE_NAME=UPPER('MST_ANAHTAR');
   SELECT COUNT(*) INTO AG FROM USER_TABLES WHERE TABLE_NAME=UPPER('PERSONEL_AILE_KUTUGU_KAT');
   SELECT COUNT(*) INTO AH FROM USER_TABLES WHERE TABLE_NAME=UPPER('PER_ANAHTAR');
   

   IF A1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE MUSTERINO_MUST_AILE';
   END IF;
   IF B1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE MUSTERI_TCKN_MUST_AILE';  
   END IF;
   IF C1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE NVI_MUST_AILE';
   END IF;
   IF D1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE NVI_ANNE_MUST_AILE';
   END IF;
   IF E1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE NVI_BABA_MUST_AILE';
   END IF;
   IF F1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE NVI_ES_MUST_AILE';
   END IF;
   IF G1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE NVI_COCUK_MUST_AILE ';
   END IF;
   IF H1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE ILISKI_ABEC_MUST_AILE';
   END IF;  
   IF I1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE ILISKI_KARDES_MUST_AILE';
   END IF;
   IF J1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE ILISKI_KAT_1_MUST_AILE';
   END IF;
   IF K1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE NVI_YEGEN_MUST_AILE';
   END IF;
   IF L1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE NVI_KAILE_MUST_AILE';
   END IF;
   IF M1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE ILISKI_KAT_2_V1_MUST_AILE';
   END IF;
   IF N1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE NVI_ES_KARDES_MUST_AILE';
   END IF;
   IF O1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE NVI_KARDES_ES_MUST_AILE';
   END IF;
   IF P1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE ILISKI_KAT_3_V1_MUST_AILE';
   END IF;
   IF R1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE ILISKI_KAT_3_V2_MUST_AILE';
   END IF;
   IF S1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE ILISKI_KAT_3_V3_MUST_AILE';
   END IF;
   IF T1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE ILISKI_DEDEANNE_MUST_AILE';
   END IF;
   IF U1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE ILISKI_DEDEBABA_MUST_AILE';
   END IF;
   IF V1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE ILISKI_ANNEANNE_MUST_AILE';
   END IF;
   IF Y1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE ILISKI_BABAANNE_MUST_AILE';
   END IF;
   IF Z1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE ILISKI_DTAH_MUST_AILE';
   END IF;
   IF W1=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE ILISKI_YENGEENISTE_MUST_AILE';
   END IF;
   IF AA=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE ILISKI_KUZEN_MUST_AILE';
   END IF;
   IF AB=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE MST_MUSTERIAILEKUTUGU_G3';
   END IF;
   IF AC=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE MST_MUSTERIAILEKUTUGU_G2';
   END IF;
   IF AD=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE MST_MUSTERIAILEKUTUGU_G1';
   END IF;
   IF AE=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE MST_MUSTERIAILEKUTUGU_G ';
   END IF;
   IF AF=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE MST_ANAHTAR ';
   END IF;
   IF AG=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE PERSONEL_AILE_KUTUGU_KAT ';
   END IF;   
   IF AG=1 THEN
      EXECUTE IMMEDIATE 'DROP TABLE PER_ANAHTAR';
   END IF; 
end;   

execute immediate 'create table MUSTERINO_MUST_AILE as select distinct MUSTERINO from VITDWH.DW_MST_MUSTERI';  --30 sn

execute immediate ' create table MUSTERI_TCKN_MUST_AILE as select distinct TCKIMLIKNO from    
VITDWH.DW_MST_MUSTERI where MUSTERINO IN (select MUSTERINO from MUSTERINO_MUST_AILE )';                        --30 sn


execute immediate 'create table NVI_MUST_AILE as select * from VITDWH.DW_MST_NVIKISI';         --10.50 dk

execute immediate ' create index ind_NVI_MUST_AILE on NVI_MUST_AILE  (NVIKISITCKIMLIKNO)';     --1.30 dk


execute immediate ' create table NVI_ANNE_MUST_AILE as SELECT NVIKISITCKIMLIKNO, NVIKISIAD,NVIKISIANNETCKIMLIKNO,
NVIKISIANNEAD, ''ANNE'' as ILISKITURU, ''1'' as KATEGORI from  NVI_MUST_AILE 
where NVIKISIANNETCKIMLIKNO is not null';                                                                --2dk                                        


execute immediate ' create index ind_NVI_ANNE_MUST_AILE on NVI_ANNE_MUST_AILE (NVIKISITCKIMLIKNO)';

execute immediate ' create table NVI_BABA_MUST_AILE as SELECT NVIKISITCKIMLIKNO, NVIKISIAD,NVIKISIBABATCKIMLIKNO,
NVIKISIBABAAD,''BABA'' as ILISKITURU, ''1'' as KATEGORI from  NVI_MUST_AILE 
where NVIKISIBABATCKIMLIKNO is not null';                                                                 --2 dk


execute immediate ' create index ind_NVI_BABA_MUST_AILE on NVI_BABA_MUST_AILE (NVIKISITCKIMLIKNO)';

execute immediate ' create table NVI_ES_MUST_AILE as SELECT NVIKISITCKIMLIKNO, NVIKISIAD,NVIKISIESTCKIMLIKNO,
''ES'' as ILISKITURU, ''1'' as KATEGORI  from  NVI_MUST_AILE 
where NVIKISIESTCKIMLIKNO is not null';                                                                   --2 dk


execute immediate ' create index ind_NVI_ES_MUST_AILE on NVI_ES_MUST_AILE (NVIKISITCKIMLIKNO)';


execute immediate ' create table NVI_COCUK_MUST_AILE as
select /*+ PARALLEL(8)  use_hash(COCUK1)*/  BAE.TCKIMLIKNO,COCUK1.NVIKISITCKIMLIKNO as ILISKILITCKN,COCUK1.NVIKISIAD as ILISKILIKISIAD, ''COCUK'' as ILISKITURU, ''1'' as KATEGORI  from
(select NVIKISITCKIMLIKNO, NVIKISIAD,NVIKISIBABATCKIMLIKNO from NVI_BABA_MUST_AILE where NVIKISIBABATCKIMLIKNO IN (select * from MUSTERI_TCKN_MUST_AILE) 
) COCUK1
inner join (select * from MUSTERI_TCKN_MUST_AILE) BAE on BAE.TCKIMLIKNO=COCUK1.NVIKISIBABATCKIMLIKNO 
union
select BAE.TCKIMLIKNO,COCUK2.NVIKISITCKIMLIKNO as ILISKILITCKN,COCUK2.NVIKISIAD as ILISKILIKISIAD,''COCUK'' as ILISKITURU, ''1'' as KATEGORI  from
(select NVIKISITCKIMLIKNO, NVIKISIAD,NVIKISIANNETCKIMLIKNO from NVI_ANNE_MUST_AILE where NVIKISIANNETCKIMLIKNO IN (select * from MUSTERI_TCKN_MUST_AILE) 
) COCUK2
inner join (select * from MUSTERI_TCKN_MUST_AILE) BAE on BAE.TCKIMLIKNO=COCUK2.NVIKISIANNETCKIMLIKNO 
';                                                                                                          --2 dk

                                                                                     
execute immediate ' create index ind_NVI_COCUK_MUST_AILE on NVI_COCUK_MUST_AILE (TCKIMLIKNO)';

--BABA,ANNE,COCUK,ES tablosu oluşturulur.


execute immediate ' create table ILISKI_ABEC_MUST_AILE as
SELECT NVIKISITCKIMLIKNO AS KISITC,NVIKISIBABATCKIMLIKNO AS ILISKILITCKN,
NVIKISIBABAAD AS ILISKILIKISIAD,ILISKITURU,KATEGORI,concat(NVIKISITCKIMLIKNO,NVIKISIBABATCKIMLIKNO) as ANAHTAR
FROM NVI_BABA_MUST_AILE WHERE NVIKISITCKIMLIKNO IN (select * from MUSTERI_TCKN_MUST_AILE)

UNION
           
SELECT NVIKISITCKIMLIKNO AS KISITC,NVIKISIANNETCKIMLIKNO AS ILISKILITCKN, NVIKISIANNEAD AS ILISKILIKISIAD,ILISKITURU,KATEGORI
,concat(NVIKISITCKIMLIKNO,NVIKISIANNETCKIMLIKNO) as ANAHTAR FROM NVI_ANNE_MUST_AILE
WHERE NVIKISITCKIMLIKNO IN (select * from MUSTERI_TCKN_MUST_AILE)

UNION

select ES.NVIKISITCKIMLIKNO AS KISITC,ESAD.TCKIMLIKNO as ILISKILITCKN,ESAD.AD as ILISKILIKISIAD,ES.ILISKITURU,ES.KATEGORI
,concat( ES.NVIKISITCKIMLIKNO,ESAD.TCKIMLIKNO) as ANAHTAR from (
SELECT NVIKISIESTCKIMLIKNO, NVIKISITCKIMLIKNO,ILISKITURU,KATEGORI FROM NVI_ES_MUST_AILE
WHERE NVIKISITCKIMLIKNO IN (select * from MUSTERI_TCKN_MUST_AILE where TCKIMLIKNO is not null)) ES
inner join            
(SELECT NVIKISITCKIMLIKNO as TCKIMLIKNO,NVIKISIAD as AD from VITDWH.DW_MST_NVIKISI) ESAD on ES.NVIKISIESTCKIMLIKNO=ESAD.TCKIMLIKNO

UNION 

select TCKIMLIKNO as KISITC,ILISKILITCKN,ILISKILIKISIAD,ILISKITURU,KATEGORI,concat( TCKIMLIKNO,ILISKILITCKN) as ANAHTAR from NVI_COCUK_MUST_AILE
';

execute immediate ' create index ind_ILISKI_ABEC_MUST_AILE on ILISKI_ABEC_MUST_AILE (KISITC)';                                                                              
                                                                                
                                                                                
--KARDES TABLOSU OLUŞTURULUR

execute immediate '  
create table ILISKI_KARDES_MUST_AILE as

select * from (
select distinct * from 

(select 
/*+ PARALLEL(KARDES1, 2) PARALLEL(KAE, 4) */
KAE.KISITC,KARDES1.NVIKISITCKIMLIKNO as ILISKILITCKN,KARDES1.NVIKISIAD as ILISKILIKISIAD,''KARDES'' as ILISKITURU, ''1'' as KATEGORI,
concat(KAE.KISITC,KARDES1.NVIKISITCKIMLIKNO) as ANAHTAR from 
(SELECT NVIKISITCKIMLIKNO, NVIKISIAD,NVIKISIBABATCKIMLIKNO from  NVI_MUST_AILE where NVIKISIBABATCKIMLIKNO IN 
(select ILISKILITCKN from ILISKI_ABEC_MUST_AILE where ILISKITURU=''BABA'' )) KARDES1
inner join (select KISITC,ILISKILITCKN from ILISKI_ABEC_MUST_AILE where ILISKITURU=''BABA'') KAE on KAE.ILISKILITCKN=KARDES1.NVIKISIBABATCKIMLIKNO ) where KISITC<>ILISKILITCKN


union 


select distinct * from 
(select 
/*+ PARALLEL(KARDES2, 2) PARALLEL(KAE, 4) */
KAE.KISITC,KARDES2.NVIKISITCKIMLIKNO as ILISKILITCKN,KARDES2.NVIKISIAD as ILISKILIKISIAD,''KARDES'' as ILISKITURU, ''1'' as KATEGORI,
concat(KAE.KISITC,KARDES2.NVIKISITCKIMLIKNO) as ANAHTAR from
(SELECT NVIKISITCKIMLIKNO, NVIKISIAD,NVIKISIANNETCKIMLIKNO from NVI_MUST_AILE where NVIKISIANNETCKIMLIKNO IN 
(select ILISKILITCKN from ILISKI_ABEC_MUST_AILE WHERE ILISKITURU=''ANNE'' )) KARDES2
inner join (select KISITC,ILISKILITCKN from ILISKI_ABEC_MUST_AILE WHERE ILISKITURU=''ANNE'') KAE on KAE.ILISKILITCKN=KARDES2.NVIKISIANNETCKIMLIKNO ) where KISITC<>ILISKILITCKN
)
where ANAHTAR NOT IN (select ANAHTAR from ILISKI_ABEC_MUST_AILE)


';
                                                                                                       -- 8 dk

execute immediate ' create index ind_KARDES_MUST_AILE on ILISKI_KARDES_MUST_AILE (KISITC)';

-- BABA,ANNE,ES,COCUK tablosuna KARDEŞ TABLOSU EKLENİR


execute immediate ' create table ILISKI_KAT_1_MUST_AILE as
select * from ILISKI_ABEC_MUST_AILE
union
select * from ILISKI_KARDES_MUST_AILE
';                                                                                                  -- 7 dk

execute immediate ' create index ind_KAT_1_MUST_AILE on ILISKI_KAT_1_MUST_AILE (KISITC)';



--execute immediate ' create index ind_prsnktk_v_7 on ILISKI_KAT_1_MUST_AILE (KISITC)';
--YEGEN


execute immediate ' create table NVI_YEGEN_MUST_AILE as
select * from (


select distinct * from (


select  /*+ PARALLEL(8)  use_hash(YEGEN1)*/ KARDES.ILISKILITCKN AS KISITC,YEGEN1.NVIKISITCKIMLIKNO as ILISKILITCKN,YEGEN1.NVIKISIAD,''YEGEN'' as ILISKITURU, ''2'' as KATEGORI,
concat(KAE.KISITC,YEGEN1.NVIKISITCKIMLIKNO) as ANAHTAR   from
(
SELECT NVIKISITCKIMLIKNO ,NVIKISIAD,NVIKISIBABATCKIMLIKNO,NVIKISIBABAAD 
FROM  NVI_MUST_AILE where NVIKISIBABATCKIMLIKNO IN  (select ILISKILITCKN from ILISKI_KARDES_MUST_AILE )
) YEGEN1
inner join (select KISITC,ILISKILITCKN from ILISKI_ABEC_MUST_AILE WHERE ILISKITURU=''BABA'') KAE on KAE.ILISKILITCKN=YEGEN1.NVIKISIBABATCKIMLIKNO
INNER JOIN ILISKI_KARDES_MUST_AILE KARDES ON KARDES.KISITC=YEGEN1.NVIKISIBABATCKIMLIKNO

UNION 

select /*+ PARALLEL(8)  use_hash(YEGEN2)*/ KARDES.ILISKILITCKN AS KISITC,YEGEN2.NVIKISITCKIMLIKNO as ILISKILITCKN,YEGEN2.NVIKISIAD,''YEGEN'' as ILISKITURU,''2'' as KATEGORI,
concat(KAE.KISITC,YEGEN2.NVIKISITCKIMLIKNO) as ANAHTAR  from
(
SELECT NVIKISITCKIMLIKNO ,NVIKISIAD,NVIKISIANNETCKIMLIKNO,NVIKISIANNEAD 
FROM  NVI_MUST_AILE where NVIKISIANNETCKIMLIKNO IN  (select ILISKILITCKN from ILISKI_KARDES_MUST_AILE )
) YEGEN2
inner join (select KISITC,ILISKILITCKN from ILISKI_ABEC_MUST_AILE WHERE ILISKITURU=''ANNE'') KAE on KAE.ILISKILITCKN=YEGEN2.NVIKISIANNETCKIMLIKNO 
INNER JOIN ILISKI_KARDES_MUST_AILE KARDES ON KARDES.KISITC=YEGEN2.NVIKISIANNETCKIMLIKNO
 
) where KISITC<>ILISKILITCKN)
where ANAHTAR NOT IN (select ANAHTAR from ILISKI_KAT_1_MUST_AILE)



';                                                                                         --5 dk
 

         
execute immediate ' create index ind_YEGEN_MUST_AILE on NVI_YEGEN_MUST_AILE(KISITC)';
--ES ANNE BABA


execute immediate ' 

create table NVI_KAILE_MUST_AILE as


select * from (
select distinct * from (
--ES BABA
select 
/*+ PARALLEL(NVI_MUST_AILE, 2) PARALLEL(KAE, 4) */
KAE.KISITC,ES1.NVIKISIBABATCKIMLIKNO as ILISKILITCKN,ES1.NVIKISIBABAAD,''ESBABA/DEDE'' as ILISKITURU,''2'' as KATEGORI,
concat(KAE.KISITC,ES1.NVIKISIBABATCKIMLIKNO ) as ANAHTAR    from
(select NVIKISITCKIMLIKNO,NVIKISIBABATCKIMLIKNO,NVIKISIBABAAD from  NVI_MUST_AILE where NVIKISITCKIMLIKNO IN (select NVIKISIESTCKIMLIKNO from NVI_ES_MUST_AILE )) ES1 --eşin babası
inner join (select KISITC,ILISKILITCKN from ILISKI_ABEC_MUST_AILE WHERE ILISKITURU=''ES'') KAE on KAE.ILISKILITCKN=ES1.NVIKISITCKIMLIKNO

UNION ALL
--ES BABANIN BABASI
select 
/*+ PARALLEL(NVI_MUST_AILE, 2) PARALLEL(KAE2, 4) */
KAE.KISITC,KAE2.NVIKISIBABATCKIMLIKNO as ILISKILITCKN,KAE2.NVIKISIBABAAD,''ESBABA/DEDE'' as ILISKITURU,''2'' as KATEGORI,
concat(KAE.KISITC,ES1.NVIKISIBABATCKIMLIKNO ) as ANAHTAR    from
(select NVIKISITCKIMLIKNO,NVIKISIBABATCKIMLIKNO,NVIKISIBABAAD from  NVI_MUST_AILE where NVIKISITCKIMLIKNO IN (select NVIKISIESTCKIMLIKNO from NVI_ES_MUST_AILE )) ES1 --eşin babası
inner join (select KISITC,ILISKILITCKN from ILISKI_ABEC_MUST_AILE WHERE ILISKITURU=''ES'') KAE on KAE.ILISKILITCKN=ES1.NVIKISITCKIMLIKNO
inner join (select NVIKISITCKIMLIKNO,NVIKISIBABATCKIMLIKNO,NVIKISIBABAAD from NVI_BABA_MUST_AILE) KAE2 on KAE2.NVIKISITCKIMLIKNO=ES1.NVIKISIBABATCKIMLIKNO


UNION ALL

--ES BABANIN ANNESİ
select 
/*+ PARALLEL(NVI_MUST_AILE, 2) PARALLEL(KAE2, 4) */
KAE.KISITC,KAE2.NVIKISIANNETCKIMLIKNO as ILISKILITCKN,KAE2.NVIKISIANNEAD,''ESANNE/ANNANNE/BABANNE'' as ILISKITURU,''2'' as KATEGORI,
concat(KAE.KISITC,ES1.NVIKISIBABATCKIMLIKNO ) as ANAHTAR    from
(select NVIKISITCKIMLIKNO,NVIKISIBABATCKIMLIKNO,NVIKISIBABAAD from  NVI_MUST_AILE where NVIKISITCKIMLIKNO IN (select NVIKISIESTCKIMLIKNO from NVI_ES_MUST_AILE )) ES1 --eşin babası
inner join (select KISITC,ILISKILITCKN from ILISKI_ABEC_MUST_AILE WHERE ILISKITURU=''ES'') KAE on KAE.ILISKILITCKN=ES1.NVIKISITCKIMLIKNO
inner join (select NVIKISITCKIMLIKNO,NVIKISIANNETCKIMLIKNO,NVIKISIANNEAD from NVI_ANNE_MUST_AILE) KAE2 on KAE2.NVIKISITCKIMLIKNO=ES1.NVIKISIBABATCKIMLIKNO

UNION ALL

--ES ANNE
select --/*+ PARALLEL(8)  use_hash(KAE)*/ 
/*+ PARALLEL(NVI_MUST_AILE, 2) PARALLEL(KAE, 4) */
KAE.KISITC,ES2.NVIKISIANNETCKIMLIKNO as ILISKILITCKN,ES2.NVIKISIANNEAD, ''ESANNE/ANNANNE/BABANNE'' as ILISKITURU,''2'' as KATEGORI,
concat(KAE.KISITC,ES2.NVIKISIANNETCKIMLIKNO) as ANAHTAR    from
(select NVIKISITCKIMLIKNO,NVIKISIANNETCKIMLIKNO,NVIKISIANNEAD from  NVI_MUST_AILE where NVIKISITCKIMLIKNO IN (select NVIKISIESTCKIMLIKNO from NVI_ES_MUST_AILE )) ES2
inner join (select KISITC,ILISKILITCKN from ILISKI_ABEC_MUST_AILE WHERE ILISKITURU=''ES'') KAE on KAE.ILISKILITCKN=ES2.NVIKISITCKIMLIKNO

UNION ALL

--ES ANNENİN ANNESİ
select 
/*+ PARALLEL(NVI_MUST_AILE, 2) PARALLEL(KAE2, 4) */
KAE.KISITC,KAE2.NVIKISIANNETCKIMLIKNO as ILISKILITCKN,KAE2.NVIKISIANNEAD,''ESANNE/ANNANNE/BABANNE'' as ILISKITURU,''2'' as KATEGORI,
concat(KAE.KISITC,ES1.NVIKISIANNETCKIMLIKNO ) as ANAHTAR    from
(select NVIKISITCKIMLIKNO,NVIKISIANNETCKIMLIKNO,NVIKISIANNEAD from  NVI_MUST_AILE where NVIKISITCKIMLIKNO IN (select NVIKISIESTCKIMLIKNO from NVI_ES_MUST_AILE )) ES1 --eşin babası
inner join (select KISITC,ILISKILITCKN from ILISKI_ABEC_MUST_AILE WHERE ILISKITURU=''ES'') KAE on KAE.ILISKILITCKN=ES1.NVIKISITCKIMLIKNO
inner join (select NVIKISITCKIMLIKNO,NVIKISIANNETCKIMLIKNO,NVIKISIANNEAD from NVI_anne_MUST_AILE) KAE2 on KAE2.NVIKISITCKIMLIKNO=ES1.NVIKISIANNETCKIMLIKNO

UNION ALL

--ES ANNENİN BABASI
select 
/*+ PARALLEL(NVI_MUST_AILE, 2) PARALLEL(KAE3, 4) */
KAE.KISITC,KAE3.NVIKISIBABATCKIMLIKNO as ILISKILITCKN,KAE3.NVIKISIBABAAD,''ESBABA/DEDE'' as ILISKITURU,''2'' as KATEGORI,
concat(KAE.KISITC,ES1.NVIKISIANNETCKIMLIKNO ) as ANAHTAR    from
(select NVIKISITCKIMLIKNO,NVIKISIANNETCKIMLIKNO,NVIKISIANNEAD from  NVI_MUST_AILE where NVIKISITCKIMLIKNO IN (select NVIKISIESTCKIMLIKNO from NVI_ES_MUST_AILE )) ES1 --eşin babası
inner join (select KISITC,ILISKILITCKN from ILISKI_ABEC_MUST_AILE WHERE ILISKITURU=''ES'') KAE on KAE.ILISKILITCKN=ES1.NVIKISITCKIMLIKNO
inner join (select NVIKISITCKIMLIKNO,NVIKISIBABATCKIMLIKNO,NVIKISIBABAAD from NVI_BABA_MUST_AILE) KAE3 on KAE3.NVIKISITCKIMLIKNO=ES1.NVIKISIANNETCKIMLIKNO

UNION ALL
-- BABANIN BABASI
select 
/*+ PARALLEL(NVI_MUST_AILE, 2) PARALLEL(KAE2, 4) */
KISI.NVIKISITCKIMLIKNO AS KISITC,KAE2.NVIKISIBABATCKIMLIKNO as ILISKILITCKN,KAE2.NVIKISIBABAAD,''ESBABA/DEDE'' as ILISKITURU,''2'' as KATEGORI,
concat(KISI.NVIKISITCKIMLIKNO,KAE2.NVIKISIBABATCKIMLIKNO ) as ANAHTAR    from
(select NVIKISITCKIMLIKNO,NVIKISIBABATCKIMLIKNO,NVIKISIBABAAD from  NVI_MUST_AILE where NVIKISITCKIMLIKNO IN (select NVIKISITCKIMLIKNO from NVI_MUST_AILE)) KISI --kişinin babası
inner join (select NVIKISITCKIMLIKNO,NVIKISIBABATCKIMLIKNO,NVIKISIBABAAD from NVI_BABA_MUST_AILE) KAE2 on KAE2.NVIKISITCKIMLIKNO=KISI.NVIKISIBABATCKIMLIKNO


UNION ALL

--BABANIN ANNESİ
select 
/*+ PARALLEL(NVI_MUST_AILE, 2) PARALLEL(KAE2, 4) */
KISI.NVIKISITCKIMLIKNO AS KISITC,KAE2.NVIKISIANNETCKIMLIKNO as ILISKILITCKN,KAE2.NVIKISIANNEAD,''ESANNE/ANNANNE/BABANNE'' as ILISKITURU,''2'' as KATEGORI,
concat(KISI.NVIKISITCKIMLIKNO,KAE2.NVIKISIANNETCKIMLIKNO ) as ANAHTAR    from
(select NVIKISITCKIMLIKNO,NVIKISIBABATCKIMLIKNO,NVIKISIBABAAD from  NVI_MUST_AILE where NVIKISITCKIMLIKNO IN (select NVIKISITCKIMLIKNO from NVI_MUST_AILE )) KISI --kişinin babası
inner join (select NVIKISITCKIMLIKNO,NVIKISIANNETCKIMLIKNO,NVIKISIANNEAD from NVI_ANNE_MUST_AILE) KAE2 on KAE2.NVIKISITCKIMLIKNO=KISI.NVIKISIBABATCKIMLIKNO


UNION ALL

--ANNENİN ANNESİ
select 
/*+ PARALLEL(NVI_MUST_AILE, 2) PARALLEL(KAE2, 4) */
KISI.NVIKISITCKIMLIKNO AS KISITC,KAE2.NVIKISIANNETCKIMLIKNO as ILISKILITCKN,KAE2.NVIKISIANNEAD,''ESANNE/ANNANNE/BABANNE'' as ILISKITURU,''2'' as KATEGORI,
concat(KISI.NVIKISITCKIMLIKNO,KAE2.NVIKISIANNETCKIMLIKNO ) as ANAHTAR    from
(select NVIKISITCKIMLIKNO,NVIKISIANNETCKIMLIKNO,NVIKISIANNEAD from  NVI_MUST_AILE where NVIKISITCKIMLIKNO IN (select NVIKISITCKIMLIKNO from NVI_MUST_AILE )) KISI --kişinin annesi
inner join (select NVIKISITCKIMLIKNO,NVIKISIANNETCKIMLIKNO,NVIKISIANNEAD from NVI_anne_MUST_AILE) KAE2 on KAE2.NVIKISITCKIMLIKNO=KISI.NVIKISIANNETCKIMLIKNO


UNION ALL

--ANNENİN BABASI
select 
/*+ PARALLEL(NVI_MUST_AILE, 2) PARALLEL(KAE3, 4) */
KISI.NVIKISITCKIMLIKNO AS KISITC,KAE3.NVIKISIBABATCKIMLIKNO as ILISKILITCKN,KAE3.NVIKISIBABAAD,''ESBABA/DEDE'' as ILISKITURU,''2'' as KATEGORI,
concat(KISI.NVIKISITCKIMLIKNO,KAE3.NVIKISIBABATCKIMLIKNO ) as ANAHTAR    from
(select NVIKISITCKIMLIKNO,NVIKISIANNETCKIMLIKNO,NVIKISIANNEAD from  NVI_MUST_AILE where NVIKISITCKIMLIKNO IN (select NVIKISITCKIMLIKNO from NVI_MUST_AILE )) KISI --kişinin annesi
inner join (select NVIKISITCKIMLIKNO,NVIKISIBABATCKIMLIKNO,NVIKISIBABAAD from NVI_BABA_MUST_AILE) KAE3 on KAE3.NVIKISITCKIMLIKNO=KISI.NVIKISIANNETCKIMLIKNO

 ) where KISITC<>ILISKILITCKN)
where ANAHTAR NOT IN (select ANAHTAR from ILISKI_KAT_1_MUST_AILE)




';
                                                                                    
execute immediate ' create index ind_KAILE_MUST_AILE on NVI_KAILE_MUST_AILE (KISITC)';

--Personel Dede,Annanne,Babanne,ES ANNE BABA ve YEGEN olusturulan ES,COCUK,BABA,ANNE,KARDES tablosuna eklenir.

execute immediate ' create  table ILISKI_KAT_2_V1_MUST_AILE as
select /*+ PARALLEL(ILISKI_KAT_1_MUST_AILE, 4)  */* from ILISKI_KAT_1_MUST_AILE
union all
select /*+ PARALLEL(NVI_KAILE_MUST_AILE, 4)  */* from NVI_KAILE_MUST_AILE
union all
select /*+ PARALLEL(NVI_YEGEN_MUST_AILE, 4)  */* from NVI_YEGEN_MUST_AILE
';

execute immediate ' create index ind_ILISKI_KAT_1_V2_MUST_AILE on ILISKI_KAT_2_V1_MUST_AILE (KISITC)';


--Tablodan personel ve cocugu lıstesınde olup yegen basıldıgı durumlar sılınır.

execute immediate'
delete from ILISKI_KAT_2_V1_MUST_AILE  
where KISITC=ILISKILITCKN ';


execute immediate'
delete from ILISKI_KAT_2_V1_MUST_AILE  
where ILISKITURU=''YEGEN'' and ANAHTAR IN 
(select concat(TCKIMLIKNO,ILISKILITCKN) AS ANAHTAR from NVI_COCUK_MUST_AILE)
';

--ES KARDESI

execute immediate ' create table NVI_ES_KARDES_MUST_AILE as

select KISITC,ILISKILITCKN,NVIKISIAD as ILISKILIKISIAD,ILISKITURU,KATEGORI from (


select /*+ PARALLEL(ESKARDES1, 2) PARALLEL(HAM, 4) */ ESKARDES1.NVIKISIESTCKIMLIKNO as KISITC, KAE.NVIKISITCKIMLIKNO as ILISKILITCKN,KAE.NVIKISIAD,''ESKARDES'' as ILISKITURU,''2'' as KATEGORI,
 concat(ESKARDES1.NVIKISIESTCKIMLIKNO,KAE.NVIKISITCKIMLIKNO) as ANAHTAR
  from 
(SELECT NVIKISIESTCKIMLIKNO, NVIKISIBABATCKIMLIKNO from  NVI_MUST_AILE where NVIKISITCKIMLIKNO IN (select NVIKISIESTCKIMLIKNO from 
NVI_ES_MUST_AILE where NVIKISIESTCKIMLIKNO IN
 (select ILISKILITCKN from ILISKI_KAT_1_MUST_AILE where ILISKITURU=''ES'' )
)
) ESKARDES1
inner join (select NVIKISITCKIMLIKNO, NVIKISIAD,NVIKISIBABATCKIMLIKNO from NVI_BABA_MUST_AILE) KAE on KAE.NVIKISIBABATCKIMLIKNO=ESKARDES1.NVIKISIBABATCKIMLIKNO 


union


select /*+ PARALLEL(ESKARDES2, 2) PARALLEL(HAM, 4) */

ESKARDES2.NVIKISIESTCKIMLIKNO as KISITC, KAE.NVIKISITCKIMLIKNO as ILISKILITCKN,KAE.NVIKISIAD,''ESKARDES'' as ILISKITURU,''2'' as KATEGORI,
 concat(ESKARDES2.NVIKISIESTCKIMLIKNO,KAE.NVIKISITCKIMLIKNO) as ANAHTAR
  from
(SELECT NVIKISIESTCKIMLIKNO, NVIKISIAD,NVIKISIANNETCKIMLIKNO from  NVI_MUST_AILE where NVIKISITCKIMLIKNO IN (select NVIKISIESTCKIMLIKNO from 
NVI_ES_MUST_AILE where NVIKISIESTCKIMLIKNO IN
 (select ILISKILITCKN from ILISKI_KAT_1_MUST_AILE where ILISKITURU=''ES''  )
)) ESKARDES2
inner join (select NVIKISITCKIMLIKNO, NVIKISIAD,NVIKISIANNETCKIMLIKNO from  NVI_ANNE_MUST_AILE) KAE on KAE.NVIKISIANNETCKIMLIKNO=ESKARDES2.NVIKISIANNETCKIMLIKNO

) where ANAHTAR  NOT IN (select ANAHTAR from ILISKI_KAT_1_MUST_AILE)
';


execute immediate ' create index ind_ES_KARDES_MUST_AILE on NVI_ES_KARDES_MUST_AILE (KISITC)';
--ES KARDESININ ADI EKLENIR


--begin
--execute immediate ' create table NVI__KOPYA_ES_KARD_2_FO as

--select ANA.NVIKISITCKIMLIKNO as KISITC,KRD.KARDESTCKN as ILISKILITCKN,KRD.AD as ILISKILIAD,KRD.ILISKITURU,KRD.KATEGORI
--from 
--(select * from (select * from NVI_ES_KARDES_MUST_AILE ) EK left outer join (SELECT TCKIMLIKNO,AD from VITDWH.DW_MST_V_TUMMUSTERI)
-- ESAD on EK.KARDESTCKN=ESAD.TCKIMLIKNO ) KRD
--inner join (select * from NVI_ES_MUST_AILE) ANA on ANA.NVIKISIESTCKIMLIKNO=KRD.ILISKILITCKN
--';
--execute immediate ' create index ind_prsnktk_v_12 on NVI__KOPYA_ES_KARD_2_FO (KISITC)';
--end;

--ESI kardes olarak gozuken satırlar sılınır.
--execute immediate '
--delete from NVI__KOPYA_ES_KARD_2_FO
--where KISITC=ILISKILITCKN 
--';

--execute immediate ' create table NVI__KOPYA_ESKAR_SON_FO as
--select * from NVI__KOPYA_ES_KARD_2_FO where ILISKILITCKN NOT IN (select NVIKISIESTCKIMLIKNO from NVI_ES_MUST_AILE)
--';
--execute immediate ' create index ind_prsnktk_v_13 on NVI__KOPYA_ESKAR_SON_FO (KISITC)';


--KARDES ESI

execute immediate ' 
create table  NVI_KARDES_ES_MUST_AILE as
select ASD.KISITC, ESAD.TCKIMLIKNO as ILISKILITCKN, ESAD.AD as ILISKILIAD, ASD.ILISKITURU,ASD.KATEGORI from
(select KAE.KISITC,KARDESES.NVIKISIESTCKIMLIKNO as ILISKILITCKN, ''KARDESES'' as ILISKITURU,''2'' as KATEGORI
 from (
select NVIKISITCKIMLIKNO,NVIKISIESTCKIMLIKNO from  NVI_MUST_AILE where NVIKISITCKIMLIKNO IN 
(select ILISKILITCKN from ILISKI_KARDES_MUST_AILE )) KARDESES inner join 
(select KISITC,ILISKILITCKN from ILISKI_KAT_1_MUST_AILE where ILISKITURU=''KARDES'' ) KAE on KAE.ILISKILITCKN=KARDESES.NVIKISITCKIMLIKNO
) ASD
   inner join            
    (SELECT NVIKISITCKIMLIKNO as TCKIMLIKNO,NVIKISIAD as AD from NVI_MUST_AILE) ESAD on ASD.ILISKILITCKN=ESAD.TCKIMLIKNO
';


execute immediate ' create index ind_KARDES_ES_MUST_AILE on NVI_KARDES_ES_MUST_AILE (KISITC)';

execute immediate'
delete from NVI_KARDES_ES_MUST_AILE
where KISITC=ILISKILITCKN 
';


--execute immediate ' create table NVI_KARDES_ES_MUST_AILE_SON as
--select * from NVI_KARDES_ES_MUST_AILE where ILISKILITCKN NOT IN (select ILISKILITCKN from ILISKI_ABEC_MUST_AILE where ILISKITURU=''ES'')
--';
--execute immediate ' create index ind_prsnktk_v_15 on NVI_KARDES_ES_MUST_AILE_SON (KISITC)';
--

--EN KUMULATIF TABLO BU. ANNE-BABA-ES-COCUK-KARDES-ESKARDES-KARDESES-KAYNANA-KAYINBABA-DEDE-ANNANNE-BABANNE ve YEGEN
execute immediate ' create table ILISKI_KAT_3_V1_MUST_AILE as
select KISITC,ILISKILITCKN,ILISKILIKISIAD,ILISKITURU,KATEGORI from ILISKI_KAT_2_V1_MUST_AILE
union 
select * from NVI_KARDES_ES_MUST_AILE
union 
select * from  NVI_ES_KARDES_MUST_AILE
';

execute immediate ' create index ind_KAT_3_V1_MUST_AILE on ILISKI_KAT_3_V1_MUST_AILE (KISITC)';

execute immediate 'create table ILISKI_KAT_3_V2_MUST_AILE as select /*+ PARALLEL(8)  use_hash(ELE)*/  MST.MUSTERINO,ELE.* from
(select * from ILISKI_KAT_3_V1_MUST_AILE) ELE left outer join (select MUSTERINO,TCKIMLIKNO
 from vitdwh.DW_MST_MUSTERI) MST on ELE.KISITC=MST.TCKIMLIKNO';
    
 
 execute immediate ' create index ind_KAT_3_V2_MUST_AILE on ILISKI_KAT_3_V2_MUST_AILE (KISITC)';
 
--Müşteri VB NO EKLENİR.
  
execute immediate 'create table ILISKI_KAT_3_V3_MUST_AILE as select /*+ PARALLEL(8)  use_hash(ELE)*/ ELE.*,MST2.MUSTERINO as ILISKILIVB, 
concat(ELE.KISITC,ELE.ILISKILITCKN) as ANAHTAR from
(select * from ILISKI_KAT_3_V2_MUST_AILE) ELE left outer join (select MUSTERINO,TCKIMLIKNO from vitdwh.DW_MST_MUSTERI) MST2 on ELE.ILISKILITCKN=MST2.TCKIMLIKNO
where ILISKILITCKN is not null';


 execute immediate ' create index ind_KAT_3_V3_MUST_AILE on ILISKI_KAT_3_V3_MUST_AILE (KISITC)'; 

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
--DEDEANNE

execute immediate' Create  table ILISKI_DEDEANNE_MUST_AILE AS
SELECT NVIKISITCKIMLIKNO AS MST_ANNE_TC,NVIKISIBABATCKIMLIKNO,''DEDEANNE'' AS ILISKITURU FROM NVI_BABA_MUST_AILE WHERE NVIKISITCKIMLIKNO IN(
SELECT ILISKILITCKN FROM ILISKI_KAT_3_V3_MUST_AILE WHERE ILISKITURU=''ANNE'') AND NVIKISIBABATCKIMLIKNO IS NOT NULL
';

--DEDEBABA
execute immediate' Create  table ILISKI_DEDEBABA_MUST_AILE AS
SELECT NVIKISITCKIMLIKNO AS MST_BABA_TC,NVIKISIBABATCKIMLIKNO, ''DEDEBABA'' AS ILISKITURU FROM NVI_BABA_MUST_AILE WHERE NVIKISITCKIMLIKNO IN(
SELECT ILISKILITCKN FROM ILISKI_KAT_3_V3_MUST_AILE WHERE ILISKITURU=''BABA'') AND NVIKISIBABATCKIMLIKNO IS NOT NULL
';

--BABAANE
execute immediate' Create  table ILISKI_BABAANNE_MUST_AILE AS
SELECT NVIKISITCKIMLIKNO AS MST_BABA_TC,NVIKISIANNETCKIMLIKNO,''BABAANNE'' AS ILISKITURU FROM NVI_ANNE_MUST_AILE WHERE NVIKISITCKIMLIKNO IN(
SELECT ILISKILITCKN FROM ILISKI_KAT_3_V3_MUST_AILE WHERE ILISKITURU=''BABA'') AND NVIKISIANNETCKIMLIKNO IS NOT NULL';

--ANNEANNE
execute immediate' create  table ILISKI_ANNEANNE_MUST_AILE AS
SELECT NVIKISITCKIMLIKNO AS MST_ANNE_TC,NVIKISIANNETCKIMLIKNO,''ANNEANNE'' AS ILISKITURU FROM NVI_ANNE_MUST_AILE WHERE NVIKISITCKIMLIKNO IN(
SELECT ILISKILITCKN FROM ILISKI_KAT_3_V3_MUST_AILE WHERE ILISKITURU=''ANNE'') AND NVIKISIANNETCKIMLIKNO IS NOT NULL';



--DAYI

execute immediate'
create table ILISKI_DTAH_MUST_AILE as
select * from (
select distinct KISITC,NVIKISITCKIMLIKNO as ILISKILITCKN,''3'' as KATEGORI, case when  NVIKISICINSIYET=1 then ''DAYI'' else ''TEYZE'' end as ILISKITURU, 
concat(KISITC,NVIKISITCKIMLIKNO) as ANAHTAR  from ( 
select  /*+ PARALLEL(8)  use_hash(DA)*/ MST3.KISITC, DA.*,NVI.NVIKISITCKIMLIKNO,NVIKISICINSIYET from ILISKI_DEDEANNE_MUST_AILE DA left outer join
ILISKI_KAT_3_V3_MUST_AILE MST3 on MST3.ILISKILITCKN=DA.MST_ANNE_TC and MST3.ILISKITURU=''ANNE''
left outer join
NVI_MUST_AILE NVI on NVI.NVIKISIBABATCKIMLIKNO=DA.NVIKISIBABATCKIMLIKNO and DA.MST_ANNE_TC<>NVI.NVIKISITCKIMLIKNO
UNION

select  /*+ PARALLEL(8)  use_hash(DA)*/ MST3.KISITC, DA.*,NVI.NVIKISITCKIMLIKNO,NVIKISICINSIYET from ILISKI_ANNEANNE_MUST_AILE DA left outer join
ILISKI_KAT_3_V3_MUST_AILE MST3 on MST3.ILISKILITCKN=DA.MST_ANNE_TC and MST3.ILISKITURU=''ANNE''
left outer join
NVI_MUST_AILE NVI on NVI.NVIKISIANNETCKIMLIKNO=DA.NVIKISIANNETCKIMLIKNO and DA.MST_ANNE_TC<>NVI.NVIKISITCKIMLIKNO)

UNION

select distinct KISITC,NVIKISITCKIMLIKNO as ILISKILITCKN,''3'' as KATEGORI, case when  NVIKISICINSIYET=1 then ''AMCA'' else ''HALA'' end as ILISKITURU,
concat(KISITC,NVIKISITCKIMLIKNO) as ANAHTAR  from ( 
select /*+ PARALLEL(8)  use_hash(DA)*/ MST3.KISITC, DA.*,NVI.NVIKISITCKIMLIKNO,NVIKISICINSIYET from ILISKI_DEDEBABA_MUST_AILE DA left outer join
ILISKI_KAT_3_V3_MUST_AILE MST3 on MST3.ILISKILITCKN=DA.MST_BABA_TC and MST3.ILISKITURU=''BABA''
left outer join
NVI_MUST_AILE NVI on NVI.NVIKISIBABATCKIMLIKNO=DA.NVIKISIBABATCKIMLIKNO and DA.MST_BABA_TC<>NVI.NVIKISITCKIMLIKNO
UNION
select /*+ PARALLEL(8)  use_hash(DA)*/  MST3.KISITC, DA.*,NVI.NVIKISITCKIMLIKNO,NVIKISICINSIYET from ILISKI_BABAANNE_MUST_AILE DA left outer join
ILISKI_KAT_3_V3_MUST_AILE MST3 on MST3.ILISKILITCKN=DA.MST_BABA_TC and MST3.ILISKITURU=''BABA''
left outer join
NVI_MUST_AILE NVI on NVI.NVIKISIANNETCKIMLIKNO=DA.NVIKISIANNETCKIMLIKNO and DA.MST_BABA_TC<>NVI.NVIKISITCKIMLIKNO)
) where ILISKILITCKN is not null

';


execute immediate ' create index ind_DTAH_MUST_AILE on ILISKI_DTAH_MUST_AILE (KISITC)'; 


execute immediate'delete from ILISKI_DTAH_MUST_AILE where concat(KISITC,ILISKILITCKN)IN (select concat(KISITC,ILISKILITCKN) FROM ILISKI_KAT_3_V1_MUST_AILE) ';


execute immediate'
create table ILISKI_YENGEENISTE_MUST_AILE  as
select distinct KISITC,ILISKILITCKN,''3'' as KATEGORI, case when  NVIKISICINSIYET=1 then ''YENGE'' else ''ENISTE'' end as ILISKITURU
, concat(K1.KISITC,K1.ILISKILITCKN) as ANAHTAR from ( 
select KISITC,NVI.NVIKISIESTCKIMLIKNO as ILISKILITCKN,NVI.NVIKISICINSIYET from ILISKI_DTAH_MUST_AILE  DT
inner join NVI_MUST_AILE NVI on NVI.NVIKISITCKIMLIKNO=DT.ILISKILITCKN WHERE NVI.NVIKISIESTCKIMLIKNO IS NOT NULL) K1
';

--KUZEN

execute immediate' 
create table ILISKI_KUZEN_MUST_AILE as
select KZN.*,  concat(KZN.KISITC,KZN.ILISKILITCKN) as ANAHTAR  from ((
select KZN2.KISITC,KZN1.ILISKILITCKN as ILISKILITCKN, ''3'' as KATEGORI, ''KUZEN_V1'' as  ILISKITURU from
(select * from ILISKI_DTAH_MUST_AILE where ILISKITURU IN (''TEYZE'',''HALA'') 
) KZN2
left outer join
(select KISITC,ILISKILITCKN from ILISKI_KAT_3_V3_MUST_AILE where ILISKITURU=''COCUK''  ) KZN1 on KZN2.ILISKILITCKN =KZN1.KISITC 
)

UNION 
(select KZN4.KISITC,KZN3.ILISKILITCKN as ILISKILITCKN,''3'' as KATEGORI , ''KUZEN_V2'' as  ILISKITURU from
(select * from ILISKI_DTAH_MUST_AILE where ILISKITURU IN (''AMCA'',''DAYI'') 
) KZN4 left outer join
(select KISITC,ILISKILITCKN from ILISKI_KAT_3_V3_MUST_AILE where ILISKITURU=''COCUK''  ) KZN3 on KZN4.ILISKILITCKN =KZN3.KISITC)) KZN '
;


execute immediate'
create table MST_MUSTERIAILEKUTUGU_G  as
select KISITC,ILISKILITCKN,KATEGORI, ILISKITURU,ANAHTAR from ILISKI_KAT_3_V3_MUST_AILE 
UNION
select KISITC,ILISKILITCKN,KATEGORI, ILISKITURU,ANAHTAR  from ILISKI_DTAH_MUST_AILE 
UNION
select KISITC,ILISKILITCKN,KATEGORI, ILISKITURU,ANAHTAR  from ILISKI_KUZEN_MUST_AILE
UNION
select KISITC,ILISKILITCKN,KATEGORI, ILISKITURU,ANAHTAR  from ILISKI_YENGEENISTE_MUST_AILE  

';

execute immediate ' create index ind_MUSTERIAILEKUTUGU_G on MST_MUSTERIAILEKUTUGU_G (KISITC)'; 

execute immediate'
create table MST_MUSTERIAILEKUTUGU_G3 as 
select T1.KISITC as KISITC, T1.ILISKILITCKN,concat(concat(N1.NVIKISIAD, '' ''), N1.NVIKISISOYAD) as ILISKILIADSOYAD, T1.KATEGORI,
T1.ILISKITURU from MST_MUSTERIAILEKUTUGU_G T1
left outer join  NVI_MUST_AILE N1 on T1.ILISKILITCKN=N1.NVIKISITCKIMLIKNO';

execute immediate ' create index ind_MUSTERIAILEKUTUGU_G3 on MST_MUSTERIAILEKUTUGU_G3 (KISITC)'; 

execute immediate'
create table MST_MUSTERIAILEKUTUGU_G2 as 
select T1.* ,M1.MUSTERINO,concat(concat(M1.AD, '' ''), M1.SOYAD) as MSTADSOYAD from MST_MUSTERIAILEKUTUGU_G3 T1
left outer join  VITDWH.DW_MST_V_TUMMUSTERI M1 on T1.KISITC=M1.TCKIMLIKNO ';

execute immediate ' create index ind_MUSTERIAILEKUTUGU_G2 on MST_MUSTERIAILEKUTUGU_G2 (KISITC)';

execute immediate'
create table MST_MUSTERIAILEKUTUGU_G1 as 
select T1.KISITC,T1.MUSTERINO,T1.MSTADSOYAD, T1.ILISKILITCKN, T1.ILISKILIADSOYAD, M2.MUSTERINO as ILISKILIMSTNO,T1.KATEGORI,
T1.ILISKITURU, PER.BANKASICILNO,IK.DESCRIPTION from MST_MUSTERIAILEKUTUGU_G2 T1
left outer join  VITDWH.DW_MST_V_TUMMUSTERI M2 on T1.ILISKILITCKN=M2.TCKIMLIKNO 
left outer join IKY.DW_IKY_PERSONEL PER ON PER.TCKIMLIKNO=T1.KISITC
LEFT JOIN  (select * from VITDWH.DW_PAR_PARAMETER where GROUPCODE=''IKYDurumKodlari'') IK on PER.DURUMKODU=IK.CODE
';

execute immediate ' create index indt_MUSTERIAILEKUTUGU_G1 on MST_MUSTERIAILEKUTUGU_G1 (KISITC)';



execute immediate 'create table MST_ANAHTAR as
select concat(KISITC,ILISKILITCKN) as ANAHTAR FROM MST_MUSTERIAILEKUTUGU';

execute immediate ' create index indt_MUSTERIAILEKUTUGUANHATAR_G1 on MST_ANAHTAR (ANAHTAR)';

execute immediate'
insert into MST_MUSTERIAILEKUTUGU
select * from MST_MUSTERIAILEKUTUGU_G1 where concat(KISITC,ILISKILITCKN) NOT IN (select * FROM MST_ANAHTAR) and ILISKILITCKN IS NOT NULL';

execute immediate'
CREATE TABLE PERSONEL_AILE_KUTUGU_KAT 
(
ILISKITURU VARCHAR2(23 BYTE),
KATEGORIALTTURU CHAR(2 BYTE)
)';

execute immediate'
INSERT ALL 
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''10'',''ANNE'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''11'',''BABA'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''12'',''COCUK'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''13'',''ES'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''14'',''KARDES'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''20'',''ESKARDES'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''21'',''KARDESES'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''22'',''ESBABA/DEDE'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''23'',''ESANNE/ANNANNE/BABANNE'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''24'',''YEGEN'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''30'',''AMCA'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''31'',''DAYI'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''32'',''ENISTE'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''33'',''HALA'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''35'',''TEYZE'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''36'',''YENGE'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''40'',''IKAMET'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''34'',''KUZEN_V1'')
INTO PERSONEL_AILE_KUTUGU_KAT (KATEGORIALTTURU,ILISKITURU) VALUES(''34'',''KUZEN_V2'')
SELECT * FROM DUAL
';

execute immediate 'create table PER_ANAHTAR as
select ANAHTAR FROM PERSONEL_AILE_KUTUGU';

execute immediate'
insert into PERSONEL_AILE_KUTUGU
SELECT  A.BANKASICILNO,A.MUSTERINO,A.KISITC ,A.ILISKILITCKN,A.ILISKILIMSTNO , 
mst.NVIKISIAD as ILISKILIKISIAD, mst.NVIKISIAD as ILISKILIADI2 ,mst.NVIKISISOYAD as ILISKILIKISISOYAD ,
A.ILISKITURU, A.KATEGORI ,KAT.KATEGORIALTTURU,  A.KISITC || A.ILISKILITCKN || KATEGORIALTTURU AS ANAHTAR
FROM (SELECT * FROM    MST_MUSTERIAILEKUTUGU_G1 WHERE ILISKILITCKN IS NOT NULL)A
left join VITDWH.DW_MST_NVIKISI MST ON MST.NVIKISITCKIMLIKNO = A.ILISKILITCKN 
LEFT JOIN PERSONEL_AILE_KUTUGU_KAT KAT ON   A.ILISKITURU=KAT.ILISKITURU
where A.BANKASICILNO is not null AND A.BANKASICILNO NOT LIKE ''YK%'' AND A.KISITC || A.ILISKILITCKN || KATEGORIALTTURU NOT IN (SELECT ANAHTAR FROM PER_ANAHTAR) ';

EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.MUSTERINO_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.MUSTERI_TCKN_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.NVI_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.NVI_ANNE_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.NVI_BABA_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.NVI_ES_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.NVI_COCUK_MUST_AILE ';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.ILISKI_ABEC_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.ILISKI_KARDES_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.ILISKI_KAT_1_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.NVI_YEGEN_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.NVI_KAILE_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.ILISKI_KAT_2_V1_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.NVI_ES_KARDES_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.NVI_KARDES_ES_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.ILISKI_KAT_3_V1_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.ILISKI_KAT_3_V2_MUST_AILE';  
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.ILISKI_KAT_3_V3_MUST_AILE'; 
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.ILISKI_DEDEANNE_MUST_AILE'; 
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.ILISKI_DEDEBABA_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.ILISKI_ANNEANNE_MUST_AILE'; 
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.ILISKI_BABAANNE_MUST_AILE'; 
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.ILISKI_DTAH_MUST_AILE';  
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.ILISKI_YENGEENISTE_MUST_AILE';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.ILISKI_KUZEN_MUST_AILE'; 
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.MST_MUSTERIAILEKUTUGU_G3'; 
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.MST_MUSTERIAILEKUTUGU_G2'; 
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.MST_MUSTERIAILEKUTUGU_G1'; 
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.MST_MUSTERIAILEKUTUGU_G';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.MST_ANAHTAR';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.PERSONEL_AILE_KUTUGU_KAT';
EXECUTE IMMEDIATE 'DROP TABLE VBTEFTIS2.PER_ANAHTAR';
END  ;
/



--MEMZUC




---SKOR TARİHÇESİ


CREATE TABLE hucalisma_SKOR2 AS
select MUSTERINO,
             SKORLAMATURU,SKORLAMATURUACIKLAMA,
             SKORTALEPTARIHI,
             FIRMAUNVANI,
             SONONAYTARIHI,
             NVL(CASE
                   WHEN PUANPD > 0 THEN
                    PUANPD
                   ELSE
                    SANALPUANPD
                 END,
                 0) AS SKORPD,SKORKODU,SKORPUANI
      
        from (SELECT TLP.MUSTERINO,
                     TO_CHAR(TLP.SKORLAMATURU) AS SKORLAMATURU,PAR.DESCRIPTION AS SKORLAMATURUACIKLAMA,
                     TLP.SKORTALEPTARIHI,
                     TLP.FIRMAUNVANI,
                     (CASE
                       WHEN TLP.ONAYBIRIMTIPI = 1 OR TLP.ONAYBIRIMTIPI = 3 THEN
                        TLP.ONAYTARIHI
                       WHEN TLP.ONAYBIRIMTIPI = 2 THEN
                        DTY.SONONAYTARIHI
                       ELSE
                        NULL
                     END) AS SONONAYTARIHI,
                     (CASE
                       WHEN TLP.ONAYBIRIMTIPI = 1 OR TLP.ONAYBIRIMTIPI = 3 THEN
                        TLP.PUANPD
                       WHEN TLP.ONAYBIRIMTIPI = 2 THEN
                        DTY.ONAYLANMISPUANPD
                       ELSE
                        NULL
                     END) PUANPD,
                     TLP.SANALPUANPD,TO_CHAR(SKORKODU) AS SKORKODU,TO_CHAR(SKORPUANI) AS SKORPUANI
                FROM VITDWH.DW_SKR_FIRMASKORTALEP TLP
                LEFT JOIN VITDWH.DW_SKR_FIRMADETAY DTY
                  ON TLP.ID = DTY.FIRMASKORTALEPID
                JOIN VITDWH.DW_PAR_V_PARAMETER PAR
                  ON PAR.GROUPCODE = 'SKRUygulamadakiSkorlama'
                 AND TLP.SKORLAMATURU = PAR.CODE
                 
               WHERE TLP.ONAYBIRIMTIPI in (1, 2, 3)
              
              UNION ALL
              
              -- E İstihbarat Talepleri
              
              SELECT POR.MUSTERINO,
                     (CASE
                       WHEN POR.RAPORTURU IN
                            ('TİCARİ SKOR', 'TİCARİ SKOR DETAY') THEN
                        '1'
                       ELSE
                        '3'
                     END) AS SKORLAMATURU,POR.RAPORTURU,
                     
                     POR.BASLANGICTARIHI AS SKORTALEPTARIHI,
                     FIRMAUNVANI,
                     POR.BITISTARIHI     SONONAYTARIHI,
                     NULL                PUANPD,
                     POR.SANALPUANPD,TO_CHAR(NOTU),TO_CHAR(SKORPUAN)
                FROM VITDWH.DW_SKR_PORTALTALEP POR
               WHERE POR.DURUMKODU IN (500, 4)
              
              UNION ALL
              
              -- Kobi Portal Talebi
              
              SELECT KOB.MUSTERINO,
                     '2' SKORLAMATURU,PAR.DESCRIPTION,
                     KOB.GIRISTARIHI SKORTALEPTARIHI,
                     KOB.FIRMAUNVANI,
                     KOB.GIRISTARIHI,
                     NULL PUANPD,
                     0 SANALPUANPD,TO_CHAR(SKORKODU),TO_CHAR(SKORPUANI)
              
                FROM VITDWH.DW_KOB_PORTALTALEP KOB
                JOIN VITDWH.DW_PAR_V_PARAMETER PAR
                  ON PAR.GROUPCODE = 'SKRUygulamadakiSkorlama'
                 AND KOB.KOBISKORTURU = PAR.CODE
               WHERE SKORDURUMKODU IN (500, 4)
              
              ) SKR
       WHERE  MUSTERINO IN (SELECT MUSTERINO FROM hucalisma2)




CREATE TABLE hucalisma_SKORTARIHCE2 AS

SELECT MUSTERINO,SKORLAMATURUACIKLAMA,SONONAYTARIHI AS RAPORTARIHI,SKORPD,SKORKODU,SKORPUANI,
NVL(LEAD (SONONAYTARIHI,1) OVER (PARTITION BY MUSTERINO ORDER BY SONONAYTARIHI),TO_DATE('31.12.2999','DD.MM.YYYY')) AS SONRAKIRAPORTARIHI
FROM  hucalisma_SKOR2 
order by 1,3 asc

SELECT * FROM hucalisma_SKORTARIHCE2



CREATE TABLE hucalisma_sonuc2 AS

SELECT MUS.*,KREDITURU,KREDIADI,RISKNO,KREDITUTARI,KALANANAPARA,
PARABIRIMI,KULLANDIRIMTARIHI,KALANANAPARATLKARSILIGI,GECIKMEGUNSAYISI ,
 SKORLAMATURUACIKLAMA,RAPORTARIHI,SKORPD,SKORKODU,SKORPUANI
FROM hucalisma2 MUS
LEFT OUTER JOIN
hucalisma_NAKDIGNAKDIRISK2 R ON MUS.MUSTERINO=R.MUSTERINO
LEFT OUTER JOIN
hucalisma_SKORTARIHCE2 SKR ON SKR.MUSTERINO=MUS.MUSTERINO AND TRUNC(KULLANDIRIMTARIHI) BETWEEN TRUNC(RAPORTARIHI) AND TRUNC(SONRAKIRAPORTARIHI)
ORDER BY 1,4


SELECT * FROM hucalisma_sonuc2
union all
select * from hucalisma_sonuc


create table hucalisma_musteri as

select * from hucalisma2
union all
select * from hucalisma




---MEMZUÇ





CREATE TABLE hucalisma_mEMZUCARA1 AS

SELECT * FROM VITDWH.DW_MST_MUSTERI MUS
                            WHERE EXISTS (SELECT 1 FROM hucalisma_musteri HUMUS WHERE HUMUS.MUSTERINO=MUS.MUSTERINO)

CREATE TABLE hucalisma_mEMZUCARA2 AS

SELECT DISTINCT VERGINO, TCKIMLIKNO,DONEM, NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR
         FROM VITDM.DM_SKR_MEMZUC
        WHERE DONEM >= '202309'

CREATE TABLE hucalisma_mEMZUCARA_NAKITLIMIT AS

SELECT TCKIMLIKNO,VERGINO,
                DONEM,
                NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR,
                SUM (LIMIT) AS NAKITLIMIT
           FROM VITDM.DM_SKR_MEMZUC
          WHERE RISKKODU IN (SELECT CODE
                               FROM VITDWH.DW_PAR_PARAMETER
                              WHERE GROUPCODE LIKE '%IVBMemzucTum%'
                                    AND DETAIL1 = 'NAKDİ')
                                    AND DONEM >= '202309'
                                    
       GROUP BY TCKIMLIKNO,VERGINO, DONEM
       
       
 
CREATE TABLE hucalisma_mEMZUCARA_GNAKDILIMIT AS      
       
       SELECT TCKIMLIKNO,VERGINO,
                DONEM,
                NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR,
                SUM (LIMIT) AS GNAKDILIMIT                                  
           FROM VITDM.DM_SKR_MEMZUC
          WHERE RISKKODU IN (SELECT CODE
                               FROM VITDWH.DW_PAR_PARAMETER
                              WHERE GROUPCODE LIKE '%IVBMemzucTum%'
                                    AND DETAIL1 = 'GAYRİNAKDİ')
                                    AND DONEM >= '202309'
       GROUP BY TCKIMLIKNO,VERGINO, DONEM
       
       
       
     CREATE TABLE hucalisma_mEMZUCARA_TOPLAMLIMIT AS       
       SELECT TCKIMLIKNO,VERGINO,
                                DONEM,
                               NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR,
                                SUM (LIMIT) AS TOPLAMLIMIT
                           FROM VITDM.DM_SKR_MEMZUC
                          WHERE RISKKODU <> 1  AND DONEM >= '202309'
                       GROUP BY TCKIMLIKNO,VERGINO, DONEM
                       
                       
                       
        
     CREATE TABLE hucalisma_mEMZUCARA_NAKITRISK AS                     
                       
     SELECT TCKIMLIKNO,VERGINO,
                DONEM,
                NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR,
                SUM(RISKI1_12AY)+SUM(RISKI12_24AY)+SUM(RISKI24USTUAY) AS NAKITRISK
           FROM VITDM.DM_SKR_MEMZUC
          WHERE RISKKODU IN (SELECT CODE
                               FROM VITDWH.DW_PAR_PARAMETER
                              WHERE GROUPCODE LIKE '%IVBMemzucTum%'
                                    AND DETAIL1 = 'NAKDİ')  AND DONEM >= '202309'
       GROUP BY TCKIMLIKNO,VERGINO, DONEM
       
       
       
       CREATE TABLE hucalisma_mEMZUCARA_GNAKDIRISK AS    
       SELECT TCKIMLIKNO,VERGINO,
                DONEM,
                NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR,
                SUM(RISKI1_12AY)+SUM(RISKI12_24AY)+SUM(RISKI24USTUAY) AS GNAKDIRISK
           FROM VITDM.DM_SKR_MEMZUC
          WHERE RISKKODU IN (SELECT CODE
                               FROM VITDWH.DW_PAR_PARAMETER
                              WHERE GROUPCODE LIKE '%IVBMemzucTum%'
                                    AND DETAIL1 = 'GAYRİNAKDİ')  AND DONEM >= '202309'
       GROUP BY TCKIMLIKNO,VERGINO, DONEM
       
       
       
       
       CREATE TABLE hucalisma_mEMZUCARA_TOPLAMRISK AS  
        SELECT TCKIMLIKNO,VERGINO,
                DONEM,
                NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR,
                SUM(RISKI1_12AY)+SUM(RISKI12_24AY)+SUM(RISKI24USTUAY) AS TOPLAMRISK
           FROM VITDM.DM_SKR_MEMZUC
          WHERE RISKKODU <> 1  AND DONEM >= '202309'
       GROUP BY TCKIMLIKNO,VERGINO, DONEM
       
       
       
       CREATE TABLE hucalisma_mEMZUCARA_TEMERRUT AS 
        SELECT TCKIMLIKNO,VERGINO,
                                DONEM,
                                NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR,
                                SUM (FAIZTAHTEMERFAIZ) AS TEMERRUT
                           FROM VITDM.DM_SKR_MEMZUC w
                           WHERE    DONEM >= '202309'
                       GROUP BY TCKIMLIKNO,VERGINO, DONEM
                       
                       
           CREATE TABLE hucalisma_SORUNLUKREDI AS              
        SELECT TCKIMLIKNO,VERGINO,
                DONEM,
                NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR,
                SUM(RISKI1_12AY)+SUM(RISKI12_24AY)+SUM(RISKI24USTUAY) AS SORUNLUKREDI
           FROM VITDM.DM_SKR_MEMZUC
          WHERE RISKKODU IN (SELECT CODE
                               FROM VITDWH.DW_PAR_PARAMETER
                              WHERE GROUPCODE LIKE '%IVBMemzucTum%' AND  DONEM >= '202309'
                                    AND DETAIL4 = 1)
       GROUP BY TCKIMLIKNO,VERGINO, DONEM
       
       
       
        CREATE TABLE hucalisma_VBLIMIT AS   
        SELECT TCKIMLIKNO,VERGINO,
                                DONEM,
                                NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR,
                                SUM (LIMIT) AS VB_LIMIT
                           FROM VITDM.DM_SKR_MEMZUC
                          WHERE KURUMTIPI = 'B' AND RISKKODU <> 1  AND  DONEM >= '202309'
                       GROUP BY TCKIMLIKNO,VERGINO, DONEM
                       
                       
                CREATE TABLE hucalisma_VBRISK AS           
                       
         SELECT TCKIMLIKNO,VERGINO,
                DONEM,
                NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR,
                SUM(RISKI1_12AY)+SUM(RISKI12_24AY)+SUM(RISKI24USTUAY) AS VB_RISK
           FROM VITDM.DM_SKR_MEMZUC
          WHERE KURUMTIPI = 'B' AND  DONEM >= '202309'
       GROUP BY TCKIMLIKNO,VERGINO, DONEM
       
       
       
           CREATE  TABLE hucalisma_VBDISIRISK AS           
                       
         SELECT TCKIMLIKNO,VERGINO,
                DONEM,
                NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR,
                SUM(RISKI1_12AY)+SUM(RISKI12_24AY)+SUM(RISKI24USTUAY) AS VBDISI_RISK
           FROM VITDM.DM_SKR_MEMZUC
          WHERE KURUMTIPI <> 'B' AND  DONEM >= '202309'
       GROUP BY TCKIMLIKNO,VERGINO, DONEM
       
       
       
        CREATE TABLE hucalisma_mEMZUCARA_VBNAKITRISK AS                     
                       
     SELECT TCKIMLIKNO,VERGINO,
                DONEM,
                NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR,
                SUM(RISKI1_12AY)+SUM(RISKI12_24AY)+SUM(RISKI24USTUAY) AS NAKITRISK
           FROM VITDM.DM_SKR_MEMZUC
          WHERE KURUMTIPI = 'B' AND RISKKODU IN (SELECT CODE
                               FROM VITDWH.DW_PAR_PARAMETER
                              WHERE GROUPCODE LIKE '%IVBMemzucTum%'
                                    AND DETAIL1 = 'NAKDİ')  AND DONEM >= '202309'
       GROUP BY TCKIMLIKNO,VERGINO, DONEM
       
     CREATE TABLE hucalisma_mEMZUCARA_VBDISINAKITRISK AS                     
                       
     SELECT TCKIMLIKNO,VERGINO,
                DONEM,
                NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR,
                SUM(RISKI1_12AY)+SUM(RISKI12_24AY)+SUM(RISKI24USTUAY) AS NAKITRISK
           FROM VITDM.DM_SKR_MEMZUC
          WHERE KURUMTIPI <> 'B' AND RISKKODU IN (SELECT CODE
                               FROM VITDWH.DW_PAR_PARAMETER
                              WHERE GROUPCODE LIKE '%IVBMemzucTum%'
                                    AND DETAIL1 = 'NAKDİ')  AND DONEM >= '202309'
       GROUP BY TCKIMLIKNO,VERGINO, DONEM
       
       
       
       
       
       
       CREATE TABLE hucalisma_mEMZUCARA_VBGNAKDIRISK AS    
       SELECT TCKIMLIKNO,VERGINO,
                DONEM,
                NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR,
                SUM(RISKI1_12AY)+SUM(RISKI12_24AY)+SUM(RISKI24USTUAY) AS GNAKDIRISK
           FROM VITDM.DM_SKR_MEMZUC
          WHERE KURUMTIPI = 'B' AND RISKKODU IN (SELECT CODE
                               FROM VITDWH.DW_PAR_PARAMETER
                              WHERE GROUPCODE LIKE '%IVBMemzucTum%'
                                    AND DETAIL1 = 'GAYRİNAKDİ')  AND DONEM >= '202309'
       GROUP BY TCKIMLIKNO,VERGINO, DONEM
       
       
       
        CREATE TABLE hucalisma_mEMZUCARA_VBDISIGNAKDIRISK AS    
       SELECT TCKIMLIKNO,VERGINO,
                DONEM,
                NVL(TCKIMLIKNO,0) || NVL(VERGINO,0) || DONEM AS ANAHTAR,
                SUM(RISKI1_12AY)+SUM(RISKI12_24AY)+SUM(RISKI24USTUAY) AS GNAKDIRISK
           FROM VITDM.DM_SKR_MEMZUC
          WHERE KURUMTIPI <> 'B' AND RISKKODU IN (SELECT CODE
                               FROM VITDWH.DW_PAR_PARAMETER
                              WHERE GROUPCODE LIKE '%IVBMemzucTum%'
                                    AND DETAIL1 = 'GAYRİNAKDİ')  AND DONEM >= '202309'
       GROUP BY TCKIMLIKNO,VERGINO, DONEM


CREATE TABLE hucalisma_mEMZUC AS
SELECT  /*+ PARALLEL(16)  use_hash(ANA,MUS)*/
MUS.MUSTERINO,ANA.TCKIMLIKNO,ANA.VERGINO,
      ANA.DONEM,
      CASE WHEN NAKITLIMIT.NAKITLIMIT IS NULL THEN 0 ELSE NAKITLIMIT.NAKITLIMIT END AS NAKITLIMIT,
      CASE WHEN GNAKDILIMIT.GNAKDILIMIT IS NULL THEN 0 ELSE GNAKDILIMIT.GNAKDILIMIT END AS GNAKDILIMIT,
      CASE WHEN TOPLAMLIMIT.TOPLAMLIMIT IS NULL THEN 0 ELSE TOPLAMLIMIT.TOPLAMLIMIT END AS TOPLAMLIMIT,
      CASE WHEN NAKITRISK.NAKITRISK IS NULL THEN 0 ELSE NAKITRISK.NAKITRISK END AS NAKITRISK,
      CASE WHEN GNAKDIRISK.GNAKDIRISK IS NULL THEN 0 ELSE GNAKDIRISK.GNAKDIRISK END AS GNAKDIRISK,
      CASE WHEN TOPLAMRISK.TOPLAMRISK IS NULL THEN 0 ELSE TOPLAMRISK.TOPLAMRISK END AS TOPLAMRISK,
      CASE WHEN TEMERRUT.TEMERRUT IS NULL THEN 0 ELSE TEMERRUT.TEMERRUT END AS TEMERRUT,
      CASE WHEN SORUNLUKREDI.SORUNLUKREDI IS NULL THEN 0 ELSE SORUNLUKREDI.SORUNLUKREDI END AS SORUNLUKREDI,
      CASE WHEN VBLIMIT.VB_LIMIT IS NULL THEN 0 ELSE VBLIMIT.VB_LIMIT END AS VB_LIMIT,
      CASE WHEN VBRISK.VB_RISK IS NULL THEN 0 ELSE VBRISK.VB_RISK END AS VB_RISK,
      CASE WHEN VBDISIRISK.VBDISI_RISK IS NULL THEN 0 ELSE VBDISIRISK.VBDISI_RISK END AS VBDISI_RISK,
      CASE WHEN VBNAKITRISK.NAKITRISK IS NULL THEN 0 ELSE VBNAKITRISK.NAKITRISK END AS VBNAKIT_RISK,
      CASE WHEN VBDISINAKITRISK.NAKITRISK IS NULL THEN 0 ELSE VBDISINAKITRISK.NAKITRISK END AS VBDISINAKIT_RISK,
        CASE WHEN VBGNAKDIRISK.GNAKDIRISK IS NULL THEN 0 ELSE VBGNAKDIRISK.GNAKDIRISK END AS VBGNAKDI_RISK,
      CASE WHEN VBDISIGNAKDIRISK.GNAKDIRISK IS NULL THEN 0 ELSE VBDISIGNAKDIRISK.GNAKDIRISK END AS VBDISIGNAKDI_RISK
      
     

       
      
      
 FROM hucalisma_mEMZUCARA2 ANA  
       INNER JOIN hucalisma_mEMZUCARA1        MUS ON (MUS.VERGINO= ANA.VERGINO OR MUS.TCKIMLIKNO=ANA.TCKIMLIKNO)
                                                 -- ANA MEMZUÇ TABLOSU
      LEFT OUTER JOIN
      hucalisma_mEMZUCARA_NAKITLIMIT NAKITLIMIT                                      --NAKIT LIMIT
         ON ANA.ANAHTAR = NAKITLIMIT.ANAHTAR
         
      LEFT OUTER JOIN
      hucalisma_mEMZUCARA_GNAKDILIMIT GNAKDILIMIT                                     --G.NAKIT LIMIT
         ON ANA.ANAHTAR = GNAKDILIMIT.ANAHTAR
         
      LEFT OUTER JOIN hucalisma_mEMZUCARA_TOPLAMLIMIT TOPLAMLIMIT                     --TOPLAM LIMIT
         ON ANA.ANAHTAR = TOPLAMLIMIT.ANAHTAR
         
      LEFT OUTER JOIN
      hucalisma_mEMZUCARA_NAKITRISK NAKITRISK                                       --NAKIT RISK
         ON ANA.ANAHTAR = NAKITRISK.ANAHTAR
         
      LEFT OUTER JOIN
      hucalisma_mEMZUCARA_GNAKDIRISK GNAKDIRISK                                      --G.NAKIT RISK
         ON ANA.ANAHTAR = GNAKDIRISK.ANAHTAR
         
      LEFT OUTER JOIN
      hucalisma_mEMZUCARA_TOPLAMRISK TOPLAMRISK                                      --TOPLAM RISK
         ON ANA.ANAHTAR = TOPLAMRISK.ANAHTAR
         
      LEFT OUTER JOIN hucalisma_mEMZUCARA_TEMERRUT TEMERRUT
         ON ANA.ANAHTAR = TEMERRUT.ANAHTAR
         
      LEFT OUTER JOIN
      hucalisma_SORUNLUKREDI SORUNLUKREDI                                    --SORUNLUKREDI
         ON ANA.ANAHTAR = SORUNLUKREDI.ANAHTAR
         
      LEFT OUTER JOIN hucalisma_VBLIMIT VBLIMIT                         --VAKIFBANK LIMIT
         ON ANA.ANAHTAR = VBLIMIT.ANAHTAR
         
      LEFT OUTER JOIN
      hucalisma_VBRISK VBRISK                                          --VAKIFBANK RISK
         ON ANA.ANAHTAR = VBRISK.ANAHTAR
  
 
       LEFT OUTER JOIN
      hucalisma_VBDISIRISK VBDISIRISK                                          --VAKIFBANK DISI RISK
         ON ANA.ANAHTAR = VBDISIRISK.ANAHTAR
 
    LEFT OUTER JOIN
      hucalisma_mEMZUCARA_VBNAKITRISK VBNAKITRISK                                          --VAKIFBANK NAKIT RISK
         ON ANA.ANAHTAR = VBNAKITRISK.ANAHTAR
 
    LEFT OUTER JOIN
      hucalisma_mEMZUCARA_VBDISINAKITRISK VBDISINAKITRISK                                          --VAKIFBANK DISI NAKIT RISK
         ON ANA.ANAHTAR = VBDISINAKITRISK.ANAHTAR
         
         
    LEFT OUTER JOIN
      hucalisma_mEMZUCARA_VBGNAKDIRISK VBGNAKDIRISK                                          --VAKIFBANK GNAKDI RISK
         ON ANA.ANAHTAR = VBGNAKDIRISK.ANAHTAR
 
  LEFT OUTER JOIN
      hucalisma_mEMZUCARA_VBDISIGNAKDIRISK VBDISIGNAKDIRISK                                          --VAKIFBANK DISI GAYRINAKDI RISK
         ON ANA.ANAHTAR = VBDISIGNAKDIRISK.ANAHTAR  
         
       


SELECT MUSTERINO,TCKIMLIKNO,VERGINO,DONEM,NAKITRISK,GNAKDIRISK,TOPLAMRISK,VB_RISK,VBDISI_RISK,
VBNAKIT_RISK,VBDISINAKIT_RISK AS DIGERBANKANAKITRISK,VBGNAKDI_RISK,VBDISIGNAKDI_RISK AS DIGERBANKAGNAKDIRISK
FROM hucalisma_mEMZUC
---------------------------------------------------------------------------------------------

import os   
import cx_Oracle
import sys
from datetime import timedelta, date, datetime
    

##os.chdir(os.path.dirname(os.path.abspath(__file__)))


##cx_Oracle.init_oracle_client(lib_dir=r"D:\Users\VB31910\Desktop\python_app\instantclient-basic-nt-19.8.0.0.0dbru\instantclient_19_8")



ora_conn = cx_Oracle.connect('VBTEFTIS2', 'Qwerty!2', 'exa-scan:1954/exa_tfts', encoding='UTF-8', nencoding='UTF-8')
ora_conn2 = cx_Oracle.connect('VBTEFTIS2', 'Qwerty!2', 'exa-scan:1954/exa_tfts', encoding='UTF-8', nencoding='UTF-8')
    

    
ora_cursor = ora_conn.cursor()
ora_cursorWrite = ora_conn2.cursor()


def daterange(start_date, end_date):
    for n in range(int ((end_date - start_date).days)):
        yield start_date + timedelta(n)
##yıl ay gün, start date dahil end date dahil değil
start_date = date(2021, 1, 1)
end_date = date(2024, 4, 1)
app_start = datetime.now()
for single_date in daterange(start_date, end_date):
    fisdateT = single_date.strftime('%d.%m.%Y')
    fisdateT1 = (single_date + timedelta(1)).strftime('%d.%m.%Y')
    print('{0} Processing: {1}'.format(datetime.now().strftime('%d.%m.%Y %H:%M:%S'), fisdateT))
    query = """ Select F.SUBEKODU AS FIS_SUBE_KODU,H.MUSTERINO AS VB_MUSTERI_NO,F.FISNO AS FIS_NO,
                F.KULLANICIKODU AS SICIL_NO,F.CASUALKOD AS CASUAL_KOD,TO_CHAR(TRUNC(F.ISLEMZAMANI),'YYYYMMDD') AS ISLEM_TARIHI,
                TO_CHAR(F.MUHASEBETARIHI,'YYYYMMDD') AS FIS_TARIHI,CASE WHEN H.BORCTUTARI=0 THEN  H.ALACAKTUTARI WHEN  H.ALACAKTUTARI=0 THEN  H.BORCTUTARI END AS HAREKET_MIKTARI,
                F.FISACIKLAMASI AS FIS_ACIKLAMA1,TO_CHAR(F.ISLEMZAMANI,'HH24:MI') AS ISLEM_SAATI, 
                CASE WHEN H.BORCTUTARI>0 THEN 'B' WHEN  H.ALACAKTUTARI>0 THEN 'A' END AS BA_KODU,
                H.SKONT AS MUHASEBE_HESAP_NO,F.TERMINALKODU from (select * from VITDWH.DW_MUH_FIS where
                KULLANICIKODU IN (select SUBSTR(SICIL,-5) as VBSIZSICIL from PERRISKSUISTIMALLISTEES where DURUM='KENDISI')) F 
                INNER JOIN VITDWH.DW_MUH_FISHAREKET H ON F.ID=H.FISID
                WHERE H.SKONT in ('01000','01100','01001','01101') 
                and F.MUHASEBETARIHI >= TO_DATE('{0}', 'dd.mm.YYYY') and F.MUHASEBETARIHI  < TO_DATE('{1}', 'dd.mm.YYYY') 
                and  H.MUHASEBETARIHI >= TO_DATE('{0}', 'dd.mm.YYYY') and H.MUHASEBETARIHI  < TO_DATE('{1}', 'dd.mm.YYYY') 
                and  F.ISLEMZAMANI >= TO_DATE('{0}', 'dd.mm.YYYY') and F.ISLEMZAMANI  < TO_DATE('{1}', 'dd.mm.YYYY') """.format(fisdateT, fisdateT1)
    ora_cursor.arraysize = 500
    try:    
        ora_cursor.execute(query)
    except cx_Oracle.DatabaseError as exc:
        error, = exc.args
        print("Oracle-Error-Code:", error.code)
        print("Oracle-Error-Message:", error.message)
        print(query)
        sys.exit(1)
    rows = []
    for row_data in ora_cursor:
        rows.append(row_data)
        if len(rows) >= 5000:
            ora_cursorWrite.executemany('''insert into VBTEFTIS2.PERRISKMESAIDISIHAM(FIS_SUBE_KODU, VB_MUSTERI_NO, FIS_NO, SICIL_NO, CASUAL_KOD, ISLEM_TARIHI, FIS_TARIHI, HAREKET_MIKTARI, FIS_ACIKLAMA1,ISLEM_SAATI, BA_KODU, MUHASEBE_HESAP_NO, TERMINALKODU) 
            values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)''', rows)
            rows = []
            ora_conn2.commit()
    if len(rows) > 0:
        ora_cursorWrite.executemany('''insert into VBTEFTIS2.PERRISKMESAIDISIHAM(FIS_SUBE_KODU, VB_MUSTERI_NO, FIS_NO, SICIL_NO, CASUAL_KOD, ISLEM_TARIHI, FIS_TARIHI, HAREKET_MIKTARI, FIS_ACIKLAMA1, ISLEM_SAATI, BA_KODU, MUHASEBE_HESAP_NO, TERMINALKODU) 
        values(:1,:2,:3,:4,:5,:6,:7,:8,:9,:10,:11,:12,:13)''', rows)
        rows = []
        ora_conn2.commit()
         
print("papiculo")




----- PYTHON



import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import math
import statsmodels.api as sm
import scipy.stats as stats 
from scipy.stats import norm
import warnings
import numpy as np
import imblearn
from sklearn.preprocessing import StandardScaler
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import GridSearchCV
from sklearn.model_selection import train_test_split,StratifiedKFold
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from sklearn import model_selection
from sklearn import metrics
from sklearn.metrics import fbeta_score, make_scorer, precision_score, recall_score, confusion_matrix, precision_recall_curve, accuracy_score, classification_report,f1_score
import xgboost as xgb
from sklearn.ensemble import GradientBoostingClassifier
from imblearn.over_sampling import SMOTE
from sklearn.model_selection import train_test_split, cross_validate
import itertools
from sklearn.pipeline import Pipeline, make_pipeline
from sklearn.model_selection import train_test_split, StratifiedKFold, cross_val_score
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import GridSearchCV, RandomizedSearchCV
from imblearn.pipeline import make_pipeline as make_pipeline_imb
from collections import Counter
from sklearn.metrics import ConfusionMatrixDisplay,plot_confusion_matrix #to plot confusion matric
from sklearn import metrics
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import (
    AdaBoostClassifier,
    GradientBoostingClassifier,
    RandomForestClassifier,
    BaggingClassifier,
    StackingClassifier
)

from xgboost import XGBClassifier
from sklearn import tree
from imblearn.under_sampling import RandomUnderSampler



#df=pd.read_excel('/content/HAMDATA_2511.xls')
df_PARAMETRE2=pd.read_excel('/content/Deneme_2302_20.xlsx')
#df_PARAMETRE_2=pd.read_excel('/content/PYTHON_MODEL_2.xlsx')


df_PARAMETRE=df_PARAMETRE.drop(columns=['ID'])
#df_PARAMETRE['NEGATIFLIKPUANI']=df_PARAMETRE['NEGATIF_BNK_BAKIYE']*(1+df_PARAMETRE['KKB_GECIKEN_BORC_PUAN'])
df_PARAMETRE['IZIN_TOPLAM']=df_PARAMETRE['IZIN_PUAN']+df_PARAMETRE['IZIN_PUAN2']
df_PARAMETRE=df_PARAMETRE.drop(columns=['IZIN_PUAN'])
df_PARAMETRE=df_PARAMETRE.drop(columns=['IZIN_PUAN2'])
df_PARAMETRE=df_PARAMETRE.drop(columns=['TEFTISKURULUCEZASI'])
df_PARAMETRE=df_PARAMETRE.drop(columns=['UNVAN_PARAMETRE_PUAN'])
df_PARAMETRE=df_PARAMETRE.drop(columns=['ATMPOS_ISLM_GUN_ON_MU'])
#df_PARAMETRE=df_PARAMETRE.drop(columns=['NEGATIF_BNK_BAKIYE'])


# Separating target column
X = df_PARAMETRE.drop(['ZMMT'],axis=1)
#X = pd.get_dummies(X,drop_first=True)
y = df_PARAMETRE['ZMMT']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.15, random_state=0, stratify=y)

print("counts of label '1': {}".format(sum(y_train==1)))
print("counts of label '0': {}".format(sum(y_train==0)))


model_name=[]
acc_train = []
acc_test = []
recall_train = []
recall_test = []
precision_train = []
precision_test = []
f1_train = []
f1_test = []


## Function to create confusion matrix
def make_confusion_matrix(model,  y_actual, labels=[1, 0], xtest=X_test):
    """
    model : classifier to predict values of X
    y_actual : ground truth  
    """
    y_predict = model.predict(xtest)
    cm = metrics.confusion_matrix(y_actual, y_predict, labels=[0, 1])
    df_cm = pd.DataFrame(cm, index=["Yes", "No"], columns=["Yes", "No"])
    
    group_counts = [f"{value:0.0f}" for value in cm.flatten()]   
    group_percentages = [f"{value:.2%}" for value in cm.flatten()/np.sum(cm)]
    
    labels = [f"{gc}\n{gp}" for gc, gp in zip(group_counts, group_percentages)]  
    labels = np.asarray(labels).reshape(2,2)
    
    plt.figure(figsize = (10, 7))
    sns.heatmap(df_cm, annot=labels, fmt='')
    plt.ylabel("Actual", fontsize=14)
    plt.xlabel("Predicted", fontsize=14);




def get_metrics_score(model,modelname,X_train_pass,X_test_df_pass,y_train_pass,y_test_pass):
    '''
    Function to calculate different metric scores of the model - Accuracy, Recall, Precision, and F1 score
    model: classifier to predict values of X
    train, test: Independent features
    train_y,test_y: Dependent variable
    threshold: thresold for classifiying the observation as 1
    '''
    # defining an empty list to store train and test results
    score_list=[]
    
    pred_train = model.predict(X_train_pass)
    pred_test = model.predict(X_test_df_pass)
    pred_train = np.round(pred_train)
    pred_test = np.round(pred_test)
    train_acc = accuracy_score(y_train_pass,pred_train)
    test_acc = accuracy_score(y_test_pass,pred_test)
    train_recall = recall_score(y_train_pass,pred_train)
    test_recall = recall_score(y_test_pass,pred_test)
    train_precision = precision_score(y_train_pass,pred_train)
    test_precision = precision_score(y_test_pass,pred_test)
    train_f1 = f1_score(y_train_pass,pred_train)
    test_f1 = f1_score(y_test_pass,pred_test)
    score_list.extend((train_acc,test_acc,train_recall,test_recall,train_precision,test_precision,train_f1,test_f1))
    model_name.append(modelname)  
    acc_train.append(score_list[0])
    acc_test.append(score_list[1])
    recall_train.append(score_list[2])
    recall_test.append(score_list[3])
    precision_train.append(score_list[4])
    precision_test.append(score_list[5])
    f1_train.append(score_list[6])
    f1_test.append(score_list[7])
    metric_names = ['Train_Accuracy', 'Test_Accuracy', 'Train_Recall', 'Test_Recall','Train_Precision',
                          'Test_Precision', 'Train_F1-Score', 'Test_F1-Score']
    cols = ['Metric', 'Score']
    records = [(name, score) for name, score in zip(metric_names, score_list)]
    display(pd.DataFrame.from_records(records, columns=cols, index='Metric').T)



models = []
models.append(('KNN', KNeighborsClassifier()))
models.append(('DTREE', DecisionTreeClassifier()))
models.append(('RFOR', RandomForestClassifier()))
models.append(('GBOST', GradientBoostingClassifier()))
models.append(('XGB', xgb.XGBClassifier()))


results = []  # Empty list to store all model's CV scores
names = []  # Empty list to store name of the models

# loop through all models to get the mean cross validated score
for name, model in models:
    scoring = "recall"
    kfold = StratifiedKFold(
        n_splits=5, shuffle=True, random_state=1
    )  # Setting number of splits equal to 5
    cv_result = cross_val_score(
        estimator=model, X=X_train, y=y_train, scoring=scoring, cv=kfold
    )
    results.append(cv_result)
    names.append(name)
    print("{}: {}".format(name, cv_result.mean() * 100))

# Plotting boxplots for CV scores of all models defined above
fig = plt.figure(figsize=(10, 7))

fig.suptitle("Algorithm Comparison")
ax = fig.add_subplot(111)

plt.boxplot(results)
ax.set_xticklabels(names)

plt.show()


X_train_S5, X_test_S5, y_train_S5, y_test_S5 = train_test_split(X, y, test_size=0.15, random_state=0, stratify=y)
rfc = RandomForestClassifier

# build model with SMOTE imblearn
smote_pipeline = make_pipeline_imb(SMOTE(random_state=4), \
                                   rfc())

smote_model_S5 = smote_pipeline.fit(X_train_S5, y_train_S5)
smote_prediction_S5 = smote_model_S5.predict(X_test_S5)

sm = SMOTE()

print("normal data distribution: {}".format(Counter(y)))
X_smote_S5, y_smote_S5 = sm.fit_resample(X_train_S5, y_train_S5)
print("SMOTE data distribution: {}".format(Counter(y_smote_S5)))
param_grid={'n_estimators':[50,100, 500],
    'max_depth':[1, 5, 10],
    'max_features':[*np.arange(0.1, 1.1, 0.1)],
}
scorer = make_scorer(recall_score)

rfc=RandomForestClassifier()
rfc_gs = GridSearchCV(estimator= rfc, param_grid=param_grid, scoring=scorer, cv=None, verbose= 5, n_jobs = -1)

rfc_grid = rfc_gs.fit(X_smote_S5,y_smote_S5)
rfc_opt = rfc_grid.best_estimator_
results = rfc_gs.cv_results_

print('='*20)
print("best params: " + str(rfc_gs.best_estimator_))
print("best params: " + str(rfc_gs.best_params_))
print('best score:', rfc_gs.best_score_)
print('='*20)


#Creating new pipeline with best parameters
rf_tuned_grid = RandomForestClassifier(
        max_depth=10,
        max_features=1,
        n_estimators=500
        
    )

# Fit the model on training data
rf_tuned_grid.fit(X_smote_S5, y_smote_S5)


rf_tuned_score=get_metrics_score(rf_tuned_grid ,' RandomForest with Grid Search',X_smote_S5,X_test,y_smote_S5,y_test)
make_confusion_matrix(rf_tuned_grid, y_test)

importances = rfc_opt.feature_importances_
indices = np.argsort(importances)[::-1] # Sort feature importances in descending order
names = [X.columns[i] for i in indices] # Rearrange feature names so they match the sorted feature importances
plt.figure(figsize=(15, 7)) # Create plot
plt.title("Feature Importance") # Create plot title
plt.bar(range(X_train_S5.shape[1]), importances[indices]) # Add bars
plt.xticks(range(X_train_S5.shape[1]), names, rotation=90) # Add feature names as x-axis labels
plt.show() # Show plot


Rforest_Importances = pd.DataFrame({"Variables":X_train_S5.columns,
                                   "Random_Forest_Importances":rfc_opt.feature_importances_}).sort_values("Random_Forest_Importances",ascending=False)


X_train_S5, X_test_S5, y_train_S5, y_test_S5 = train_test_split(X, y, test_size=0.15, random_state=0, stratify=y)
xgb = XGBClassifier

# build model with SMOTE imblearn
smote_pipeline = make_pipeline_imb(SMOTE(random_state=4), \
                                   xgb())

smote_model_S5 = smote_pipeline.fit(X_train_S5, y_train_S5)
smote_prediction_S5 = smote_model_S5.predict(X_test_S5)

sm = SMOTE()

print("normal data distribution: {}".format(Counter(y)))
X_smote_S5, y_smote_S5 = sm.fit_resample(X_train_S5, y_train_S5)
print("SMOTE data distribution: {}".format(Counter(y_smote_S5)))
param_grid={'n_estimators':[50,100, 500],
    'max_depth':[1, 5, 10],
    'max_features':[*np.arange(0.1, 1.1, 0.1)],
}
scorer = make_scorer(recall_score)

xgb=XGBClassifier()
xgb_gs = GridSearchCV(estimator= xgb, param_grid=param_grid, scoring=scorer, cv=None, verbose= 5, n_jobs = -1)

xgb_grid = xgb_gs.fit(X_smote_S5,y_smote_S5)
xgb_opt = xgb_grid.best_estimator_
results = xgb_gs.cv_results_

print('='*20)
print("best params: " + str(xgb_gs.best_estimator_))
print("best params: " + str(xgb_gs.best_params_))
print('best score:', xgb_gs.best_score_)
print('='*20)


#Creating new pipeline with best parameters
xgb_tuned_grid = XGBClassifier(
        max_depth=10,
        max_features=0.1,
        n_estimators=500
        
    )

# Fit the model on training data
xgb_tuned_grid.fit(X_smote_S5, y_smote_S5)


xgb_tuned_score=get_metrics_score(xgb_tuned_grid ,' XGB with Grid Search',X_smote_S5,X_test,y_smote_S5,y_test)
make_confusion_matrix(xgb_tuned_grid , y_test)


importances = xgb_opt.feature_importances_
indices = np.argsort(importances)[::-1] # Sort feature importances in descending order
names = [X.columns[i] for i in indices] # Rearrange feature names so they match the sorted feature importances
plt.figure(figsize=(15, 7)) # Create plot
plt.title("Feature Importance") # Create plot title
plt.bar(range(X_train_S5.shape[1]), importances[indices]) # Add bars
plt.xticks(range(X_train_S5.shape[1]), names, rotation=90) # Add feature names as x-axis labels
plt.show() # Show plot

X_train_S5, X_test_S5, y_train_S5, y_test_S5 = train_test_split(X, y, test_size=0.15, random_state=0, stratify=y)
dt = DecisionTreeClassifier

# build model with SMOTE imblearn
smote_pipeline = make_pipeline_imb(SMOTE(random_state=4), \
                                   dt())

smote_model_S5 = smote_pipeline.fit(X_train_S5, y_train_S5)
smote_prediction_S5 = smote_model_S5.predict(X_test_S5)

sm = SMOTE()

print("normal data distribution: {}".format(Counter(y)))
X_smote_S5, y_smote_S5 = sm.fit_resample(X_train_S5, y_train_S5)
print("SMOTE data distribution: {}".format(Counter(y_smote_S5)))
param_grid={ 'max_depth':[1,5,10,12,15],
    'min_samples_split':[2,3,4,6,8,10]
}
scorer = make_scorer(recall_score)

dt = DecisionTreeClassifier()
dt_gs = GridSearchCV(estimator= dt, param_grid=param_grid, scoring=scorer, cv=None, verbose= 5, n_jobs = -1)

dt_grid = dt_gs.fit(X_smote_S5,y_smote_S5)
dt_opt = dt_grid.best_estimator_
results = dt_gs.cv_results_

print('='*20)
print("best params: " + str(dt_gs.best_estimator_))
print("best params: " + str(dt_gs.best_params_))
print('best score:', dt_gs.best_score_)
print('='*20)

#Creating new pipeline with best parameters
dt_tuned_grid = DecisionTreeClassifier(
        max_depth=10,
        min_samples_split=2,
       
        
    )

# Fit the model on training data
dt_tuned_grid.fit(X_smote_S5, y_smote_S5)


dt_tuned_score=get_metrics_score(dt_tuned_grid ,'DT with Grid Search',X_smote_S5,X_test,y_smote_S5,y_test)
make_confusion_matrix(dt_tuned_grid , y_test)


importances = dt_opt.feature_importances_
indices = np.argsort(importances)[::-1] # Sort feature importances in descending order
names = [X.columns[i] for i in indices] # Rearrange feature names so they match the sorted feature importances
plt.figure(figsize=(15, 7)) # Create plot
plt.title("Feature Importance") # Create plot title
plt.bar(range(X_train_S5.shape[1]), importances[indices]) # Add bars
plt.xticks(range(X_train_S5.shape[1]), names, rotation=90) # Add feature names as x-axis labels
plt.show() # Show plot


from lightgbm.sklearn import LGBMClassifier


X_train_S5, X_test_S5, y_train_S5, y_test_S5 = train_test_split(X, y, test_size=0.15, random_state=0, stratify=y)
lgb = LGBMClassifier   

# build model with SMOTE imblearn
smote_pipeline = make_pipeline_imb(SMOTE(random_state=4), \
                                   lgb())

smote_model_S5 = smote_pipeline.fit(X_train_S5, y_train_S5)
smote_prediction_S5 = smote_model_S5.predict(X_test_S5)

sm = SMOTE()

print("normal data distribution: {}".format(Counter(y)))
X_smote_S5, y_smote_S5 = sm.fit_resample(X_train_S5, y_train_S5)
print("SMOTE data distribution: {}".format(Counter(y_smote_S5)))
param_grid={  
      
        'max_depth': (2,5,8,10,12,15,20),
        'min_data_in_leaf': (40,60,80,90,120,150),
        'num_leaves': (500,800,1000,1200,1500)
}
scorer = make_scorer(recall_score)

lgb = LGBMClassifier()   
lgb_gs = GridSearchCV(estimator= lgb, param_grid=param_grid, scoring=scorer, cv=None, verbose= 5, n_jobs = -1)

lgb_grid = lgb_gs.fit(X_smote_S5,y_smote_S5)
lgb_opt = lgb_grid.best_estimator_
results = lgb_gs.cv_results_

print('='*20)
print("best params: " + str(lgb_gs.best_estimator_))
print("best params: " + str(lgb_gs.best_params_))
print('best score:', lgb_gs.best_score_)
print('='*20)


#Creating new pipeline with best parameters
lgb_tuned_grid =  LGBMClassifier (
        max_depth=8,
        min_data_in_leaf=40,
        num_leaves=500
       
        
    )

# Fit the model on training data
lgb_tuned_grid.fit(X_smote_S5, y_smote_S5)


lgb_tuned_score=get_metrics_score(lgb_tuned_grid ,'LGB with Grid Search',X_smote_S5,X_test,y_smote_S5,y_test)
make_confusion_matrix(lgb_tuned_grid , y_test)


importances = lgb_opt.feature_importances_
indices = np.argsort(importances)[::-1] # Sort feature importances in descending order
names = [X.columns[i] for i in indices] # Rearrange feature names so they match the sorted feature importances
plt.figure(figsize=(15, 7)) # Create plot
plt.title("Feature Importance") # Create plot title
plt.bar(range(X_train_S5.shape[1]), importances[indices]) # Add bars
plt.xticks(range(X_train_S5.shape[1]), names, rotation=90) # Add feature names as x-axis labels
plt.show() # Show plot

anliData=pd.read_excel('/content/KASIM_PERSONEL_CANLI.xlsx')

#CanliData['NEGATIFLIKPUANI']=CanliData['NEGATIF_BNK_BAKIYE']*(1+CanliData['KKB_GECIKEN_BORC_PUAN'])
CanliData['IZIN_TOPLAM']=CanliData['IZIN_PUAN']+CanliData['IZIN_PUAN2']
CanliData=CanliData.drop(columns=['IZIN_PUAN'])
CanliData=CanliData.drop(columns=['IZIN_PUAN2'])
#CanliData=CanliData.drop(columns=['NEGATIF_BNK_BAKIYE'])
CanliData=CanliData.drop(columns=['SICIL'])
CanliData=CanliData.drop(columns=['TEFTISKURULUCEZASI'])
CanliData=CanliData.drop(columns=['UNVAN_PARAMETRE_PUAN'])
#CanliData=CanliData.drop(columns=['ATMPOS_ISLM_GUN_ON_MU'])


# save the model to disk
filename = 'finalized_model.sav'
joblib.dump(rf_tuned_grid, filename)

# load the model from disk
loaded_model = joblib.load(filename)
